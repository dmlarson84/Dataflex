/scr                                              deldisb.frm
อออออออ< Merchant Check Information >อออออออออออออออออออ<deldisb.frm>ออออออออออ
 Merchant..{ _____.  ______________________________  Disburse Date.{ __/__/____
 Merchant Check #..{ ______.  Amt..{ _____.__
 Prosecutor Check #{ ______.  Amt..{ _____.__
อออออออออออออออออออออออออออออออออออออออออออออออออออออออ< Check Detail >ออออออออ
ฺฤฤฤฤฤฤฤฤ _________ ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฟ Offense             Disb     Pros
  ID#             Name                 Ctrl#  Receipt#     Amt      Amt     Sel
ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤ
/dis                     resident
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
 _____. ______________________________  __.   ______.   _____.__  _____.__   _
ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ  Keys to Highlight    M)ark to select or deselect    <ESC> when finished บ
บ                            PgDn or PgUp for more                           บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/chk
ออออออออ< Issue Manual Checks >ออออออออออออออออออออออออออออออออออออออออออออ

ฺฤฤฤ< Merchant Check >ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฟ
ณ                                                Number..[ ______. ]      ณ
ณ    ____________________________                                         ณ
ณ                                                Date..{ __/__/____       ณ
ณ                                                                         ณ
ณ Pay to the                                                              ณ
ณ Order of  ___________________________________________________$ _____.__ ณ
ณ                                                                         ณ
ณ                                                                         ณ
ณ    ____________________________  _______________                        ณ
ภฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤู
/chk_pros
ออออออออ< Issue Manual Checks >อออออออออออออออออออออออออออออออออออออออออออ

ฺฤฤฤ< Prosecutor Check >ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฟ
ณ                                                 Number..[ ______. ]     ณ
ณ    ____________________________                                         ณ
ณ                                                 Date..{ __/__/____      ณ
ณ                                                                         ณ
ณ Pay to the                                                              ณ
ณ Order of  ___________________________________________________$ _____.__ ณ
ณ                                                                         ณ
ณ                                                                         ณ
ณ    ____________________________  _______________                        ณ
ภฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤู
/msg1           resident
ษออออ< msg1 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ  _)ontinue,   _)ark selections,  _)uit to menu,  _)eturn to receipt/disburse บ
บ              Please enter your option....................{ _                 บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg2           resident
ษออออ< msg2 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ   Will Prosecutor check # _____. In the amount of _____.__ also be voided ?  บ
บ                                                                              บ
บ                       Response of (Y/N) Please.....{ _                       บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg3           resident
ษออออ< msg3 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                              บ
บ     Has Prosecutor Check #  ______.  Cleared the Bank, (Y/N) ? { _           บ
บ                                                                              บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg4           resident
ษออออ< msg4 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ             _____________    _____________    _____________                บ
บ                                                                              บ
บ              Has Merchant check cleared the bank ? { _                       บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg5           resident
ษออออ< msg5 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ             A disbursement record could not be found, System will            บ
บ                 return to the receipt / disbursement screen.                 บ
บ                         Press <SPACE> to continue                            บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg6
ษออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ ____________________________________ : ______.  _  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg7
ษอออ< msg7 >อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ  You have voided merchant check # _____., Prosecutor Check # _____. and    บ
บ  deleted one or more disbursement record/s.                                บ
บ   Your Options Are:                                                        บ
บ         _)ssue manual checks                                               บ
บ         _)et the computer cut checks at the next print checks routine      บ
บ         _)eturn to the receipt/disbursement screen                         บ
บ                                                                            บ
บ           Please enter your selection ..............[ _ ]                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg8
ษอออ< msg8 >อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ  You have voided merchant check # _____., without voiding the prosecutor   บ
บ  check.                                                                    บ
บ                                                                            บ
บ   Your Options Are:                                                        บ
บ         _)ssue manual checks                                               บ
บ         _)et the computer cut checks at the next print checks routine      บ
บ         _)eturn to the receipt/disbursement screen                         บ
บ         _)xit to menu                                                      บ
บ           Please enter your selection ..............[ _ ]                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg9
ษอออ< msg9 >อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ  All disburse records within this batch have been deleted and there are    บ
บ   no disburse records available to issue new checks against.               บ
บ  Please make any/all necessary adjustments before entering new offenses    บ
บ  receipts or disbursements.                                                บ
บ   Your Options Are:                                                        บ
บ                                                                            บ
บ         R)eturn to the receipt/disbursement screen                         บ
บ         Q)uit to the Menu                                                  บ
บ           Please enter your selection ..............[ _ ]                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg10
ษอออ< msg10 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ  All selected records within this batch have been deleted and there are    บ
บ   no disburse records available to issue a new merchant Check.             บ
บ  However the prosecutor check was voided and it will be necessary to       บ
บ  issue a manual check to the prosecutor at this time.                      บ
บ                                                                            บ
บ                    Press <SPACE BAR> to continue                           บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg11
ษอออ< msg11 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ  You have voided merchant check # _____.                                   บ
บ   Your Options Are:                                                        บ
บ         _)ssue a manual check to the merchant                              บ
บ         _)et the computer cut checks at the next print checks routine      บ
บ           and return to the receipt/disbursement screen                    บ
บ         _)xit to the Menu                                                  บ
บ                                                                            บ
บ           Please enter your selection ..............[ _ ]                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/msg12
ษอออ< msg12 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ  You have voided merchant check # _____. and Prosecutor Check # _____.     บ
บ    A manual check must be issued to the Prosecutor but you may elect to    บ
บ    have the computer issue the merchant check.                             บ
บ                                                                            บ
บ    Do you wish to issue a manual check to the merchant ? .(Y/N)..[ _ ]     บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/help      resident
ออออออออออ< Help >ออออออออออออออออออออออออออออออออออออออออออออ< page one >อออออ

   You have selected to delete one or more disbursement records that have had
 checks issued to the merchant and prosecutor.

   You may delete a disbursement record after the merchant check has been
 voided, but if you do not void the prosecutor check at the same time then
 you will be required to issue a manual check to the merchant.

   If the prosecutor check is voided at the same time as the merchant check
 then you may issue manual checks or allow the computer to cut checks the
 next time you print checks.

   You may be asked to enter some information about check#, def ID#, amounts,
dates and merchant ID# , Please be prepared with this information.

    You may select up to 100 disburse records to delete


                      Press <SPACE> Bar to return
/blank          resident
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
ฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑฑ
/EXIT            RESIDENT
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ










              Please Standby, Closing Files and returning to the Menu
/standby         resident
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ










              Please Standby, Loading Selected Program To Memory
/standby2
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ








              Please Standby, Searching for Merchant Check Detail
/ex               resident
ษออออ< ex >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                              บ
บ The merchant check shown in the above header will be voided and any disburse บ
บ records that you select in the following routines will be deleted.           บ
บ                                                                              บ
บ Defendants will be given credit for any deleted disbursements and all        บ
บ G/L Journals, check registers and bank codes will be updated.                บ
บ                                                                              บ
บ                                                                              บ
บ Options:  _)ontinue,  _)eturn to receipt/disbursement,  _)xit to menu..{ _   บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/exx              resident
ษออออ< exx >อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                              บ
บ The merchant check shown in the above header will be voided and all          บ
บ G/L Journals, check registers and bank codes will be updated.                บ
บ     Your Options are:                                                        บ
บ           _)ontinue                                                          บ
บ           _)eturn to receipt/disbursement screen                             บ
บ           _)xit to menu                                                      บ
บ              Please enter your choice ................[ _ ]                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/stor
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
/stor2             //disburse recnum storage for update_disb routine
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
 ______. ______. ______. ______. ______. ______. ______. ______. ______. ______.
/vid
ษอออออออ< vid >อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                             บ
บ      There are ___. missing check numbers between the last check            บ
บ                                                                             บ
บ      number of _______. and your starting batch Number of ______.           บ
บ                                                                             บ
บ      Will these  ___. checks be voided (Y/N)..........{ _                   บ
บ                                                                             บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/VID2
ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                             บ
บ              Please Standby Now Voiding Check #..{ ______.                  บ
บ                                                                             บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/warn1
ษอออออ< warn1 >อออออออออออออออออออออป
บ                                   บ
บ    Cannot find bank code "HC"     บ
บ  Please check the bank code file  บ
บ                                   บ
บ     Press <SPACE> to continue     บ
ศอออออออออออออออออออออออออออออออออออผ
/finis
ษออออ< finis >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                           บ
บ    Options:                                                               บ
บ                                                                           บ
บ           _)eturn to receipt/disbursement entry screen                    บ
บ                                                                           บ
บ           _)xit to Menu                                                   บ
บ                                                                           บ
บ                                                                           บ
บ              Please enter your option.............[ _ ]                   บ
บ                                                                           บ
บ                                                                           บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

/info

file created 03-21-91 for purpose of allowing the selection of disburse
     records to be deleted and the issuing of manual checks to replace
     the voided ones

additional programming on 04/19/91 by gary grooms (unfinished as of this date)


/*
Use y2k.pkg
Read_dfini "df23ini.cfg"
//----------------- Cannot Run Program From Command Line (DOS)
IF NEXT_MENU LE 0 ABORT
INTEGER USER_NUMB USER$_ACCESS   //must be first integers defined in program
integer disb_recnum disb_delete
STRING USER$ 30
MOVE '' TO USER$
MOVE 0 TO USER$_ACCESS
#include Calcdate.inc
#include macs.frm
//------------------------------------------------------------

//-------------- Find Logged On User For Program Use
OPEN USERX
CLEAR USERX
MOVE USER_NUMB TO USERX.USER_NUMB
FIND EQ USERX BY INDEX.1
MOVE USERX.USER_NAME TO USER$
MOVE USERX.ACCS_LEVL TO USER$_ACCESS
//----------------------------------------------------




#COMMAND KEYFLUSH .
   [] REPEAT
   KEYCHECK LOOP
#ENDCOMMAND

//=======> Scroll Macro <========================================================

#COMMAND SCRL R R R R R R R R R 
        KEYPROC OFF                                    
#IFDEF SCRL$ANS
#ELSE
        STRING SCRL$ANS 1                     
        INTEGER SCRL$ROW$NUM SCRL$EXTRA SCRL$TR$1 SCRL$TR$2
        INTEGER SCRL$T$COUNT SCRL$L$COUNT
        INDICATOR ok_disb GOAHEAD  first_pass
#ENDIF
        BLANKFORM !1            
        MOVE 0 TO SCRL$T$COUNT
        MOVE 1 TO SCRL$L$COUNT
        indicate first_pass true        // used to hilight/unhilight sel field
        SCRL$FORWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        indicate first_pass false
        IF SCRL$T$COUNT NE 0 ;
            BEGIN
                SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
            END
        page scr
        PAGE !1
        REPEAT
                INKEY SCRL$ANS
                UPPERCASE SCRL$ANS
                IF SCRL$ANS EQ 'M' BEGIN
                 MOVE (( SCRL$L$COUNT - 1 ) * !3) TO WINDOWINDEX
                 GOSUB mark_disb
                END

                [KEY.UP] IF SCRL$T$COUNT NE 0 ;
                    BEGIN
                        SCRL$UP$ROUTINE   !1 !2 !3 !4 !5 !6 !7 !8 !9
                    END

                [KEY.DOWN] IF SCRL$T$COUNT NE 0 ;
                    BEGIN
                        SCRL$DOWN$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
                    END

                [KEY.PREVIOUS]  ;
                    BEGIN
                        SCRL$BACKWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9         // Determine & act
                    END

                [KEY.NEXT] ;
                    BEGIN
                        SCRL$FORWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
                    END

                [key.help] gosub helpkey

                MOVE '' TO SCRL$ANS
                INDICATE SCRL$VALID AS [KEY.ESCAPE]    
                [NOT SCRL$VALID] LOOP 

        [KEY.ESCAPE] MOVE 0 TO SCRL$L$COUNT // So we know escape was pressed
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE SCRL$L$COUNT TO WINDOWINDEX
        SCREENMODE 1 OFF
        KEYPROC ON                                      // Restore keyprocs
#ENDCOMMAND                                            // Scroll Macro

//=====> Scroll Forward Routine <==============================================

#COMMAND SCRL$FORWARD$ROUTINE R R R R R R R R R
        INDICATE SCRL.FOUND.STATUS AS [FOUND]
        MOVE 0 TO SCRL$T$COUNT
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE 1 TO SCRL$L$COUNT
        CLEAR !4
        GOSUB !8
        MOVE 1 TO SCRL$ROW$NUM
        REPEAT
                 [set_first] FIND GE !4 BY !5
                 [~ set_first] find gt !4 by !5
                        [FOUND] GOSUB !9
                        [found][ok_disb] BEGIN
                                INCREMENT SCRL$T$COUNT
                                MOVE ((SCRL$ROW$NUM - 1) * !3) TO WINDOWINDEX
                                GOSUB !6
                                INCREMENT SCRL$ROW$NUM
                            END
                        [found] if SCRL$ROW$NUM LE !2 LOOP
        SCRL$CLEAR$ROW !1 !2 !3 !4 !5 !6 !7 !8 !9
        SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        INDICATE FOUND AS [SCRL.FOUND.STATUS]
#ENDCOMMAND

//=====> Scroll Backward Routine <=============================================

#COMMAND SCRL$BACKWARD$ROUTINE
        INDICATE SCRL.FOUND.STATUS AS [FOUND]
        MOVE 0 TO SCRL$T$COUNT

        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE 1 TO SCRL$L$COUNT

        CLEAR !4
        GOSUB !7
        MOVE !2 TO SCRL$ROW$NUM

        REPEAT
                FIND LT !4 BY !5
                        [FOUND] GOSUB !9
                        [FOUND] [ok_disb] ;
                            BEGIN
                                INCREMENT SCRL$T$COUNT
                                MOVE ((SCRL$ROW$NUM - 1) * !3) TO WINDOWINDEX
                                GOSUB !6
                                IF scrl$row$num EQ 1 MOVE !4.RECNUM TO scrl$tr$1
                                IF scrl$row$num NE 1 MOVE !4.RECNUM TO scrl$tr$2
                                MOVE (SCRL$ROW$NUM - 1) TO SCRL$ROW$NUM
                            END
                      [found]  IF SCRL$ROW$NUM GE 1 LOOP
                      [FINDERR] BEGIN
                            SCRL$CLEAR$BOTTOM !1 !2 !3 !4 !5 !6 !7 !8 !9
                            SCRL$FORWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
                        END

        SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        INDICATE FOUND AS [SCRL.FOUND.STATUS]
#ENDCOMMAND

//=====> Scroll Clear Row <====================================================

#COMMAND SCRL$CLEAR$ROW
        FOR SCRL$ROW$NUM FROM SCRL$ROW$NUM TO !2
                MOVE ((SCRL$ROW$NUM - 1) * !3) TO WINDOWINDEX
                MOVE 0 TO SCRL$EXTRA
                WHILE SCRL$EXTRA LT !3
                        BLANKFORM !1.1&
                        INCREMENT SCRL$EXTRA
                        INCREMENT WINDOWINDEX
                END
        LOOP
#ENDCOMMAND

//=====> Scroll Clear Bottom <=================================================

#COMMAND SCRL$CLEAR$BOTTOM
        MOVE ((!3 * !2) - !3) TO WINDOWINDEX

        WHILE WINDOWINDEX LT (!2 * !3)
                BLANKFORM !1.1&
                INCREMENT WINDOWINDEX
        END
#ENDCOMMAND

//=====> Scroll Hilite Routine <===============================================

#COMMAND SCRL$HILITE$ROUTINE
    MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX
    SCREENMODE 112 ON
    WHILE WINDOWINDEX LT (SCRL$L$COUNT * !3)
     DISPLAY !1.1& TO !1.1&
        INCREMENT WINDOWINDEX
    END
    SCREENMODE 1 On
#ENDCOMMAND

//=====> Scroll Unhilite Routine <=============================================

#COMMAND SCRL$UNHILITE$ROUTINE
    MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX
    SCREENMODE 1 ON
    WHILE WINDOWINDEX LT (SCRL$L$COUNT * !3)
     DISPLAY !1.1& TO !1.1&
        INCREMENT WINDOWINDEX
    END
    SCREENMODE 1 OFF 
#ENDCOMMAND

//=====> Up Routine <==========================================================

#COMMAND SCRL$UP$ROUTINE
    REPEAT
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE (SCRL$L$COUNT - 1) TO SCRL$L$COUNT
        IF SCRL$L$COUNT LT 1  MOVE 1 TO SCRL$L$COUNT
            MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX
        IF !1.1& EQ '' IF SCRL$L$COUNT GE 1 LOOP
    IF SCRL$L$COUNT LT 1  MOVE 1 TO SCRL$L$COUNT
    SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
#ENDCOMMAND

//=====> Down Routine <========================================================

#COMMAND SCRL$DOWN$ROUTINE
    REPEAT
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE (SCRL$L$COUNT + 1) TO SCRL$L$COUNT
        IF SCRL$L$COUNT GT !2  MOVE 1 TO SCRL$L$COUNT
        MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX
        if !1.1& eq '' move (!2 + 1) to scrl$l$count    // added to stop (0) display
        IF !1.1& EQ '' IF SCRL$L$COUNT LE !2 LOOP
    IF SCRL$L$COUNT GT !2 MOVE 1 TO SCRL$L$COUNT
    SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
#ENDCOMMAND

//=====> Scroll Macro End <====================================================

//=====< open files >==========================================================


MULTI$ OPEN SETUP DEFENDNT RESTITUT DISBURSE OFFENSE RECHANGE TRANSACT
MULTI$ OPEN LEDGER JOURNALS REF MERCHANT BANK CHECKS RECON DISTRIB

//======< declarations >===============================================

string answ 1 payee 25 year 4

indicator set_first  vmer vpros ctrl_match pros_cleared inhead merch pros
indicator no_issue process mer_chk pros_chk xmer xpros do_checks del_disb
indicator manchk_m manchk_p nopros


integer count old_dex stor_dex highrec chknum  aday amonth ayear
integer missing bday bmonth byear cday cmonth cyear spinner

number accum_pros accum_mfees accum_hcamt accum_disbamt
number accum_check accum_merfees accum_prosfees
number tot_chk tot_mfees tot_pfees

date today
date_macro_init
gosub clear_variables



//=======< set pages >=========================================================

page set dis at 8 0
page set ex at 6 0
page set exx at 6 0
page set msg1 at 20 0 colors 79 79    //colors set to 79 79 only highlights to
page set msg2 at 8 0 colors 79 79     //to a brighter screen on mono monitors
page set msg3 at 8 0 colors 79 79
page set msg4 at 8 0 colors 79 79
page set msg6 at 8 11 colors 79 79
page set msg7 at 6 0
page set msg8 at 6 0
page set msg9 at 6 0 colors 79 79
page set msg10 at 6 0 colors 79 79
page set msg11 at 6 0
page set msg12 at 6 0
page set vid at 6 0
page set vid2 at 6 0
page set warn1 at 10 10
page set finis at 6 1
page set blank at 4 0
page set chk at 4 2
page set chk_pros at 4 2
//========< Main Program >=====================================================

clear bank
  move 'HC' to bank.code
  find eq bank by index.1
  [finderr] begin
     page warn1
     inkey answ
     page exit
     abort
  end

sysdate4 today


MOVE '' TO YEAR
DECOMPOSE_DATE TODAY TO ADAY AMONTH AYEAR

CLEAR SETUP
MOVE AYEAR TO SETUP.YEAR
FIND EQ SETUP BY INDEX.1

indicate del_disb as disb_delete eq (9)
move (1) to spinner

indicate inhead true
clearform stor   //clear any residual integers that may be in the array page

clear disburse checks
  move disb_recnum  to disburse.recnum
    find eq disburse by recnum
    [found] begin
      relate disburse
        move disburse.dispdt to checks.jr_date
        //decompose_date disburse.dispdt to aday amonth ayear
        move disburse.chkno to checks.check_num
        move 'HC' to checks.bank_code
           find eq checks by index.1
      display merchant.idno to scr.1
      display merchant.name to scr.2
      display disburse.dispdt to scr.3
      display disburse.chkno to scr.4
      display checks.chk_amt to scr.5
      display disburse.pckno to scr.6
      display disburse.pros_total to scr.7
      screenmode 79 on
      display 'Defendant' to scr.8
      screenmode 1 on
    end
page scr
page blank
keyflush
 screenmode 207 on
 display 'W A R N I N G' to msg4.1
 screenmode 79 on
 display 'W A R N I N G' to msg4.2
 screenmode 207 on
 display 'W A R N I N G' to msg4.3
 screenmode 79 on
    page msg4
      repeat
      move '' to msg4.4
        accept msg4.4
          screenmode 1 on
          if ~ msg4.4 in 'YyNn' loop
          indicate vmer as msg4.4 in "Nn"
          if msg4.4 in 'Yy' chain "hotrest"
 screenmode 112 on
 display scr.6 to msg3.1
 screenmode 79 on
 page msg3
 repeat
   clearform msg3.2
   accept msg3.2
   screenmode 1 on
     if ~ msg3.2 in 'YyNn' loop
     indicate pros_cleared as msg3.2 in 'Yy'
[~ pros_cleared] gosub qs3
[pros_cleared] indicate vpros false
[pros_cleared] Begin 
     clearxy 24 0
     gotoxy  24 0
     show " pros_cleared " 
     inkey answ
end
[vpros] Begin 
     clearxy 24 0
     gotoxy  24 0
     show " pros voided " 
     inkey answ
end

[del_disb] begin
    display "C" to ex.1
    display "R" to ex.2
    display "Q" to ex.3
      repeat
        clearform ex.4
         accept ex.4
    uppercase ex.4
      if ~ ex.4 in  "CRQ" loop
      if ex.4 eq "Q" gosub qs1
      if ex.4 eq "R" gosub qs2
end
[~ del_disb] begin
    display "C" to exx.1
    display "R" to exx.2
    display "Q" to exx.3
      repeat
        clearform exx.4
         accept exx.4
    uppercase exx.4
      if ~ exx.4 in  "CRQ" loop
      if exx.4 eq "Q" gosub qs1
      if exx.4 eq "R" gosub qs2
      goto pass_stor
end
//page ex
page standby2
indicate inhead false
look_up:
scrl dis 12 7 disburse index.7 display_disb findlt findgt test_disb
[key.escape] begin
    display 'C' to msg1.1
    display 'M' to msg1.2
    display 'Q' to msg1.3
    display 'R' to msg1.4
    page msg1
  repeat
    clearform msg1.5
      screenmode 79 on
      accept msg1.5
      screenmode 1 on
        if ~ msg1.5 in "CcMmQqRr" loop
        if msg1.5 in 'Mm' goto look_up
        if msg1.5 in 'Qq' gosub qs1
        if msg1.5 in 'Rr' gosub qs2
 end
indicate no_issue as scr.5 le accum_disbamt
indicate inhead true
page blank
screenmode 112 on
display "  Reversing Journal Entries  " to msg6.1
display scr.4 to msg6.2
blankform msg6.3
screenmode 1 on
page msg6
   move (0) to windowindex
     while windowindex lt (100)

       if stor.1& ne (0) begin
           clear disburse
           move stor.1& to disburse.recnum
           find eq disburse by recnum
           [finderr] goto pass_stor
           [found] begin
            relate disburse
            gosub reverse_gldisb
            gosub update_def_credit
            move '' to offense.active
            reread offense
            saverecord offense
            unlock
            delete disburse
            move (0) to stor.1&
           end
       end
           increment windowindex
    end

pass_stor:  //******************< Pass Stor >*******************************


page blank
gosub total$
gosub void_mer_chk
[vpros] gosub void_pros_chk
page blank
gosub issue_checks
page blank
// update remaining disburse records with new data
screenmode 240 on
display "    Updating Registers       " to msg6.1
page msg6
screenmode 1 on
[do_checks] gosub update_disb

do_finis:
page blank
display 'R' to finis.1
display 'Q' to finis.2
 repeat
   clearform finis.3
   accept finis.3
   uppercase finis.3
    if ~ finis.3 in 'RQ' loop
    if finis.3 eq "R" page standby
      else page exit
    if finis.3 in 'Q' abort
    chain "hotrest"


//========< Subroutines >=======================================================

clear_variables:
    move (0) to accum_pros
    move (0) to accum_hcamt
    move (0) to accum_mfees
    move (0) to accum_disbamt
    move (0) to accum_check
    move (0) to accum_merfees
    move (0) to accum_prosfees
    move (0) to tot_chk
    move (0) to tot_mfees
    move (0) to tot_pfees
    move (0) to old_dex
    move (0) to stor_dex
    move (0) to count
    move (0) to highrec
    move '' to payee
return


display_disb:
  screenmode 1 on
  movenum disburse.id_no to dis.1&
  movestr defendnt.name to dis.2&
  movenum disburse.seqno to dis.3&
  movenum disburse.seq_no to dis.4&
  movenum disburse.dispamt to dis.5&
  movenum disburse.prosamt to dis.6&
  display offense.mark to dis.7&
  INDICATE SET_FIRST FALSE
return

//******

findlt:
  move scr.4 to disburse.chkno
  move scr.1 to disburse.merchant_idno
  move dis.1 to disburse.id_no
return

//******

findgt:
   [set_first] begin
      clear disburse
      move scr.4 to disburse.chkno
      move scr.1 to disburse.merchant_idno
   end
   [~ set_first] begin
      move scr.4 to disburse.chkno
      move scr.1 to disburse.merchant_idno
      move dis.80 to disburse.seqno
      move dis.81 to disburse.seq_no
      move dis.78 to disburse.id_no
      move dis.78 to disburse.idno
   end
return

//******

test_disb:
   indicate set_first false
   indicate ok_disb as disburse.chkno eq scr.4
   [ok_disb] relate disburse
   [ok_disb] if ((disburse.idno * 100) + disburse.seqno)  gt highrec begin
      if offense.mark eq '*'begin
         [multiuser] reread offense
         move '' to offense.mark
         saverecord offense
         [multiuser] unlock
      end
     move ((disburse.idno * 100 ) + disburse.seqno) to highrec
   end

return

//******

mark_disb:
   if dis.7& eq '' begin
     screenmode 112 on
     move '*' to dis.7&
     screenmode 1 on
          clear disburse
          move dis.1& to disburse.id_no
          move dis.1& to disburse.idno
          move dis.3& to disburse.seqno
          move dis.4& to disburse.seq_no
            find eq disburse by index.5
            [found] begin
               relate disburse
               [multiuser] reread disburse offense
     calc (accum_hcamt + offense.ckamt) to accum_hcamt
     [vpros] calc (accum_pros + disburse.prosamt) to accum_pros
     calc (accum_disbamt + disburse.dispamt) to accum_disbamt
     calc (accum_mfees + offense.mfee) to accum_mfees
               move dis.7& to offense.mark
               saverecord offense
               [multiuser] unlock
               move windowindex to old_dex
               move stor_dex to windowindex
                 move disburse.recnum to stor.1&
                 increment stor_dex
               clear disburse
            end
     goto pass_mark
   end
   if dis.7& eq '*'begin
     screenmode 112 on
     move '' to dis.7&
     screenmode 1 on
          clear disburse
          move dis.1& to disburse.id_no
          move dis.1& to disburse.idno
          move dis.3& to disburse.seqno
          move dis.4& to disburse.seq_no
            find eq disburse by index.5
              [found] begin
                 relate disburse
                 [multiuser] reread disburse offense
     calc (accum_hcamt - offense.ckamt) to accum_hcamt
     [vpros] calc (accum_pros - disburse.prosamt) to accum_pros
     calc (accum_disbamt - disburse.dispamt) to accum_disbamt
     calc (accum_mfees - offense.mfee) to accum_mfees
                 move '' to offense.mark
                 saverecord offense
                 [multiuser] unlock
              end
      move windowindex to old_dex
      indicate ctrl_match false
      move (0) to windowindex
        while [~ ctrl_match]
          if stor.1& eq disburse.recnum begin
          move (0) to stor.1&
          indicate ctrl_match true
        end
      increment windowindex
      until windowindex eq 100
   end
  pass_mark:
  move old_dex to windowindex
return


qs1:
   gosub clear_offs
   page exit
   abort
return

qs2:
   gosub clear_offs
   page standby2
   chain "hotrest"
return


qs3:
    screenmode 112 on
    display disburse.pckno to msg2.1
    display disburse.pros_total to msg2.2
    page msg2
      repeat
        clearform msg2.3
        screenmode 79 on
         accept msg2.3
           screenmode 1 on
           if ~ msg2.3 in 'YyNn' loop
           indicate vpros as msg2.3 in 'Yy'
return

helpkey:
   page help
   inkey answ
   page scr
   [~ inhead] page dis
return



nodisb:
  page msg5
  inkey answ
  page standby2
  chain "hotrest"
return


void_mer_chk:
   indicate merch true
   indicate pros false
   pad scr.2 to payee 25
   move scr.4 to chknum
   screenmode 112 on
   display "    Voiding Merchant Check #    "  to msg6.1
   display chknum to msg6.2
   screenmode 1 on
     page msg6
     gosub void_chk_reg
     gosub void_recon
     gosub reverse_mer_chk
     gosub update_bank_bal
return


void_pros_chk:
   indicate pros true
   indicate merch false
   pad ref.prosecutor to payee 25
   move scr.6 to chknum
   screenmode 112 on
   display "  Voiding Prosecutor Check #  "  to msg6.1
   display chknum to msg6.2
   screenmode 1 on
     gosub void_chk_reg
     gosub void_recon
     gosub reverse_pros_chk
     gosub update_bank_bal
     gosub clear_pros_num
return



//====> V O I D ___ C H K ___ R E G <==========================================

VOID_CHK_REG:
//VOID MERCHANT OR PROSECUTOR CHECK

   CLEAR CHECKS
   CLEAR DISTRIB
     MOVE CHKNUM TO CHECKS.CHECK_NUM
     MOVE BANK.CODE TO CHECKS.BANK_CODE
        FIND EQ CHECKS BY INDEX.1
        [FOUND] BEGIN
           reread checks
           MOVE (0.00) TO CHECKS.CHK_AMT
           move (0.00) to checks.mfee
           move (0.00) to checks.pfee
           move (0.00) to checks.hc_amt
           MOVE '***VOID***' TO CHECKS.REFERENCE
           MOVE 'Voided by Adjustments' TO CHECKS.PAYEE
           MOVE 'X' TO CHECKS.UPDATE
           SAVERECORD CHECKS
           unlock
             MOVE (0) TO COUNT
           REPEAT
             MOVE CHECKS.CHECK_NUM TO DISTRIB.CHECK_NUMB
             MOVE BANK.CODE TO DISTRIB.BANK_CODE
             MOVE COUNT TO DISTRIB.SEQUENCE
               FIND EQ DISTRIB BY INDEX.6
                 [FOUND] BEGIN
                    reread distrib
                    MOVE (0.00) TO DISTRIB.AMOUNT
                    MOVE 'X' TO DISTRIB.UPDATE
                    MOVE '***VOIDED***' TO DISTRIB.DESCRIPTION
                    SAVERECORD DISTRIB
                    unlock
                   END
                   CLEAR DISTRIB
                  INCREMENT COUNT
                 UNTIL COUNT GE (2)
               CLEAR CHECKS
               END
     clear checks
     [multiuser] unlock
RETURN



//====> V O I D ___ R E C O N : <=============================================

VOID_RECON:
   CLEAR RECON
    MOVE BANK.CODE TO RECON.BANK_CODE
     MOVE CHKNUM TO RECON.CHECK_NUMBER
      FIND EQ RECON BY INDEX.1
        [FOUND] BEGIN
            [MULTIUSER] REREAD
            MOVE (0.00) TO RECON.AMOUNT
            MOVE 'Y' TO RECON.STATUS
            MOVE '***VOID***' TO RECON.REFERENCE
            MOVE 'Voided in Hotrest Prog' TO RECON.PAYOR
            SAVERECORD RECON
            [MULTIUSER] UNLOCK
          END
        clear recon
RETURN



//=========> Reverse merchant Check Journal Entries <=========================

REVERSE_mer_chk:
// USED IN VOIDING MERCHANT CHECK
//DEBIT ENTRY
  move (0) to count
  repeat
    MOVE 'HV' TO JOURNALS.JR
     if count eq (0) MOVE REF.CASH TO JOURNALS.GL
     if count eq (1) move ref.approcess to journals.gl
     if count eq (0) MOVE scr.5 TO JOURNALS.AMOUNT
     if count eq (1) move (scr.5 - accum_disbamt) to journals.amount
    MOVE payee TO JOURNALS.DESC
    MOVE chknum TO JOURNALS.JOB
    GOSUB GL_JRNLS
    increment count
  until count ge (2)

//CREDIT ENTRY
  MOVE (0) TO COUNT
   REPEAT
     MOVE 'HV' TO JOURNALS.JR
       IF COUNT EQ (0) MOVE REF.DREST TO JOURNALS.GL
       IF COUNT EQ (1) MOVE REF.DMFEES TO JOURNALS.GL
       if count eq (2) move (2000) to journals.gl
       MOVE payee TO JOURNALS.DESC
      IF COUNT EQ (0) MOVE ((tot_chk + accum_hcamt) *(-1)) TO JOURNALS.AMOUNT
      IF COUNT EQ (1) MOVE ((tot_mfees + accum_mfees) * (-1)) TO JOURNALS.AMOUNT
      if count eq (2) move ((scr.5 - accum_disbamt) * (-1)) to journals.amount
     MOVE chknum TO JOURNALS.JOB
     GOSUB GL_JRNLS
     INCREMENT COUNT
 UNTIL COUNT GE (3)
return

 //==========> Reverse Prosecutor Check Journal Entries <======================


reverse_pros_chk:

//DEBIT ENTRY
    MOVE (0) TO COUNT
   REPEAT
    MOVE 'HV' TO JOURNALS.JR
    IF COUNT EQ (0) MOVE REF.CASH TO JOURNALS.GL
    IF COUNT EQ (1) MOVE REF.APPROCESS TO JOURNALS.GL
    if count eq (0) MOVE (scr.7) TO JOURNALS.AMOUNT
    if count eq (1) move (scr.7 - accum_pros) to journals.amount
    MOVE payee TO JOURNALS.DESC
    MOVE chknum TO JOURNALS.JOB
    GOSUB GL_JRNLS
    INCREMENT COUNT
  UNTIL COUNT GE (2)

//CREDIT ENTRY
  MOVE (0) TO COUNT
   REPEAT
     MOVE 'HV' TO JOURNALS.JR
       IF COUNT EQ (0) MOVE (98) TO JOURNALS.GL
       IF COUNT EQ (1) MOVE (2010) TO JOURNALS.GL
       MOVE payee TO JOURNALS.DESC
       if count eq (0) move (scr.7 * (-1)) to journals.amount
       if count eq (1) move ((scr.7 - accum_pros) * (-1)) to journals.amount
     MOVE chknum TO JOURNALS.JOB
     GOSUB GL_JRNLS
     INCREMENT COUNT
 UNTIL COUNT GE (2)
return



GL_JRNLS:
    MOVE AYEAR TO JOURNALS.YR
    MOVE AMONTH TO JOURNALS.MN
    MOVE ADAY TO JOURNALS.DY
    MOVE REF.DISTRICT TO JOURNALS.BR
    MOVE '20' TO JOURNALS.DP
    MOVE chknum TO JOURNALS.EMPLY
    MOVE USER_NUMB TO JOURNALS.OPERATOR
    GOSUB FIND_GL
    reread ledger
    GOSUB UPDATE_GL
    save ledger
    unlock
    SAVErecord JOURNALS
    CLEAR JOURNALS LEDGER
RETURN


FIND_GL:
   MOVE JOURNALS.GL TO LEDGER.NUMBER
   MOVE JOURNALS.BR TO LEDGER.DISTRICT
   MOVE JOURNALS.DP TO LEDGER.DIVISION
    FIND EQ LEDGER BY INDEX.1
RETURN

UPDATE_GL:
    MOVE (JOURNALS.MN - 1) TO FIELDINDEX
    MOVE (LEDGER.TYJAN& + JOURNALS.AMOUNT) TO LEDGER.TYJAN&
    MOVE (LEDGER.TYTOTAL + JOURNALS.AMOUNT) TO LEDGER.TYTOTAL
RETURN 

//========> update bank balance <==========================================

update_BANK_BAL:
        [multiuser] reread bank
        [merch] MOVE (BANK.CURRENT_BAL + scr.5) TO BANK.CURRENT_BAL
        [pros] move (bank.current_bal + scr.7) to bank.current_bal
        SAVERECORD BANK
     [MULTIUSER] UNLOCK
RETURN


//=======> reverse disburse gl journal entries <=============================

REVERSE_gldisb:
    
// routine to reverse receipted amount from accounts 3210,11,12 etc

//DEBIT ENTRY 

      MOVE 0 TO COUNT
       REPEAT
        IF COUNT EQ 1 IF offense.MFEE EQ 0 GOTO PASS_DR_ENTRY
        [~ vpros] if count eq 2 goto pass_dr_entry
        IF COUNT EQ 2 IF offense.PFEE EQ 0 GOTO PASS_DR_ENTRY
     MOVE 'HX' TO JOURNALS.JR
       IF COUNT EQ 0 MOVE REF.RHC TO JOURNALS.GL
       IF COUNT EQ 1 MOVE REF.RMFEES TO JOURNALS.GL
       IF COUNT EQ 2 MOVE REF.RPFEES TO JOURNALS.GL
     MOVE DEFENDNT.NAME TO JOURNALS.DESC
       IF COUNT EQ 0 MOVE (disburse.dispamt - offense.mfee) TO JOURNALS.AMOUNT
       IF COUNT EQ 1 MOVE offense.MFEE TO JOURNALS.AMOUNT
       IF COUNT EQ 2 MOVE offense.PFEE TO JOURNALS.AMOUNT
     MOVE OFFENSE.CTRLNO TO JOURNALS.JOB  
      GOSUB GL_JRNLS
PASS_DR_ENTRY:
    INCREMENT COUNT
 UNTIL COUNT GE 3

//CREDIT ENTRY
//   MOVE 'HX' TO JOURNALS.JR
//   MOVE REF.APPROCESS TO JOURNALS.GL
//   MOVE DEFENDNT.NAME TO JOURNALS.DESC
//   [vpros] move ((disburse.dispamt + offense.pfee)*(-1)) to journals.amount
//   [~ VPROS] MOVE (disburse.dispamt * (-1)) TO JOURNALS.AMOUNT
//   MOVE OFFENSE.CTRLNO TO JOURNALS.JOB
//    [MULTIUSER] REREAD
//    GOSUB GL_JRNLS
//    [MULTIUSER] UNLOCK


// DEBIT ENTRY
//   MOVE 'HX' TO JOURNALS.JR
//   MOVE (2500) TO JOURNALS.GL
//   MOVE DEFENDNT.NAME TO JOURNALS.DESC
//   [vpros] move (disburse.dispamt + offense.pfee) to journals.amount
//   [~ VPROS] MOVE (disburse.dispamt) TO JOURNALS.AMOUNT
//   MOVE OFFENSE.CTRLNO TO JOURNALS.JOB
//    [MULTIUSER] REREAD
//    GOSUB GL_JRNLS
//    [MULTIUSER] UNLOCK

// CREDIT ENTRY

     MOVE 'HX' TO JOURNALS.JR
     MOVE (1215) TO JOURNALS.GL
     MOVE DEFENDNT.NAME TO JOURNALS.DESC
     [vpros] move ((disburse.dispamt + offense.pfee)*(-1)) to journals.amount
     [~ VPROS] MOVE (disburse.dispamt * (-1)) TO JOURNALS.AMOUNT
     
     clearxy 24 0
     gotoxy  24 0
     show " journals.amount " journals.amount
     inkey answ
     
     
     
     MOVE OFFENSE.CTRLNO TO JOURNALS.JOB
      GOSUB GL_JRNLS

RETURN

//======> update defendant credit <==========================================

update_def_credit:
   [multiuser] reread defendnt
   [vpros] MOVE (DEFENDNT.CREDIT + offense.total) TO DEFENDNT.CREDIT
   [~ vpros] move (defendnt.credit + disburse.dispamt ) to defendnt.credit
   [vpros] MOVE (DEFENDNT.BAL + offense.total) TO DEFENDNT.BAL
   [~ vpros] move (defendnt.bal + disburse.dispamt ) to defendnt.bal
   saverecord defendnt
   [multiuser] unlock
return


//==========> issue new checks <==============================================

issue_checks:
[del_disb] begin
   indicate xmer as (scr.5 - accum_disbamt) le (0)
   indicate xpros as (scr.7 - accum_pros) le (0)
   indicate xpros as [~ vpros]
   [xmer][xpros] begin
      page blank
      page msg9
        repeat
        clearform msg9.1
        accept msg9.1
          uppercase msg9.1
          if ~ msg9.1 in "RQ" loop
          if msg9.1 eq "R" gosub qs2
          if msg9.1 eq "Q" gosub qs1
   end
   [xmer][~ xpros] begin  // merchant check not needed but prosecutor check
      page blank
      page msg10               // must be issued
      inkey answ
      indicate do_checks true
      indicate manchk_p as [~ xpros]
      goto start_pros_check
   end


   [~ xmer][xpros] begin
       display scr.4 to msg8.1
       display 'I' to msg8.2
       display 'L' to msg8.3
       display 'R' to msg8.4
       repeat
         clearform msg8.5
         accept msg8.5
         uppercase msg8.5
           if ~ msg8.5 in "IRL" loop
           indicate do_checks as msg8.5 match 'I'
           indicate manchk_m as msg8.5 match "I"
           if msg8.5 match "L" begin
              gosub clear_disb
              page exit
              gosub qs1
           end
           if msg8.5 match 'R' begin
              gosub clear_disb
              page exit
              gosub qs2
           end
   end

end

[~ del_disb] begin
   [vmer][~ vpros] begin
       display scr.4 to msg11.1
       display 'I' to msg11.2
       display 'L' to msg11.3
       display 'Q' to msg11.4
       repeat
         clearform msg11.5
         accept msg11.5
         uppercase msg11.5
           if ~ msg11.5 in "ILQ" loop
           indicate do_checks as msg11.5 match 'I'
           indicate manchk_m as msg11.5 match "I"
           indicate manchk_p false
           [do_checks] goto start_mer_check
           if msg11.5 match "Q" begin
              gosub clear_disb
              page exit
              gosub qs1
           end
           if msg11.5 match 'L' begin
              gosub clear_disb
              page exit
              gosub qs2
           end
     end
     [vmer][vpros] begin
       display scr.4 to msg12.1
       display scr.6 to msg12.2
       repeat
         clearform msg12.3
         accept msg12.3
         uppercase msg12.3
           if ~ msg12.3 in "YN" loop
           indicate do_checks true
           indicate manchk_m as msg12.3 in "Y"
           indicate manchk_p true
           if msg12.3 eq "Y" goto start_mer_check

           if msg12.3 match "N" goto start_pros_check
      end

end



start_mer_check:
         page blank
         display bank.next_check_num to chk.1
         display ref.prosecutor to chk.2
         display today to chk.3
         display scr.2 to chk.4
         calc (scr.5 - accum_disbamt) to chk.5
         display bank.name to chk.6
         display bank.account_id to chk.7
do_mer_num:
         repeat
         indicate pros_chk false
         indicate mer_chk true
           accept chk.1
             if chk.1 le (0) loop
             move ((chk.1 - 1) - setup.last_check) to missing
             if missing ge 1 begin
               gosub void_checks
               page blank
               goto do_mer_num
             end
                  reread bank setup
                  move chk.1 to setup.last_check
                  move (chk.1 + 1) to bank.next_check_num
                  saverecord bank setup
                  [multiuser] unlock
           accept chk.3
              gosub ok_chk
              if answ in "Nn" goto do_mer_num
             if chk.3 eq '' move today to chk.3
             indicate nopros group any [~ vpros xpros]
             [nopros] goto pass_pros_check

start_pros_check:
         page blank
//       [xpros] return do_finis
         display bank.next_check_num to chk_pros.1
         display ref.prosecutor to chk_pros.2
         display today to chk_pros.3
         display ref.prosecutor to chk_pros.4
         calc (scr.7 - accum_pros) to chk_pros.5
         display bank.name to chk_pros.6
         display bank.account_id to chk_pros.7
do_pros_num:
         repeat
           indicate mer_chk false
           indicate pros_chk true
           accept chk_pros.1
             if chk_pros.1 le (0) loop
           accept chk_pros.3
             gosub ok_chk
             if answ in "Nn" goto do_pros_num
             if chk_pros.3 eq '' move today to chk.3
             move ((chk_pros.1 -1) - setup.last_check) to missing
             if missing ge 1 begin
               gosub void_checks
               page blank
               goto do_pros_num
             end
                  reread bank setup
                  move chk_pros.1 to setup.last_check
                  move (chk_pros.1 + 1) to bank.next_check_num
                  saverecord bank setup
                  [multiuser] unlock
pass_pros_check:

return
//=======> clear disbursement record <=========================================
clear_disb:
	keyproc off
    indicate set_first true
	clear disburse offense
	move scr.1 to disburse.merchant_idno
	move scr.3 to disburse.dispdt		  
	move scr.4 to disburse.chkno
	find ge disburse by index.2
	relate disburse
    repeat
		gosub spin
		[set_first] begin
			page scr
			page blank
			display "Clearing Disburse Records" to msg6.1
			display scr.4 to msg6.2
			page msg6
			indicate set_first false
		end

		[found] if disburse.dispdt ne scr.3 indicate found false
		[found] if disburse.merchant_idno ne scr.1 indicate found false
		[found] if disburse.chkno ne scr.4 indicate found false
		[found] begin
			reread disburse offense
			move '' to disburse.dispdt
			move (0) to disburse.chkno
			move 'C' to disburse.manual
			[vpros] move (0) to disburse.pckno
			[vpros] move (0.00) to disburse.pros_total
			move (0) to disburse.month
			move '' to offense.mark
			saverecord disburse offense
			unlock
		end
		find gt disburse by index.2
	until [finderr]
	keyproc on
    clear disburse offense
return

// =======> clear offense "mark" field <=====================================

// if operator changes their mind after selecting disburse records to
// delete then the offense "mark" field has to be reset to ''

clear_offs:
   keyproc off
   clear disburse
   move scr.3 to disburse.dispdt
   move scr.1 to disburse.merchant_idno
   repeat
      find ge disburse by index.2
        if disburse.merchant_idno ne scr.1 indicate found false
        [found] if disburse.dispdt ne scr.3 indicate found false
      [found] begin
        relate disburse
        reread offense
        move '' to offense.mark
        saverecord offense
        unlock
     end
   until [finderr]
keyproc on
return



// =======> update disbursement records <=====================================
//
// This subroutine edits all disburse records with a disburse date equal
// to the merchant check being voided and makes the necessary changes to
// all disburse records depending upon what action was taken.
// IE: if prosecutor check was voided along with the merchant check then
//     a new pros amt and check number will be placed in the disburse records
//     The "M" for manual check and the new disburse date will be placed in
//     remaining disburse records for the merchant whose check was voided

update_disb:

 decompose_date chk.3 to bday bmonth byear
 decompose_date chk_pros.3 to cday cmonth cyear
         clear disburse
           move scr.1 to disburse.merchant_idno
           move scr.2 to disburse.merchant
           move scr.3 to disburse.dispdt
           move (0) to windowindex
             find ge disburse by index.2
             [found] if disburse.merchant_idno ne scr.1 indicate found false
             while [found]
                 gosub spin
                 move disburse.recnum to stor2.1&
                 increment windowindex
                 find gt disburse by index.2
                 if disburse.merchant_idno ne scr.1 indicate found false
             end
             move (0) to windowindex
             clear disburse
             while stor2.1& ne (0)
                gosub spin
                move stor2.1& to disburse.recnum
                find eq disburse by recnum
                   reread disburse
                   [vpros][manchk_p] move chk_pros.5 to disburse.pros_total
                   [vpros][manchk_p] move chk_pros.1 to disburse.pckno
                   [vmer] begin
                         [manchk_m] move chk.3 to disburse.dispdt
                         [~ manchk_m] move '' to disburse.dispdt
                         [manchk_m] move bmonth to disburse.month
                         [~ manchk_m] move (0) to disburse.month
                         [manchk_m] move chk.1 to disburse.chkno
                         [~ manchk_m] move (0) to disburse.chkno
                         [~ manchk_m] move "C" to disburse.manual
                         [manchk_m] move "M" to disburse.manual
                    end
                  saverecord disburse
                  unlock
                  increment windowindex
              end


     [vpros][manchk_p] begin
           clear disburse
           move scr.3 to disburse.dispdt
             find ge disburse by index.2
             if disburse.dispdt ne scr.3 indicate found false
             [found] repeat
               gosub spin
               reread disburse
                   move chk_pros.5 to disburse.pros_total
                   move chk_pros.1 to disburse.pckno
                   saverecord disburse
               unlock
               find gt disburse by index.2
               if disburse.dispdt ne scr.3 indicate found false
               [found] loop
      end

       [vmer][manchk_m] gosub create_mer_check
       [vpros][manchk_p] gosub create_pros_check
return




//========> void checks  <====================================================

void_checks:
   page blank
   PAGE VID
   SCREENMODE 112 ON
   DISPLAY MISSING TO VID.1
   DISPLAY SETUP.LAST_CHECK TO VID.2
   DISPLAY chk.1 TO VID.3
   DISPLAY MISSING TO VID.4
   SCREENMODE 1 ON
    REPEAT
    clearform vid.5
     ACCEPT VID.5
     uppercase vid.5
      IF ~ VID.5 IN 'YN' LOOP
      IF VID.5 IN 'Y' GOSUB DO_VOIDS
      IF VID.5 IN 'N' BEGIN
         CLEARFORM VID
         CLEARFORM VID2
      END
RETURN



DO_VOIDS:
   page blank
   PAGE VID2
   MOVE 0 TO COUNT
   [MULTIUSER] REREAD
     FOR COUNT FROM (1) TO MISSING 
       MOVE (BANK.NEXT_CHECK_NUM + 1 ) TO BANK.NEXT_CHECK_NUM
       MOVE (SETUP.LAST_CHECK + 1) TO CHECKS.CHECK_NUM
       MOVE (SETUP.LAST_CHECK + 1) TO SETUP.LAST_CHECK
       DISPLAY SETUP.LAST_CHECK TO VID2.1
       MOVE TODAY TO CHECKS.JR_DATE
       MOVE BANK.CODE TO CHECKS.BANK_CODE
       MOVE (0.00) TO CHECKS.CHK_AMT
       MOVE '*** VOID ***' TO CHECKS.REFERENCE
       MOVE '*** Voided Check ***' TO CHECKS.PAYEE
       MOVE TODAY TO CHECKS.CK_DATE
       MOVE USER_NUMB TO CHECKS.OPER
       MOVE amonth TO CHECKS.SEQ_NUM
       MOVE 'X' TO CHECKS.UPDATE
       MOVE 'C' TO CHECKS.STATUS
       MOVE (0.00) TO CHECKS.MFEE
       MOVE (0.00) TO CHECKS.PFEE
       MOVE (0.00) TO CHECKS.HC_AMT
        gosub recon_void

// DISTRIBUTION RECORD
       MOVE TODAY TO DISTRIB.JR_DATE
       MOVE BANK.CODE TO DISTRIB.BANK_CODE
       MOVE CHECKS.CHECK_NUM TO DISTRIB.CHECK_NUMB
       MOVE (0) TO DISTRIB.SEQUENCE
       MOVE 9999 TO DISTRIB.ACCOUNT
       MOVE REF.DISTRICT TO DISTRIB.DISTRICT
       MOVE BANK.GL_DIV TO DISTRIB.DIVISION
       MOVE (0.00) TO DISTRIB.AMOUNT
       MOVE 'X' TO DISTRIB.UPDATE
       MOVE '***VOID***' TO DISTRIB.DESCRIPTION
       MOVE USER_NUMB TO DISTRIB.OPER
       SAVERECORD CHECKS RECON DISTRIB
       unlock
       CLEAR CHECKS RECON DISTRIB
     LOOP
RETURN
         
   
RECON_VOID:
  CLEAR RECON
  MOVE 'HC' TO RECON.BANK_CODE
  MOVE CHECKS.CHECK_NUM TO RECON.CHECK_NUMBER
  MOVE TODAY TO RECON.TRANS_DATE
  MOVE '** Void **'  TO RECON.PAYOR
  MOVE (0.00) TO RECON.AMOUNT
  MOVE 'Y' TO RECON.STATUS
  MOVE TODAY TO RECON.POSTING_DATE
  MOVE 'Computer Check' TO RECON.REFERENCE
  MOVE 'C' TO RECON.TYPE
RETURN
    
//==========> create new merchant & pros checks <===========================

create_mer_check:

  CLEAR RECON CHECKS DISTRIB
  MOVE 'HC' TO RECON.BANK_CODE
  MOVE chk.1 TO RECON.CHECK_NUMBER
  MOVE chk.3 TO RECON.TRANS_DATE
  MOVE chk.4 TO RECON.PAYOR
  MOVE chk.5 TO RECON.AMOUNT
  MOVE 'N' TO RECON.STATUS
  MOVE TODAY TO RECON.POSTING_DATE
  MOVE 'Manual Check' TO RECON.REFERENCE
  MOVE 'M' TO RECON.TYPE

  //CHECK REGISTER
    MOVE chk.3 TO CHECKS.JR_DATE
    MOVE BANK.CODE TO CHECKS.BANK_CODE
    MOVE chk.1 TO CHECKS.CHECK_NUM
    MOVE chk.5 TO CHECKS.CHK_AMT
    MOVE 'Manual Check' TO CHECKS.REFERENCE
    MOVE chk.4 TO CHECKS.PAYEE
    MOVE chk.3 TO CHECKS.CK_DATE
    MOVE user_numb TO CHECKS.OPER
    MOVE bmonth TO CHECKS.SEQ_NUM
    MOVE 'X' TO CHECKS.UPDATE
    MOVE (tot_mfees ) TO CHECKS.MFEE
    MOVE (tot_pfees ) TO CHECKS.PFEE
    MOVE (tot_chk ) TO CHECKS.HC_AMT
  SAVE RECON CHECKS

  //CHECK DISTRIBUTION RECORD
     MOVE 0 TO COUNT
      REPEAT
       MOVE chk.3 TO DISTRIB.JR_DATE
       MOVE BANK.CODE TO DISTRIB.BANK_CODE
       MOVE chk.1 TO DISTRIB.CHECK_NUMB
       MOVE COUNT TO DISTRIB.SEQUENCE
         IF COUNT EQ (0) MOVE REF.DREST TO DISTRIB.ACCOUNT
         IF COUNT EQ (1) MOVE REF.DMFEES TO DISTRIB.ACCOUNT
       MOVE REF.DISTRICT TO DISTRIB.DISTRICT
       MOVE '20' TO DISTRIB.DIVISION
         IF COUNT EQ (0) MOVE accum_check  TO DISTRIB.AMOUNT
         IF COUNT EQ (1) MOVE ACCUM_merfees TO DISTRIB.AMOUNT
         IF COUNT EQ (0) MOVE REF.DREST TO LEDGER.NUMBER
         IF COUNT EQ (1) MOVE REF.DMFEES TO LEDGER.NUMBER 
               MOVE REF.DISTRICT TO LEDGER.DISTRICT
               MOVE '20' TO LEDGER.DIVISION
                 FIND EQ LEDGER BY INDEX.1
               MOVE LEDGER.DESC TO DISTRIB.DESCRIPTION
               CLEAR LEDGER
        MOVE 'X' TO DISTRIB.UPDATE
        MOVE user_numb TO DISTRIB.OPER
//        save distrib
        clear distrib
        INCREMENT COUNT
        UNTIL COUNT GE (2)
        [multiuser] reread bank
        move (bank.current_bal - chk.5) to bank.current_bal
        saverecord bank
        [multiuser] unlock
  CLEAR RECON CHECKS DISTRIB
  gosub mer_jr
return


create_pros_check:

  CLEAR RECON CHECKS DISTRIB
  MOVE 'HC' TO RECON.BANK_CODE
  MOVE chk_pros.1 TO RECON.CHECK_NUMBER
  MOVE chk_pros.3 TO RECON.TRANS_DATE
  MOVE 'Prosecutors Account' TO RECON.PAYOR
  MOVE chk_pros.5 TO RECON.AMOUNT
  MOVE 'N' TO RECON.STATUS
  MOVE TODAY TO RECON.POSTING_DATE
  MOVE 'Manual Check' TO RECON.REFERENCE
  MOVE 'M' TO RECON.TYPE


  //CHECK REGISTER
    MOVE chk_pros.3 TO CHECKS.JR_DATE
    MOVE BANK.CODE TO CHECKS.BANK_CODE
    MOVE chk_pros.1 TO CHECKS.CHECK_NUM
    MOVE chk_pros.5 TO CHECKS.CHK_AMT
    move (0.00) to checks.pfee
    move (0.00) to checks.mfee
    move (0.00) to checks.hc_amt
    MOVE 'Manual Check' TO CHECKS.REFERENCE
    MOVE 'Prosecutors Account' TO CHECKS.PAYEE
    MOVE chk_pros.3 TO CHECKS.CK_DATE
    MOVE user_numb TO CHECKS.OPER
    MOVE cmonth TO CHECKS.SEQ_NUM
    MOVE 'X' TO CHECKS.UPDATE
  SAVE RECON CHECKS

  //CHECK DISTRIBUTION RECORD
       MOVE chk_pros.3 TO DISTRIB.JR_DATE
       MOVE BANK.CODE TO DISTRIB.BANK_CODE
       MOVE chk_pros.1 TO DISTRIB.CHECK_NUMB
       MOVE (0) TO DISTRIB.SEQUENCE
       MOVE REF.DPFEES TO DISTRIB.ACCOUNT
       MOVE REF.DISTRICT TO DISTRIB.DISTRICT
       MOVE '20' TO DISTRIB.DIVISION
       MOVE ACCUM_prosfees TO DISTRIB.AMOUNT
               MOVE REF.DPFEES TO LEDGER.NUMBER
               MOVE REF.DISTRICT TO LEDGER.DISTRICT
               MOVE '20' TO LEDGER.DIVISION
                 FIND EQ LEDGER BY INDEX.1
               MOVE LEDGER.DESC TO DISTRIB.DESCRIPTION
               CLEAR LEDGER
        MOVE 'X' TO DISTRIB.UPDATE
        MOVE user_numb TO DISTRIB.OPER
//        SAVE DISTRIB
        [multiuser] reread bank
        move (bank.current_bal - chk_pros.5) to bank.current_bal
        saverecord bank
        [multiuser] unlock
  CLEAR RECON CHECKS DISTRIB
  gosub pros_jr
return

//==========> create ledger journals <======================================


MER_JR:
//DEBIT ENTRY
  MOVE (0) TO COUNT
   REPEAT
     MOVE 'MC' TO JOURNALS.JR
     MOVE bYEAR TO JOURNALS.YR
     MOVE bMONTH TO JOURNALS.MN
     MOVE bDAY TO JOURNALS.DY
       IF COUNT EQ (0) MOVE REF.DREST TO JOURNALS.GL
       IF COUNT EQ (1) MOVE REF.DMFEES TO JOURNALS.GL
       IF COUNT EQ (2) MOVE REF.APMER TO JOURNALS.GL
     MOVE REF.DISTRICT TO JOURNALS.BR
     MOVE '20' TO JOURNALS.DP
     MOVE chk.4 TO JOURNALS.DESC
       IF COUNT EQ (0) MOVE tot_chk TO JOURNALS.AMOUNT
       IF COUNT EQ (1) MOVE tot_mfees TO JOURNALS.AMOUNT
       IF COUNT EQ (2) MOVE (tot_chk + tot_mfees) TO JOURNALS.AMOUNT
     MOVE chk.1 TO JOURNALS.EMPLY
     MOVE '' TO JOURNALS.JOB
     MOVE chk.1 TO JOURNALS.CHK
     GOSUB FIND_GL
     reread ledger
     GOSUB UPDATE_GL
     save ledger
     unlock
     SAVERECORD JOURNALS
     CLEAR LEDGER JOURNALS
     INCREMENT COUNT
 UNTIL COUNT GE (3)

//CREDIT ENTRY
    MOVE (0) TO COUNT
   REPEAT
    MOVE 'MC' TO JOURNALS.JR
    MOVE bYEAR TO JOURNALS.YR
    MOVE bMONTH TO JOURNALS.MN
    MOVE bDAY TO JOURNALS.DY
    IF COUNT EQ (0) MOVE REF.CASH TO JOURNALS.GL
    IF COUNT EQ (1) MOVE REF.APPROCESS TO JOURNALS.GL
    MOVE (chk.5 * (-1)) TO JOURNALS.AMOUNT
    MOVE REF.DISTRICT TO JOURNALS.BR
    MOVE '20' TO JOURNALS.DP
    MOVE chk.4 TO JOURNALS.DESC
    MOVE chk.1 TO JOURNALS.EMPLY
    MOVE '' TO JOURNALS.JOB
    MOVE chk.1 TO JOURNALS.CHK
    GOSUB FIND_GL
    reread ledger
    GOSUB UPDATE_GL
    save ledger
    unlock
    SAVERECORD JOURNALS
    CLEAR JOURNALS LEDGER
    INCREMENT COUNT
  UNTIL COUNT GE (2)

RETURN




PROS_JR:

//DEBIT ENTRY
     MOVE (0) TO COUNT
   REPEAT
     MOVE 'MC' TO JOURNALS.JR
     MOVE cYEAR TO JOURNALS.YR
     MOVE cMONTH TO JOURNALS.MN
     MOVE cDAY TO JOURNALS.DY
     IF COUNT EQ (0) MOVE REF.DPFEES TO JOURNALS.GL
     IF COUNT EQ (1) MOVE REF.APPFEES TO JOURNALS.GL
     MOVE REF.DISTRICT TO JOURNALS.BR
     MOVE '20' TO JOURNALS.DP
     MOVE 'Prosecutors Account' TO JOURNALS.DESC
     MOVE chk_pros.5 TO JOURNALS.AMOUNT
     MOVE chk_pros.1 TO JOURNALS.EMPLY
     MOVE '' TO JOURNALS.JOB
     MOVE user_numb TO JOURNALS.OPERATOR
     MOVE chk_pros.1 TO JOURNALS.CHK
     GOSUB FIND_GL
     reread ledger
     GOSUB UPDATE_GL
     save ledger
     unlock
     SAVERECORD JOURNALS
     CLEAR LEDGER JOURNALS
     INCREMENT COUNT
  UNTIL COUNT GE (2)

//CREDIT ENTRY
    MOVE (0) TO COUNT
  REPEAT
    MOVE 'MC' TO JOURNALS.JR
    MOVE cYEAR TO JOURNALS.YR
    MOVE cMONTH TO JOURNALS.MN
    MOVE cDAY TO JOURNALS.DY
    IF COUNT EQ (0) MOVE REF.CASH TO JOURNALS.GL
    IF COUNT EQ (1) MOVE REF.APPROCESS TO JOURNALS.GL
    MOVE (chk_pros.5 * (-1)) TO JOURNALS.AMOUNT
    MOVE REF.DISTRICT TO JOURNALS.BR
    MOVE '20' TO JOURNALS.DP
    MOVE 'Prosecutors Account' TO JOURNALS.DESC
    MOVE chk_pros.1 TO JOURNALS.EMPLY
    MOVE '' TO JOURNALS.JOB
    MOVE user_numb TO JOURNALS.OPERATOR
    MOVE chk_pros.1 TO JOURNALS.CHK
    GOSUB FIND_GL
    reread ledger
    GOSUB UPDATE_GL
    save ledger
    SAVERECORD JOURNALS
    CLEAR JOURNALS LEDGER
    INCREMENT COUNT
  UNTIL COUNT GE (2)

return


//------< accunulate check totals for mfees pfees ckamt >----------------------

total$:
     move (0) to tot_chk
     move (0) to tot_mfees
     move (0) to tot_pfees
   screenmode 112 on
   display " Checking Totals in Check " to msg6.1
   display scr.4 to msg6.2
   screenmode 1 on
   page msg6
   clear disburse
   move scr.1 to disburse.merchant_idno
   move scr.3 to disburse.dispdt
   move scr.4 to disburse.chkno
     find ge disburse by index.2

     [found] repeat
     if disburse.dispdt ne scr.3 indicate found false
	 [finderr] goto quit_total$
        if disburse.merchant_idno eq scr.1 begin
			if disburse.chkno eq scr.4 begin
			  relate disburse
			  calc (tot_chk + offense.ckamt) to tot_chk
			  calc (tot_mfees + offense.mfee) to tot_mfees
			  calc (tot_pfees + offense.pfee) to tot_pfees
			end
        end
            find gt disburse by index.2
       [found] loop
quit_total$:
  clear disburse offense restitut
return


ok_chk:
 repeat
  clearxy 24 0
  gotoxy 24 1
  screenmode 112 on
  show "                     Is this check correct? (Y/N)                           "
  screenmode 1 on
  inkey answ
    if ~ answ in "YyNn" loop
    clearxy 24 0
return

clear_pros_num:
    keyproc off
      clear disburse
      move scr.3 to disburse.dispdt
          find ge disburse by index.2
        repeat
            gosub spin
            [found] if disburse.dispdt ne scr.3 indicate found false
            [found] begin
               reread disburse
               move (0) to disburse.pckno
               move (0.00) to disburse.pros_total
               saverecord disburse
               unlock
            end
         find gt disburse by index.2
         until [finderr]
      keyproc on
return


spin:
     on spinner gosub sp1 sp2 sp3 sp4 sp5 sp6 sp7 sp8
     increment spinner
     if spinner eq (9) move (1) to spinner
return

sp1: display "|" to msg6.3
return
sp2: display "/" to msg6.3
return
sp3: display "ฤ" to msg6.3
return
sp4: display "\" to msg6.3
return
sp5: display "|" to msg6.3
return
sp6: display "/" to msg6.3
return
sp7: display "-" to msg6.3
return
sp8: display "\" to msg6.3
return

//=========< Keyprocs >========================================================

keyproc key.help
   page help
   inkey answ
   page scr
  [~ inhead] page dis
return
