/SCRMENU        RESIDENT                                 RECON
                                 ___.     ______________________________
ออออออ< Bank Reconcilation >อออออออออออออออออออออออออออออออออออออออออออออออออออ



                  1.  Bank Code Maintenance
                  2.  Check , Deposit & Adjustment Entry
                  3.  Reconcile Bank
                  4.  Bank Reconciliation Register
                  5.  General Ledger
                  6.  General ledger Setup
                  7.  Quit To Main Menus



อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ

                     Please Enter Your Selection :  _

<F1> Help                                    <ESC> Quit To Main Menus



/NOUSER
ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ      You have accessed this program without the proper user ID             บ
บ                                                                            บ
บ    Please contact The Prosecutor Coordinator's Office at Little Rock       บ
บ                    Telephone   1-501-682-2625                              บ
บ                                                                            บ
บ              This Program Will Abort Upon Pressing Any Key                 บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/SCRBANK       RESIDENT

ออออออ< Bank Code Maintenance >ออออออออออออออออออออออออออออออออออออออออออออออออ


            Bank Code.......................{ __
            Name of Bank....................{ ______________________________
               
                      Account Number........{ _______________
                      Current Balance.......{ _______.__
                      Next Check Number.....{ _____.

             General Ledger Account.........{ ___. ___ __                          

             Last Deposit Date..............{ __/__/____
             Last Receipt Number On Deposit.{ ______.

อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
   <F9> Clear               <F10> Save              <ESC>  Return to Menu



/SCRADJ       RESIDENT
ออออออ< Check , Deposit & Adjustment Entry >อออออออออออออออออออออออออออออออออออ

Bank Code..{ __  ______________________________   Current Balance.{ _______.__

C)heck or D)eposit...{ _
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
/SCRADJD      RESIDENT
         Posting Date..{ __/__/____        Sequence Number..{ __.

         Posting Type..{ _

         Reference.....{ ____________________

         Comment.......{ ______________________________

         Amount........{ ______.__

         Cleared Y/N ..{ _

<ESC> Return to Type       <ESC><ESC> Return to Menu     <F9> To Clear Entry
/SCRADJC      RESIDENT
              Check Number..{ _____.  

              Posting Date..{ __/__/____

              Check Date....{ __/__/____

              Paid to.......{ ______________________________

              Amount........{ ______.__

              Cleared Y/N ..{ _

<ESC> Return to Type   <ESC><ESC> Return to Menu   <F6> Delete   <F9> Clear 



/OPTIONS       RESIDENT
ฺฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฟ
ณ Options for Posting Type:                                                  ณ
ณ A)djust  B)ank Chg  D)eposit  I)nterest  N)sufficent funds   W)ithdrawal   ณ
ภฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤู
/BLANK         RESIDENT
                                                                              
                                                                              
                                                                              
                                                                              
/SCRCON          RESIDENT
ออออออ< Bank Reconciliation >ออออออออออออออออออออออออออออออออออออออออออออออออออ
Bank Code..{ __ ______________________________    Bank Stmt Bal..{ _______.__

C)heck or D)eposit..{ _ ____________________                         ______.__
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
/SCRCON2         RESIDENT
Ln#  Check#    Date     Reference           Paid To                Amount   Clr
1.  _______ __/__/____ _______________ ___________________________ ______.__ _
2.  _______ __/__/____ _______________ ___________________________ ______.__ _
3.  _______ __/__/____ _______________ ___________________________ ______.__ _
4.  _______ __/__/____ _______________ ___________________________ ______.__ _
5.  _______ __/__/____ _______________ ___________________________ ______.__ _
6.  _______ __/__/____ _______________ ___________________________ ______.__ _
7.  _______ __/__/____ _______________ ___________________________ ______.__ _
8.  _______ __/__/____ _______________ ___________________________ ______.__ _
9.  _______ __/__/____ _______________ ___________________________ ______.__ _
10. _______ __/__/____ _______________ ___________________________ ______.__ _
11. _______ __/__/____ _______________ ___________________________ ______.__ _
12. _______ __/__/____ _______________ ___________________________ ______.__ _
13. _______ __/__/____ _______________ ___________________________ ______.__ _
14. _______ __/__/____ _______________ ___________________________ ______.__ _
15. _______ __/__/____ _______________ ___________________________ ______.__ _
16. _______ __/__/____ _______________ ___________________________ ______.__ _
    Use the up and down arrow keys to select the check you want to clear and
    press <ENTER> to clear the check.  <ESC> To Quit                       
/SCRCON3        RESIDENT
   Deposit Date   Reference               Comment                   Amount  Clr
1.  __________ ___ _______________  __________________________  ______.__  _
2.  __________ ___ _______________  __________________________  ______.__  _
3.  __________ ___ _______________  __________________________  ______.__  _
4.  __________ ___ _______________  __________________________  ______.__  _
5.  __________ ___ _______________  __________________________  ______.__  _
6.  __________ ___ _______________  __________________________  ______.__  _
7.  __________ ___ _______________  __________________________  ______.__  _
8.  __________ ___ _______________  __________________________  ______.__  _
9.  __________ ___ _______________  __________________________  ______.__  _
10. __________ ___ _______________  __________________________  ______.__  _
11. __________ ___ _______________  __________________________  ______.__  _
12. __________ ___ _______________  __________________________  ______.__  _
13. __________ ___ _______________  __________________________  ______.__  _
14. __________ ___ _______________  __________________________  ______.__  _
15. __________ ___ _______________  __________________________  ______.__  _
16. __________ ___ _______________  __________________________  ______.__  _
Use the up and down arrow keys to select the deposit/adjustment you wish to 
clear and press <ENTER>  <ESC> To quit 
/PRTRECON           RESIDENT
ออออออ< Print Bank Reconciliation >ออออออออออออออออออออออออออออออออออออออออออออ























/Info


 08-16-99 Change made by Gary Grooms

Recompiled 01-19-2000 by Jeff March
        Recognize new backspace command in calcdate.inc
          

/err1
ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                       บ
บ     You have entered a bank code which is not in the system.          บ
บ     Re-Enter the code and if you receive this message again           บ
บ Please contact The Prosecutor Coordinator's Office at Little Rock     บ
บ                Telephone   1-501-682-2625                             บ
บ          Options R(etry  O(uit................[ _ ]                   บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/*
Use y2k.pkg
Read_dfini "df23ini.cfg"
//----------------- Cannot Run Program From Command Line (DOS)
IF NEXT_MENU LE 0 ABORT
INTEGER USER_NUMB USER$_ACCESS TRANSFER 
  //must be first integers defined in program
STRING USER$ 30
MOVE '' TO USER$
MOVE 0 TO USER$_ACCESS
//------------------------------------------------------------
#include calcdate.inc
#include macs.frm

//=======> Scroll Macro <========================================================

#COMMAND SCRL R R R R R R R R R 
        KEYPROC OFF                                    
#IFDEF SCRL$ANS
#ELSE
        STRING SCRL$ANS 1                     
        INTEGER SCRL$ROW$NUM SCRL$EXTRA       
        INTEGER SCRL$TR$1 SCRL$TR$2           
        INTEGER SCRL$T$COUNT
        INTEGER SCRL$L$COUNT
        INDICATOR SCRL_INDICATOR
        INDICATOR GOAHEAD
#ENDIF
        BLANKFORM !1            
        MOVE 0 TO SCRL$T$COUNT
        MOVE 1 TO SCRL$L$COUNT
        SCRL$FORWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9 
        IF SCRL$T$COUNT NE 0 ;
            BEGIN
                SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
            END
        PAGE !1                                               
        REPEAT         
                INKEY SCRL$ANS
                [KEY.RETURN] BEGIN
                 MOVE (( SCRL$L$COUNT - 1 ) * 6 ) TO WINDOWINDEX
                      [DOCHK] GOSUB EDIT_CHK
                      [DODEP] GOSUB EDIT_DEP
                  END
                [KEY.UP] IF SCRL$T$COUNT NE 0 ;
                    BEGIN
                        SCRL$UP$ROUTINE   !1 !2 !3 !4 !5 !6 !7 !8 !9
                    END

                [KEY.DOWN] IF SCRL$T$COUNT NE 0 ;
                    BEGIN
                        SCRL$DOWN$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
                    END

                [KEY.PREVIOUS]  ;
                    BEGIN
                        SCRL$BACKWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9         // Determine & act
                    END

                [KEY.NEXT] ;
                    BEGIN
                        SCRL$FORWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
                    END

                MOVE '' TO SCRL$ANS
                INDICATE SCRL$VALID AS [KEY.ESCAPE]    
                [NOT SCRL$VALID] LOOP

        [KEY.ESCAPE] MOVE 0 TO SCRL$L$COUNT // So we know escape was pressed
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE SCRL$L$COUNT TO WINDOWINDEX
        SCREENMODE 1 OFF

        KEYPROC ON                                                                  // Restore keyprocs
#ENDCOMMAND                                                                         // Scroll Macro

//=====> Scroll Forward Routine <==============================================


#COMMAND SCRL$FORWARD$ROUTINE R R R R R R R R R
        INDICATE SCRL.FOUND.STATUS AS [FOUND]

        MOVE 0 TO SCRL$T$COUNT

        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE 1 TO SCRL$L$COUNT

        CLEAR !4
        GOSUB !8
        MOVE SCRL$TR$1 TO !4.RECNUM

        MOVE 1 TO SCRL$ROW$NUM

        REPEAT
                FIND GT !4 BY !5
                        [FOUND] GOSUB !9
                        [FOUND] [SCRL_INDICATOR] ;
                            BEGIN
                                INCREMENT SCRL$T$COUNT
                                MOVE ((SCRL$ROW$NUM - 1) * !3) TO WINDOWINDEX
                                GOSUB !6
                                IF SCRL$ROW$NUM EQ 1 MOVE !4.RECNUM TO SCRL$TR$1
                                IF SCRL$ROW$NUM NE 1 MOVE !4.RECNUM TO SCRL$TR$2
                                INCREMENT SCRL$ROW$NUM
                            END
                        [FOUND] IF SCRL$ROW$NUM LE !2 LOOP
                      [FINDERR] ;
                        BEGIN
                            SCRL$CLEAR$ROW !1 !2 !3 !4 !5 !6 !7 !8 !9
                        END

        SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        INDICATE FOUND AS [SCRL.FOUND.STATUS]
#ENDCOMMAND

//=====> Scroll Backward Routine <=============================================

#COMMAND SCRL$BACKWARD$ROUTINE
        INDICATE SCRL.FOUND.STATUS AS [FOUND]
        MOVE 0 TO SCRL$T$COUNT

        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        MOVE 1 TO SCRL$L$COUNT

        CLEAR !4
        GOSUB !7
        MOVE SCRL$TR$2 TO !4.RECNUM

        MOVE !2 TO SCRL$ROW$NUM

        REPEAT
                FIND LT !4 BY !5
                        [FOUND] GOSUB !9
                        [FOUND] [SCRL_INDICATOR] ;
                            BEGIN
                                INCREMENT SCRL$T$COUNT
                                MOVE ((SCRL$ROW$NUM - 1) * !3) TO WINDOWINDEX
                                GOSUB !6
                                IF SCRL$ROW$NUM EQ 1 MOVE !4.RECNUM TO SCRL$TR$1
                                IF SCRL$ROW$NUM NE 1 MOVE !4.RECNUM TO SCRL$TR$2
                                MOVE (SCRL$ROW$NUM - 1) TO SCRL$ROW$NUM
                            END
                        [FOUND] IF SCRL$ROW$NUM GE 1 LOOP
                      [FINDERR] ;
                        BEGIN
                            SCRL$CLEAR$BOTTOM !1 !2 !3 !4 !5 !6 !7 !8 !9
                            SCRL$FORWARD$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
                        END

        SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
        INDICATE FOUND AS [SCRL.FOUND.STATUS]
#ENDCOMMAND

//=====> Scroll Clear Row <====================================================

#COMMAND SCRL$CLEAR$ROW
        FOR SCRL$ROW$NUM FROM SCRL$ROW$NUM TO !2
                MOVE ((SCRL$ROW$NUM - 1) * !3) TO WINDOWINDEX

                MOVE 0 TO SCRL$EXTRA
                WHILE SCRL$EXTRA LT !3
                        BLANKFORM !1.1&
                        INCREMENT SCRL$EXTRA
                        INCREMENT WINDOWINDEX
                END
        LOOP
#ENDCOMMAND

//=====> Scroll Clear Bottom <=================================================

#COMMAND SCRL$CLEAR$BOTTOM
        MOVE ((!3 * !2) - !3) TO WINDOWINDEX

        WHILE WINDOWINDEX LT (!2 * !3)
                BLANKFORM !1.1&
                INCREMENT WINDOWINDEX
        END
#ENDCOMMAND

//=====> Scroll Hilite Routine <===============================================

#COMMAND SCRL$HILITE$ROUTINE
    MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX

    SCREENMODE 112 ON

    WHILE WINDOWINDEX LT (SCRL$L$COUNT * !3)
        MOVE !1.1& TO !1.1&
        INCREMENT WINDOWINDEX
    END
    
    SCREENMODE 112 OFF
#ENDCOMMAND

//=====> Scroll Unhilite Routine <=============================================

#COMMAND SCRL$UNHILITE$ROUTINE
    MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX

    SCREENMODE 1 ON

    WHILE WINDOWINDEX LT (SCRL$L$COUNT * !3)
        MOVE !1.1& TO !1.1&
        INCREMENT WINDOWINDEX
    END
    
    SCREENMODE 1 OFF 
#ENDCOMMAND

//=====> Up Routine <==========================================================

#COMMAND SCRL$UP$ROUTINE
    REPEAT
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
    
        MOVE (SCRL$L$COUNT - 1) TO SCRL$L$COUNT
    
        IF SCRL$L$COUNT LT 1 ;
            MOVE 1 TO SCRL$L$COUNT
    
        MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX

        IF !1.1& EQ '' ;
            IF SCRL$L$COUNT GE 1 ;
                LOOP

    IF SCRL$L$COUNT LT 1 ;
        MOVE 1 TO SCRL$L$COUNT

    SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
#ENDCOMMAND

//=====> Down Routine <========================================================

#COMMAND SCRL$DOWN$ROUTINE
    REPEAT
        SCRL$UNHILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
    
        MOVE (SCRL$L$COUNT + 1) TO SCRL$L$COUNT
       
        IF SCRL$L$COUNT GT !2 ;
            MOVE 1 TO SCRL$L$COUNT
        
        MOVE ((SCRL$L$COUNT - 1) * !3) TO WINDOWINDEX
    
        IF !1.1& EQ '' ;
            IF SCRL$L$COUNT LE !2 ;
                LOOP

    IF SCRL$L$COUNT GT !2 MOVE 1 TO SCRL$L$COUNT

    SCRL$HILITE$ROUTINE !1 !2 !3 !4 !5 !6 !7 !8 !9
#ENDCOMMAND

//=====> Scroll Macro End <====================================================

//=====> Setpage Macro <=======================================================
#COMMAND SETPAGE RT .
   #CHECK !1.N UVFG
   #SET M$ !1.N
   MOVE !M TO CURRENT_IMAGE
   PAGE !1
#ENDCOMMAND




//********< Declare Variables >***********************************************
DATE_MACRO_INIT
INTEGER TIMER COUNT

NUMBER OLD_POST_AMT ABS_NUM CurBal

INDICATOR MENU_SCR BANK_SCR ADJ_SCR INHEAD DEPOSIT DRAFT TOP
INDICATOR CON_SCR CON2_SCR CON3_SCR DOCHK DODEP REDO_AMT NEW_REC
INDICATOR DEL_REC FIRST_DEP NO_EQUAL ALLOW_NEG YESNO
INDICATOR UPDATE

STRING ANSW 1 COMPARE 1

DATE TODAY TEMPDATE
//========< Open Files >=======================================================

OPEN REF
OPEN SYSFILE
OPEN DIVISION
OPEN BANK  INDEX.1
OPEN RECON INDEX.1
OPEN RECON2 INDEX.1
OPEN USERX
OPEN LEDGER




//=======< Page Set >==========================================================

PAGE SET SCRADJD AT 7 1
PAGE SET SCRADJC AT 7 1
PAGE SET OPTIONS AT 20 1
PAGE SET BLANK AT 20 1
PAGE SET SCRCON AT 1 1
PAGE SET SCRCON2 AT 6 1
PAGE SET SCRCON3 AT 6 1
Page set err1 at 8 5 colors 79 79



//========< Set Variables >===================================================

SYSDATE4 TODAY
MOVE '' TO COMPARE



//*******< Main Program Routines >*********************************************

//-------------- Find Logged On User For Program Use
CLEAR USERX
MOVE USER_NUMB TO USERX.USER_NUMB
  FIND EQ USERX BY INDEX.1
  [FINDERR] BEGIN       
   PAGE NOUSER
   INKEY ANSW
   ABORT
   END
MOVE USERX.USER_NAME TO USER$
MOVE USERX.ACCS_LEVL TO USER$_ACCESS
//----------------------------------------------------




//*******< Reconciliation Menu >***********************************************

RECON_MENU:
   FORMAT SCRMENU.3                  {RANGE=1,7}

REPEAT
   CLEARFORM SCRMENU
   MOVE USER_NUMB TO SCRMENU.1
   MOVE USER$ TO SCRMENU.2
   PAGE SCRMENU
TOP_MENU:
   INDICATE MENU_SCR TRUE
    MOVE '' TO SCRMENU.3     
    ACCEPT SCRMENU.3   
    INDICATE MENU_SCR FALSE
      IF SCRMENU.3 EQ 1 GOSUB BANKS   
      IF SCRMENU.3 EQ 2 GOSUB ADJUST 
      IF SCRMENU.3 EQ 3 GOSUB RECONCILE
      IF SCRMENU.3 EQ 4 CHAIN "RECONREG"
      IF SCRMENU.3 EQ 5 CHAIN "LEDGER"
      IF SCRMENU.3 EQ 6 CHAIN "LEGSETUP"
      IF SCRMENU.3 EQ 7 ABORT         
    INDICATE MENU_SCR TRUE
LOOP

RETURN
//********< Maintain Bank Codes >*********************************************
BANKS:
INDICATE BANK_SCR TRUE

TOP_BANKS:
ENTERGROUP
   AUTOPAGE SCRBANK
     ENTRY BANK.CODE              SCRBANK.1     {AUTOFIND,CAPSLOCK}
     INDICATE NEW_REC AS [FINDERR]
      [NEW_REC] MOVE 0 TO BANK.CURRENT_BAL
      [NEW_REC] MOVE 0 TO BANK.CLEARED
     ENTRY BANK.NAME              SCRBANK.2
     ENTRY BANK.ACCOUNT_ID        SCRBANK.3
     ENTRY BANK.CURRENT_BAL       SCRBANK.4
     ENTRY BANK.NEXT_CHECK_NUM    SCRBANK.5
ACCOUNT:
      CLEARXY 24 0
      GOTOXY 24 0
      SHOW " Enter The GL Account This Bank Code Will Use "
     ENTRY BANK.GL_ACCOUNT        SCRBANK.6
      IF SCRBANK.6 EQ 0 GOTO FINIS
DISTRICT:
      CLEARXY 24 0
      GOTOXY 24 0 
      SHOW " Enter Prosecutors District Code "
      IF SCRBANK.7 EQ 0 DISPLAY REF.DISTRICT TO SCRBANK.7
     ENTRY BANK.GL_DIST           SCRBANK.7

DIVISION:
      CLEARXY 24 0
      GOTOXY 24 0
      SHOW " Enter The GL Division "
     ENTRY BANK.GL_DIV            SCRBANK.8

     ENTRY BANK.LAST_DEP_DATE     SCRBANK.9      
     ENTRY BANK.LAST_RCPT         SCRBANK.10

      CLEARXY 24 0
        IF SCRBANK.6 NE 0 BEGIN
             CLEAR LEDGER
             MOVE SCRBANK.6 TO LEDGER.NUMBER
             MOVE SCRBANK.7 TO LEDGER.DISTRICT
             MOVE SCRBANK.8 TO LEDGER.DIVISION
             FIND EQ LEDGER BY INDEX.1
             [FINDERR] BEGIN
                       ERROR 127
                       GOTOXY 23 0
                       SHOW "PRESS ANY KEY TO CONTINUE"
                       INKEY ANSW
                       CLEARWARNING
                       CLEARXY 23 0
                       CLEARFORM SCRBANK.6 THRU SCRBANK.8
                       GOTO ACCOUNT
                    END
           END

FINIS:

REREAD
ENDGROUP
Save Bank
UNLOCK
CLEAR BANK
CLEARFORM
GOTO TOP_BANKS



QUIT_BANKS:
INDICATE BANK_SCR FALSE
CLEAR BANK
CLEARFORM
RETURN      //RETURN FOR (BANKS)

//*********< Check,Deposit and Adjustment Entry >*****************************

ADJUST:
   INDICATE ADJ_SCR TRUE
   INDICATE TOP TRUE
   INDICATE DRAFT FALSE
   INDICATE DEPOSIT FALSE
   INDICATE FIRST_DEP TRUE

   CLEARFORM SCRADJ
   CLEAR BANK
   CLEAR RECON

ENTERGROUP
   PAGE SCRADJ
     CLEARXY 24 0
     INDICATE INHEAD TRUE
     GOTOXY 24 0
     SHOW 'Enter Code of Bank To Reconcile '
     ENTRY BANK.CODE          SCRADJ.1          {AUTOFIND,FINDREQ,CAPSLOCK}
     CLEARXY 24 0
     [FOUND] ENTDISPLAY BANK
     ENTRY BANK.NAME          SCRADJ.2          {NOENTER}
     ENTRY BANK.CURRENT_BAL   SCRADJ.3          {NOENTER}
Reread Bank
ENDGROUP
Saverecord bank
Unlock

DO_TYPE:
     INDICATE TOP FALSE
     GOTOXY 24 0
     SHOW ' Enter Type of Transaction : C)hecks  D)eposits & adjustments '
     ACCEPT SCRADJ.4                            {CAPSLOCK,CHECK = 'DC'}
     CLEARXY 24 0
     IF SCRADJ.4 EQ 'D' PAGE SCRADJD
     IF SCRADJ.4 EQ 'C' PAGE SCRADJC
     IF SCRADJ.4 EQ 'D' INDICATE DEPOSIT TRUE
     IF SCRADJ.4 EQ 'C' INDICATE DRAFT TRUE
     IF SCRADJ.4 EQ 'D' GOTO DO_DEPOSITS
     IF SCRADJ.4 EQ 'C' GOTO DO_DRAFTS



DO_DEPOSITS:
INDICATE UPDATE FALSE
CLEAR RECON2
ENTERGROUP   // for recon2
EDIT_DEPO:
     INDICATE INHEAD FALSE
     INDICATE DRAFT FALSE
     INDICATE DEPOSIT TRUE
     INDICATE REDO_AMT FALSE
     INDICATE DEL_REC FALSE
     MOVE BANK.CODE TO RECON2.BANK_CODE
        [FIRST_DEP] IF ~ STATUS RECON2 DISPLAY TODAY TO SCRADJD.1
        [~ FIRST_DEP] IF ~ STATUS RECON2 DISPLAY TEMPDATE TO SCRADJD.1
        INDICATE FIRST_DEP FALSE
     ENTRY RECON2.TRANS_DATE     SCRADJD.1      {RETAIN}
        MOVE SCRADJD.1 TO TEMPDATE
     ENTRY RECON2.SEQ_NUMBER     SCRADJD.2      {AUTOFIND}
       INDICATE NEW_REC AS [FINDERR]
       [FOUND] ENTDISPLAY RECON2
       [FINDERR] PAGE OPTIONS
       [NEW_REC] BEGIN
         CLEAR RECON2
         CLEARFORM SCRADJD.3 THRU SCRADJD.7
         Move Bank.Code to recon2.bank_Code
        END
     ENTRY RECON2.POSTING_TYPE    SCRADJD.3      {CHECK = 'IABWDN',CAPSLOCK}
       [FINDERR] PAGE BLANK
       INDICATE ALLOW_NEG AS SCRADJD.3 EQ 'A'
     ENTRY RECON2.REFERENCE       SCRADJD.4
     ENTRY RECON2.COMMENT         SCRADJD.5
ABOVE_AMT:
      INDICATE REDO_AMT TRUE
      MOVE (0.00) TO OLD_POST_AMT
      [~ NEW_REC] MOVE RECON2.AMOUNT TO OLD_POST_AMT
    REPEAT
     ENTRY RECON2.AMOUNT          SCRADJD.6
       [~ ALLOW_NEG] IF SCRADJD.6 LE 0 BEGIN
           ERROR 131
           CLEARFORM SCRADJD.6
         END
        [~ ALLOW_NEG] IF SCRADJD.6 LE 0 LOOP
       
      INDICATE NO_EQUAL AS OLD_POST_AMT NE SCRADJD.6
     [~ UPDATE][NEW_REC] DISPLAY 'N' TO SCRADJD.7
     [~ UPDATE][NEW_REC] MOVE 'N' TO COMPARE
     [~ UPDATE][~ NEW_REC] MOVE RECON2.STATUS TO COMPARE
     ENTRY RECON2.STATUS          SCRADJD.7      {CAPSLOCK,CHECK = 'Y|N'}
     [~ UPDATE] INDICATE UPDATE AS SCRADJD.7 NE COMPARE


[~ New_rec] Reread recon2
EndGroup
Save Recon2
Unlock
    
     
END_DEPOSITS:


      
     CLEARXY 24 0
     GOTOXY 24 0
        SHOW " OPTIONS:  A)ccept    E)dit     D)elete "
     MOVE '' TO ANSW

       REPEAT
          INKEY ANSW
          UPPERCASE ANSW
          IF ~ ANSW IN 'AED' LOOP


          IF ANSW EQ 'E' CLEARXY 24 0
          IF ANSW EQ 'E' GOTO EDIT_DEPO
          IF ANSW EQ 'D' BEGIN

             [NEW_REC] BEGIN
                 CLEARXY 24 0
                 CLEARFORM SCRADJD
                 CLEAR RECON2
                 GOTO EDIT_DEPO    
                END

             [~ NEW_REC] BEGIN
                   CLEARXY 24 0
                   GOTOXY 24 0
                   SHOW " Are You Sure You Want To Delete This Record ?? (Y/N)"
                   GOTOXY 24 56
                   MOVE '' TO ANSW

                     REPEAT
                       INKEY ANSW
                       UPPERCASE ANSW
                     IF ~ ANSW IN 'YN' LOOP                    

              IF ANSW EQ 'Y' BEGIN
                Reread Bank
                         CLEARXY 24 0
                         INDICATE DEL_REC AS ANSW EQ 'Y'

                       IF SCRADJD.3 EQ 'A' BEGIN
                          MOVE (0.00) TO ABS_NUM
                          IF SCRADJD.6 LT 0 MOVE (-SCRADJD.6) TO ABS_NUM
                          IF SCRADJD.6 GT 0 MOVE ;
                           (BANK.CURRENT_BAL + SCRADJD.6) TO BANK.CURRENT_BAL
                       END
  
                       IF SCRADJD.3 IN 'BWN' MOVE (BANK.CURRENT_BAL + SCRADJD.6) TO ;
                                                             BANK.CURRENT_BAL
                       IF SCRADJD.3 IN 'ID' MOVE (BANK.CURRENT_BAL - SCRADJD.6) TO ;
                                                             BANK.CURRENT_BAL
           IF SCRADJD.7 EQ 'Y' BEGIN
             IF SCRADJD.3 EQ 'A' BEGIN
                  IF BANK.CLEARED LT 0 IF SCRADJD.6 LT 0 BEGIN
                     MOVE (0.00) TO ABS_NUM
                     MOVE (SCRADJD.6) TO ABS_NUM
                     MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
                  END
                  IF BANK.CLEARED GT 0 IF SCRADJD.6 LT 0 BEGIN
                     MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
                  END
                  IF BANK.CLEARED LT 0 IF SCRADJD.6 GT 0 BEGIN
                     MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
                  END
                  IF BANK.CLEARED GT 0 IF SCRADJD.6 GT 0 BEGIN
                     MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED
                  END
             END
                  IF SCRADJD.3 IN "ID" MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
                  IF SCRADJD.3 IN "BWN" MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED

            END  // End of If Answ eq y Begin
          Saverecord Bank
          Unlock

                  SETPAGE SCRADJ
                  MOVE BANK.CURRENT_BAL TO SCRADJ.3
                         DELETE RECON2
                         CLEAR RECON2
                         CLEARFORM SCRADJD
                         INDICATE DEL_REC FALSE
                         GOTO DO_DEPOSITS

 END    //End  of if answ eq yes
                 
                     IF ANSW EQ 'N' BEGIN
                         CLEARXY 24 0
                         INDICATE DEL_REC FALSE
                         GOTO END_DEPOSITS
                     END

 END   // End of Not New Rec

                CLEARXY 24 0

 END   //If answ eq D Begin




Reread Bank


[UPDATE] BEGIN
   If ~ status Bank Begin
       clearxy 24 0
       gotoxy 24 0
       show " No Bank Record"
       Inkey answ
   End

    IF SCRADJD.3 EQ 'A' BEGIN
       IF SCRADJD.7 EQ 'Y' MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
       IF SCRADJD.7 EQ 'N' BEGIN
           IF BANK.CLEARED LT 0 IF SCRADJD.6 LT 0 BEGIN
              MOVE (0.00) TO ABS_NUM
              MOVE (SCRADJD.6) TO ABS_NUM
              MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
           END
           IF BANK.CLEARED GT 0 IF SCRADJD.6 LT 0 BEGIN
              MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
           END
           IF BANK.CLEARED LT 0 IF SCRADJD.6 GT 0 BEGIN
              MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
           END
           IF BANK.CLEARED GT 0 IF SCRADJD.6 GT 0 BEGIN
              MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED
           END
       END
    END
    IF SCRADJD.3 IN 'ID' BEGIN
           IF SCRADJD.7 EQ 'Y' MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED
           IF SCRADJD.7 EQ 'N' MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
    END
    IF SCRADJD.3 IN 'BWN' BEGIN
           IF SCRADJD.7 EQ 'Y' MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
           IF SCRADJD.7 EQ 'N' MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED
    END
END
      

[NEW_REC] IF SCRADJD.3 EQ 'A' BEGIN
   MOVE (0.00) TO ABS_NUM
   IF SCRADJD.6 LT 0 MOVE (-SCRADJD.6) TO ABS_NUM
   IF SCRADJD.6 GT 0 MOVE (BANK.CURRENT_BAL - SCRADJD.6) TO BANK.CURRENT_BAL
   IF SCRADJD.6 LT 0 MOVE (BANK.CURRENT_BAL + ABS_NUM) ;
                                                         TO BANK.CURRENT_BAL
// [YESNO] GOSUB ABNW_ADD
// [~ YESNO] GOSUB ABNW_SUB
  END
 [~ NEW_REC][NO_EQUAL] IF SCRADJD.3 EQ 'A' BEGIN
   [~ DEL_REC] BEGIN
   MOVE (0.00) TO ABS_NUM
   IF SCRADJD.6 LT 0 MOVE (-SCRADJD.6) TO ABS_NUM
   IF SCRADJD.6 LT 0 MOVE (BANK.CURRENT_BAL + OLD_POST_AMT + ABS_NUM) TO ;
                                                            BANK.CURRENT_BAL
   IF SCRADJD.6 GT 0 MOVE (BANK.CURRENT_BAL + OLD_POST_AMT - SCRADJD.6) ;
                                                         TO BANK.CURRENT_BAL
// [YESNO] GOSUB ABNW_ADD
// [~ YESNO] GOSUB ABNW_SUB
   END
  END


 [~ DEL_REC] IF SCRADJD.3 IN 'BWN' BEGIN
     [NEW_REC] MOVE (BANK.CURRENT_BAL - SCRADJD.6) TO BANK.CURRENT_BAL
     [~ NEW_REC] MOVE (BANK.CURRENT_BAL + OLD_POST_AMT - SCRADJD.6 ) TO ;
                                                              BANK.CURRENT_BAL
//   [YESNO] GOSUB ABNW_ADD
//   [~ YESNO] GOSUB ABNW_SUB
  END


 [~ DEL_REC]  IF SCRADJD.3 IN 'ID' BEGIN
     [NEW_REC] MOVE (BANK.CURRENT_BAL + SCRADJD.6) TO BANK.CURRENT_BAL
   [~ NEW_REC] MOVE (BANK.CURRENT_BAL - OLD_POST_AMT + SCRADJD.6) TO ;
                                                             BANK.CURRENT_BAL
// [YESNO] GOSUB DI_ADD
// [~ YESNO] GOSUB DI_SUB
   END

  SETPAGE SCRADJ
  MOVE BANK.CURRENT_BAL TO SCRADJ.3
Saverecord Bank
Unlock

CLEAR RECON2
BLANKFORM SCRADJD
GOTO DO_DEPOSITS

DO_DRAFTS:
INDICATE UPDATE FALSE

ENTERGROUP
EDIT_DRAFTS:
     MOVE (0.00) TO OLD_POST_AMT
     INDICATE INHEAD FALSE
     INDICATE DEPOSIT FALSE
     INDICATE DRAFT TRUE
     INDICATE REDO_AMT FALSE
     MOVE BANK.CODE TO RECON.BANK_CODE
     REPEAT
     MOVE SCRADJC.1 TO RECON.TRANS_DATE
     ENTRY RECON.CHECK_NUMBER   SCRADJC.1      {AUTOFIND}
       [~ KEY.ESCAPE] IF SCRADJC.1 EQ 0 LOOP
       [FOUND] ENTDISPLAY RECON
       INDICATE NEW_REC AS [FINDERR]
     ENTRY RECON.POSTING_DATE    SCRADJC.2
     ENTRY RECON.TRANS_DATE      SCRADJC.3
     ENTRY RECON.PAYOR           SCRADJC.4
ABOVE_AMT_DRAFT:
     INDICATE REDO_AMT TRUE
     MOVE (0.00) TO OLD_POST_AMT
     [~ NEW_REC] MOVE RECON.AMOUNT TO OLD_POST_AMT
     ENTRY RECON.AMOUNT          SCRADJC.5
     [~ UPDATE][NEW_REC] DISPLAY 'N' TO SCRADJC.6
     [~ UPDATE][NEW_REC] MOVE 'N' TO COMPARE
     [~ UPDATE][~ NEW_REC] MOVE RECON.STATUS TO COMPARE 
     ENTRY RECON.STATUS          SCRADJC.6      {CAPSLOCK,CHECK = 'Y|N'}
     [~ UPDATE] INDICATE UPDATE AS SCRADJC.6 NE COMPARE

END_DRAFTS:

      
     CLEARXY 24 0
     GOTOXY 24 0
        SHOW " OPTIONS:  A)ccept    E)dit     D)elete "
     MOVE '' TO ANSW
       REPEAT         
          INKEY ANSW
          UPPERCASE ANSW
          IF ~ ANSW IN 'AED' LOOP
          IF ANSW EQ 'E' CLEARXY 24 0
          IF ANSW EQ 'E' GOTO EDIT_DRAFTS
          IF ANSW EQ 'D' BEGIN
             [NEW_REC] BEGIN
                 CLEARXY 24 0
                 CLEARFORM SCRADJD
                 CLEAR RECON
                 GOTO EDIT_DRAFTS  
                END
             [~ NEW_REC] BEGIN
                 CLEARXY 24 0
                 GOTOXY 24 0
                 SHOW " Are You Sure You Want To Delete This Record ?? (Y/N)"
                 GOTOXY 24 56
                 MOVE '' TO ANSW
                   REPEAT 
                     INKEY ANSW
                     UPPERCASE ANSW
                     IF ~ ANSW IN 'YN' LOOP                    
                     IF ANSW EQ 'Y' BEGIN
                         CLEARXY 24 0
                  MOVE (BANK.CURRENT_BAL - OLD_POST_AMT) TO BANK.CURRENT_BAL
                  SETPAGE SCRADJ
                  MOVE BANK.CURRENT_BAL TO SCRADJ.3
                      DELETE RECON
                      CLEAR RECON
                      CLEARFORM SCRADJC
                      GOTO DO_DRAFTS
                    END

                     IF ANSW EQ 'N' BEGIN
                      CLEARXY 24 0
                      GOTO END_DRAFTS
                    END
               END
          END

[UPDATE] BEGIN
    IF SCRADJC.6 EQ 'Y' MOVE (BANK.CLEARED + SCRADJC.5) TO BANK.CLEARED
    IF SCRADJC.6 EQ 'N' MOVE (BANK.CLEARED - SCRADJC.5) TO BANK.CLEARED
END


 MOVE ( BANK.CURRENT_BAL + OLD_POST_AMT - SCRADJC.5) TO BANK.CURRENT_BAL
 SETPAGE SCRADJ
 MOVE BANK.CURRENT_BAL TO SCRADJ.3
Reread
EndGroup
SAVE RECON
UNLOCK
CLEAR RECON
CLEARFORM SCRADJC
GOTO DO_DRAFTS

QUIT_ADJUST:
   CLEARFORM SCRADJ
   CLEAR BANK
   CLEAR RECON
   INDICATE ADJ_SCR FALSE
RETURN

//*********< Reconcile Bank Statement >***************************************

RECONCILE:

START_RECON:
INDICATE TOP TRUE
INDICATE CON_SCR TRUE
INDICATE INHEAD FALSE
CLEAR RECON
CLEAR BANK
CLEARFORM SCRCON
CLEARFORM SCRCON2
CLEARFORM SCRCON3

FORMAT SCRCON.4        {CAPSLOCK}
 Move (0) to curbal
 Clearscreen
 Page scrcon
 
 Repeat
   Accept scrcon.1 to bank.code
    uppercase scrcon.1
      If scrcon.1 eq '' Begin
        Beep
        Message " An entry is required for bank code"
      End
    IF SCRCON.1 EQ '' loop
    Clearmessage
     Clear bank
     Move scrcon.1 to Bank.code
        Find eq bank by index.1
        [Finderr] Begin
            beep
            Repeat
               Clearform err1.1
               accept err1.1
               uppercase err1.1
                 If Not err1.1 in "QR" loop
                    If err1.1 eq "Q" Abort
                    GoTo Start_Recon
        End
        Display Bank.Name to scrcon.2
        Display Bank.stmt_Bal to Scrcon.3
          Move Bank.stmt_Bal to curbal
          Repeat
             Message " Please enter your current bank statement balance "
             Accept scrcon.3
             Clearmessage
              MiniMenu " Is your entry correct? Y]es N]o"
               If _char eq "N" Loop
           If scrcon.3 ne curbal Begin
              Reread bank
              move scrcon.3 to bank.stmt_Bal
              Saverecord Bank
              Unlock
           End


START_DETAIL:
   INDICATE INHEAD TRUE
   INDICATE TOP FALSE
   CLEARXY 24 0
   GOTOXY 24 0
   SHOW " Enter C)heck or D)eposits .... (C/D)"
   REPEAT
     ACCEPT SCRCON.4
      IF ~ SCRCON.4 IN 'CD' LOOP
       CLEARXY 24 0
       INDICATE DOCHK AS SCRCON.4 EQ 'C'
       INDICATE DODEP AS SCRCON.4 EQ 'D'
              CLEAR RECON
      [DOCHK] BEGIN
              INDICATE DRAFT TRUE
              INDICATE DEPOSIT FALSE
              INDICATE INHEAD FALSE
              DISPLAY 'CHECKS' TO SCRCON.5
              CLEAR RECON
              MOVE BANK.CODE TO RECON.BANK_CODE
              MOVE SCRCON2.1& TO RECON.CHECK_NUMBER
              PAGE SCRCON2
            SCRL SCRCON2 16 6 RECON INDEX.1 DISPLAY_CHK FIND_LT_CHK FIND_GT_CHK;
                                        TEST_CHK
       END          
       
       [DODEP] BEGIN
              INDICATE DEPOSIT TRUE
              INDICATE DRAFT FALSE
              INDICATE INHEAD FALSE
              DISPLAY 'DEPOSITS/ADJUSTMENTS' TO SCRCON.5
              CLEAR RECON2
              MOVE SCRCON.1 TO RECON2.BANK_CODE
              MOVE SCRCON3.1& TO RECON2.TRANS_DATE   
              MOVE 0 TO RECON2.SEQ_NUMBER
           PAGE SCRCON3
           SCRL SCRCON3 16 6 RECON2 INDEX.2 DISPLAY_DEP FIND_LT_DEP FIND_GT_DEP;
                                       TEST_DEP
       
        END


      

[KEY.ESCAPE] BEGIN
    SCREENMODE 1 ON
    BLANKFORM SCRCON2
    BLANKFORM SCRCON3
    CLEARXY 6 0
    CLEAR RECON RECON2
    CLEARFORM SCRCON.4 THRU SCRCON.5
    INDICATE DEPOSIT FALSE
    INDICATE DRAFT FALSE
    //GOTO START_DETAIL
    Return Start_Detail
END




QUIT_RECONCILE:
  CLEARXY 24 0
  GOTOXY 24 0
  SHOW ' Are you ready to print Reconciliation Register ? (Y/N)'
  GOTOXY 24 60
 REPEAT
  INKEY ANSW
  UPPERCASE ANSW
  IF ~ ANSW IN 'YN' LOOP
  IF ANSW EQ 'Y' CHAIN "RECONREG"

  INDICATE CON_SCR FALSE
  INDICATE CON2_SCR FALSE
  INDICATE CON3_SCR FALSE


RETURN

//*********< Scroll Subroutines >**********************************************

DISPLAY_CHK:
    MOVE RECON.CHECK_NUMBER TO SCRCON2.1&
    MOVE RECON.TRANS_DATE   TO SCRCON2.2&
    MOVE RECON.REFERENCE    TO SCRCON2.3&
    MOVE RECON.PAYOR        TO SCRCON2.4&
    MOVE RECON.AMOUNT       TO SCRCON2.5&
    MOVE RECON.STATUS       TO SCRCON2.6&
RETURN



FIND_LT_CHK:
    MOVE BANK.CODE TO RECON.BANK_CODE
    MOVE SCRCON2.1 TO RECON.CHECK_NUMBER
RETURN


FIND_GT_CHK:
    MOVE BANK.CODE TO RECON.BANK_CODE
    MOVE SCRCON2.91 TO RECON.CHECK_NUMBER
RETURN


TEST_CHK:
    INDICATE SCRL_INDICATOR AS RECON.BANK_CODE EQ SCRCON.1 
RETURN



DISPLAY_DEP:
    MOVESTR RECON2.TRANS_DATE TO SCRCON3.1&
    MOVESTR RECON2.SEQ_NUMBER TO SCRCON3.2&
    MOVESTR RECON2.REFERENCE TO SCRCON3.3&
    MOVESTR RECON2.COMMENT TO SCRCON3.4&
    MOVENUM RECON2.AMOUNT TO SCRCON3.5&
    MOVESTR RECON2.STATUS TO SCRCON3.6&
RETURN


FIND_LT_DEP:
//  MOVE '01/01/50' TO RECON2.TRANS_DATE
    MOVE SCRCON.1 TO RECON2.BANK_CODE
    MOVESTR SCRCON3.1 TO RECON2.TRANS_DATE
    MOVESTR SCRCON3.2 TO RECON2.SEQ_NUMBER
RETURN



FIND_GT_DEP:
    MOVE SCRCON.1 TO RECON2.BANK_CODE
    MOVESTR SCRCON3.91 TO RECON2.TRANS_DATE
    MOVESTR SCRCON3.92 TO RECON2.SEQ_NUMBER
RETURN


TEST_DEP:
    INDICATE SCRL_INDICATOR AS RECON2.BANK_CODE EQ SCRCON.1
RETURN

EDIT_CHK:
  CLEARXY 24 0
  GOTOXY 24 0
  SHOW "Start"
  INKEY ANSW

       INDICATE PASS_EDIT_CHK FALSE
       IF SCRCON2.6& EQ 'N' BEGIN
           MOVE 'Y' TO SCRCON2.6&
           INDICATE PASS_EDIT_CHK TRUE
         END
       [~ PASS_EDIT_CHK] MOVE 'N' TO SCRCON2.6&
  CLEARXY 24 0
  GOTOXY 24 0
  SHOW "next"
  INKEY ANSW

    CLEAR RECON
    MOVE SCRCON2.1& TO RECON.CHECK_NUMBER
    MOVE BANK.CODE TO RECON.BANK_CODE
      FIND EQ RECON BY INDEX.1
         Reread
         MOVE SCRCON2.6& TO RECON.STATUS
         IF RECON.STATUS EQ 'Y' BEGIN
  CLEARXY 24 0
  GOTOXY 24 0
  SHOW "Y & 1"
  INKEY ANSW
          MOVE (BANK.CLEARED + SCRCON2.5&) TO BANK.CLEARED
   CLEARXY 24 0
  GOTOXY 24 0
  SHOW "Y & 2"
  INKEY ANSW
        END
         IF RECON.STATUS EQ 'N' BEGIN
  CLEARXY 24 0
  GOTOXY 24 0
  SHOW "N & 1"
  INKEY ANSW
          MOVE (BANK.CLEARED - SCRCON2.5&) TO BANK.CLEARED
   CLEARXY 24 0
  GOTOXY 24 0
  SHOW "N & 2"
  INKEY ANSW
        END
      SAVE RECON BANK
      unlock
      SCREENMODE 1 ON
      SETPAGE SCRCON
      MOVE ((BANK.STMT_BAL - BANK.PRIOR_STMT_BAL) + BANK.CLEARED) TO SCRCON.6
      SETPAGE SCRCON2
RETURN


EDIT_DEP:
    INDICATE PASS_EDIT_CHK FALSE
     IF SCRCON3.6& EQ 'N' BEGIN
        MOVE 'Y' TO SCRCON3.6&
        INDICATE PASS_EDIT_CHK TRUE
      END
    [~ PASS_EDIT_CHK] MOVE 'N' TO SCRCON3.6&

   CLEAR RECON2
   MOVE BANK.CODE TO RECON2.BANK_CODE
   MOVE SCRCON3.1& TO RECON2.TRANS_DATE
   MOVE SCRCON3.2& TO RECON2.SEQ_NUMBER
      FIND EQ RECON2 BY INDEX.1
       reread
         MOVE SCRCON3.6& TO RECON2.STATUS
         INDICATE YESNO AS RECON2.STATUS EQ 'Y'
         [YESNO] IF RECON2.POSTING_TYPE IN 'ABNW' GOSUB ABNW_ADD2
         [~ YESNO] IF RECON2.POSTING_TYPE IN 'ABNW' GOSUB ABNW_SUB2
         [YESNO] IF RECON2.POSTING_TYPE IN 'DI' GOSUB DI_ADD2
         [~ YESNO] IF RECON2.POSTING_TYPE IN 'DI' GOSUB DI_SUB2
      SAVERECORD Recon2 BANK
      unlock
      SCREENMODE 1 ON
      SETPAGE SCRCON
      MOVE ((BANK.STMT_BAL - BANK.PRIOR_STMT_BAL) + BANK.CLEARED ) TO SCRCON.6 
      SETPAGE SCRCON3
RETURN



SHOW_LINE:
  CLEARXY 24 0
  GOTOXY 24 0
  SHOW SCRL$L$COUNT
RETURN
   


//*********< Universal Subroutines >******************************************

TIME_DELAY:
    MOVE 0 TO TIMER
    FOR TIMER FROM 0 TO 800
    LOOP
RETURN

FILE_EMPTY:
    CLEARXY 24 0
    GOTOXY 24 0
    SHOW ' FILE EMPTY !!   Press any Key To Continue '
    INKEY ANSW
    CLEARXY 24 0
RETURN

ABNW_ADD:
    [NEW_REC] MOVE (BANK.CLEARED + SCRADJD.6) TO BANK.CLEARED
    [~ NEW_REC] MOVE (BANK.CLEARED - OLD_POST_AMT + SCRADJD.6) TO BANK.CLEARED
RETURN

ABNW_SUB:
    [NEW_REC] MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED
    [~ NEW_REC] MOVE (BANK.CLEARED + OLD_POST_AMT - SCRADJD.6) TO BANK.CLEARED
RETURN

DI_ADD:
    [NEW_REC] MOVE (BANK.CLEARED - SCRADJD.6) TO BANK.CLEARED
    [~ NEW_REC] MOVE (BANK.CLEARED + OLD_POST_AMT - SCRADJD.6) TO BANK.CLEARED
RETURN

DI_SUB:
    [NEW_REC] MOVE (BANK.CLEARED + SCRADJD.6 ) TO BANK.CLEARED
    [~ NEW_REC] MOVE (BANK.CLEARED - OLD_POST_AMT - SCRADJD.6) TO BANK.CLEARED
RETURN


ABNW_ADD2:
   CLEARXY 24 0
  GOTOXY 24 0
  SHOW "N & 7"
  INKEY ANSW

     MOVE (BANK.CLEARED + SCRCON3.5&) TO BANK.CLEARED
RETURN

ABNW_SUB2:
   CLEARXY 24 0
  GOTOXY 24 0
  SHOW "N & 8"
  INKEY ANSW

     MOVE (BANK.CLEARED - SCRCON3.5&) TO BANK.CLEARED
RETURN

DI_ADD2:
    CLEARXY 24 0
 GOTOXY 24 0
  SHOW Bank.cleared "   " scrcon3.5&
  INKEY ANSW

    MOVE (BANK.CLEARED - SCRCON3.5&) TO BANK.CLEARED
	inkey answ
    CLEARXY 24 0
 GOTOXY 24 0
  SHOW Bank.cleared "   " scrcon3.5& "  after "
  INKEY ANSW	
	
RETURN

DI_SUB2: 
   CLEARXY 24 0
  GOTOXY 24 0
  SHOW "N & 10"
  INKEY ANSW

    MOVE (BANK.CLEARED + SCRCON3.5&) TO BANK.CLEARED
RETURN
   

//*********< KEY PROC'S >*****************************************************

//--------< KEYPROC KEY.ANY >-------------------------------------------------



//--------< KEY PROC KEY.ESCAPE >---------------------------------------------

KEYPROC KEY.ESCAPE

     [MENU_SCR] BEGIN
         CLEARXY 24 0
         GOTOXY 24 1
         SHOW " Ready to Exit Program ? (Y/N) "
         GOTOXY 24 34
         MOVE '' TO ANSW
         INKEY ANSW
         UPPERCASE ANSW
         IF ANSW IN 'Y' BEGIN
               CLEARSCREEN
               ABORT
         END
         ELSE BEGIN
             CLEARXY 24 0
             ENTAGAIN
           RETURN
         END
      END

[BANK_SCR]  RETURN QUIT_BANKS
[ADJ_SCR][INHEAD] BEGIN 
           CLEARFORM SCRADJD
           CLEARFORM SCRADJC
           CLEAR RECON2
           CLEAR RECON
           [TOP] RETURN QUIT_ADJUST
           [~ TOP] RETURN ADJUST
         END
[ADJ_SCR][~ INHEAD] BEGIN
          INDICATE INHEAD TRUE
          CLEARXY 24 0
          PAGE SCRADJ
          RETURN DO_TYPE
       END

[CON_SCR][INHEAD] BEGIN
     CLEARFORM SCRCON
     CLEAR BANK
     INDICATE INHEAD FALSE
     RETURN START_RECON
    END

[CON_SCR][TOP] Begin
    Clear Bank recon recon2
    Return Quit_Reconcile
End

ENTAGAIN
RETURN

//-------< KEY PROC KEY.CLEAR >------------------------------------------------

KEYPROC KEY.CLEAR
     [ADJ_SCR][INHEAD] BEGIN
                 CLEARFORM
                 CLEAR BANK
                 CLEAR RECON2
                 CLEAR RECON
                 RETURN ADJUST
              END
     [ADJ_SCR][~ INHEAD] BEGIN
                 [DEPOSIT] PAGE BLANK
                 CLEARFORM SCRADJD
                 CLEARFORM SCRADJC
                 CLEAR RECON2
                 CLEAR RECON
                 [DEPOSIT] RETURN DO_DEPOSITS
                 [DRAFT]   RETURN DO_DRAFTS
              END
     [BANK_SCR] BEGIN
                 CLEARFORM SCRBANK
                 CLEAR BANK
                 RETURN BANKS
              END

ENTAGAIN
RETURN


//-------< KEY PROC KEY.DELETE >-----------------------------------------------

KEYPROC KEY.DELETE
//IF USER$_ACCESS LT 80 BEGIN
//   ERROR 123
//   INKEY ANSW
//   CLEARWARNING
//   RETURN
// END

[BANK_SCR] BEGIN
     CLEARXY 24 0
     GOTOXY 24 0
     SCREENMODE 112 ON
     SHOW " You Are About To Delete A Bank Record,Are You Sure.? .D)elete E)nd          "
     SCREENMODE 1 ON
REDO_DEL:
     MOVE '' TO ANSW
     INKEY ANSW
     UPPERCASE ANSW
     IF ANSW EQ 'D' BEGIN
     DELETE BANK 
     CLEARXY 24 0 
     CLEARFORM
     RETURN BANKS
    END
     IF ANSW EQ 'E' BEGIN
        CLEARXY 24 0
        RETURN BANKS
     END
     IF ~ ANSW IN 'DE' GOTO REDO_DEL

END

[ADJ_SCR] BEGIN
   [DEPOSIT][~ NEW_REC] RETURN END_DEPOSITS
END
      


ENTAGAIN
RETURN

//-------< KEY PROC KEY.SAVE >------------------------------------------------

KEYPROC KEY.SAVE

[BANK_SCR] RETURN FINIS

[ADJ_SCR][~ INHEAD] IF STATUS RECON BEGIN
          [DEPOSIT] RETURN END_DEPOSITS
          [DRAFT]   RETURN END_DRAFTS
       END

ENTAGAIN
RETURN

//--------< KEYPROC KEY.NEXT >------------------------------------------------

KEYPROC KEY.NEXT
  [DEPOSIT] IF STATUS RECON2 BEGIN
      FIND GT RECON2 BY INDEX.1
      [FOUND] ENTDISPLAY RECON2
      [FINDERR] BEGIN
         ERROR 42 'PRESS A KEY'
         INKEY ANSW
         CLEARWARNING
         CLEARFORM SCRADJD.3 THRU SCRADJD.7
      END
      RETURN EDIT_DEPO
    END
      
  [DEPOSIT] IF NOT STATUS RECON2 BEGIN
      FIND GE RECON2 BY INDEX.1
      [FOUND] ENTDISPLAY RECON2
      [FINDERR] BEGIN
         ERROR 41 'PRESS A KEY'
         INKEY ANSW
         CLEARWARNING
         CLEARFORM SCRADJD.3 THRU SCRADJD.7
         CLEAR RECON
      END
      RETURN EDIT_DEPO
    END
   
  
  ENTAGAIN
RETURN

//-------< KEYPROC KEY.PREVIOUS >--------------------------------------------

KEYPROC KEY.PREVIOUS
  [DEPOSIT]  IF STATUS RECON2 BEGIN
      FIND LT RECON2 BY INDEX.1
      [FOUND] ENTDISPLAY RECON2
      [FINDERR] BEGIN
        ERROR 41 'PRESS A KEY'
        INKEY ANSW
        CLEARWARNING
        CLEARFORM SCRADJD.3 THRU SCRADJD.7
      END  
    RETURN EDIT_DEPO
    END

  [DEPOSIT]  IF NOT STATUS RECON2 BEGIN
      FIND LE RECON2 BY INDEX.1
      [FOUND] ENTDISPLAY RECON2
      [FINDERR] BEGIN
        ERROR 41 'PRESS A KEY'
        INKEY ANSW
        CLEARWARNING
        CLEARFORM SCRADJD.3 THRU SCRADJD.7
        CLEAR RECON2
      END  
    RETURN EDIT_DEPO
    END

   
   ENTAGAIN
RETURN

//-------< KEYPROC KEY.UP >----------------------------------------------------

KEYPROC KEY.UP
   ENTAGAIN
RETURN

//-------< KEYPROC KEY.DOWN >--------------------------------------------------

KEYPROC KEY.DOWN
   ENTAGAIN
RETURN

//-------< KEYPROC KEY.USER >--------------------------------------------------

KEYPROC KEY.USER
   ENTAGAIN
RETURN

//-------< KEYPROC KEY.USER2 >-------------------------------------------------

KEYPROC KEY.USER2
    ENTAGAIN
RETURN

//-------< KEYPROC KEY.HELP >--------------------------------------------------

KEYPROC KEY.HELP
    ENTAGAIN
RETURN
