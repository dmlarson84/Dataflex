;---------------------------------------------------------------------------
;  Autogen.ini - Configuration for DFAuto Code Generator
;
;
; [DEFAULTS]                       This sets all System Defaults
;                                  -----------------------------
; ALLENTRY_PACKAGE=ALLENTRY        Name of Allentry Package to Use
; ALLENTRY_TEST_PACKAGE=ALLENTRC   Name of Allentry Package for test Program
; CONFIRM_PACKAGE=CONFIRM          Name of Confirm Package (if blank=none)
; REUSE_DATA_SETS=ON               Use existing Data_set packages?
; REUSE_SELECTION_LISTS=ON         Use existing Sel-Lists Packages?
; CREATE_VIEW=ON                   Create a View?
; CREATE_TEST=ON                   Create a Test Program?
; AUTOCLEAR=ON                     AutoClear on all entry items?
; INDENT=4                         Spaces to Indent?
; TEST_NAME=TEST.SRC               Test Program (if create_view & test =ON)
;
; Note: These default settings are used if the setting is omitted in Autogen.ini.
;       To turn a boolean setting OFF you must explicitly set that option to OFF.
;       Example: To turn off CREATE_TEST, you MUST include the following line:
;
;       CREATE_TEST=OFF
;
; Each DEO type has a section where you can define:
;
;    1. the class's name       (CLASS=ClassName)
;    2. the object's extension (OBJECT=ExtName)
;    3. any default code to place in the object (or in the case of
;       data_set_class, in the class)
;
; The default values of these are:
;
; DEO Type             Default Class          Object Extension
; -------------------  ------------------     -------------------
; [ENTRY_VIEW_CLIENT]  Entry_View_Client      EC  (object_name_EC)
; [ENTRY_FORM]         Entry_Form             EF
; [DATA_SET_CLASS]     Data_Set               Data_Set
; [DATA_SET_OBJECT]    <none - uses above>    DS
; [TABLE]              Table                  TBL
; [SELECTION_LIST]     Selection_list         SL
; [ENTRY_CLIENT]       Entry_Client           EC
; [TEXT_WINDOW]        Text_Window            TW
; [ZOOM]               Entry_Form             ZM
;
;
; Note the reason for a Data_set_object and a class is this
; allows custom code to be placed in both of these.
;
; THIS IS A SAMPLE - You are encouraged to customize this!!
;-----------------------------------------------------------------------------


;
;  Set System Defaults
;
[DEFAULTS]
ALLENTRY_PACKAGE=ALLENTRY
ALLENTRY_TEST_PACKAGE=ALLENTRC
CONFIRM_PACKAGE=CONFIRM
REUSE_DATA_SETS=ON
REUSE_SELECTION_LISTS=ON
CREATE_VIEW=ON
CREATE_TEST=ON
AUTOCLEAR=ON
INDENT=4
TEST_NAME=TEST.SRC

;
; Set Values for Each DEO type
;
[ENTRY_VIEW_CLIENT]
CLASS=Entry_View_Client
OBJECT=View
;

// Define Default Confirmation Messages
Set Verify_Save_MSG       to GET_Save_Confirmation
Set Verify_Delete_MSG     to GET_Delete_Confirmation
Set Verify_Data_Loss_MSG  to GET_Data_loss_Confirmation
Set Verify_Exit_MSG       to GET_Exit_loss_Confirmation
;
;
[ENTRY_FORM]
CLASS=Entry_Form
OBJECT=EF
;
;
[DATA_SET_CLASS]
CLASS=Data_Set
OBJECT=Data_Set
;

// Create the most likely procedures and functions that will be
// required by data-set sub-classes. These are the hooks that you
// will need to create.

//  Function Validate_Save - Called right before save. Return non-zero
//                           to stop the save.
//
//Function Validate_Save returns integer
//End_Function // Validate_Save

//  Function Validate_delete - Called before delete. Return non-zero to
//                             stop the delete.
//
//Function Validate_Delete returns integer
//End_Function // Validate_Delete

//  Procedure Update       - Called during a save (new and edit)
//
//Procedure Update
//End_Procedure // Update

//  Procedure Backout      - Called during an edit save and a delete
//
//Procedure Backout
//End_Procedure // Backout

//  Procedure Deleting     - Called during a delete
//
//Procedure Deleting
//End_Procedure // Deleting

//  Procedure Creating    - Called when creating a new record
//
//Procedure Creating
//End_Procedure // Creating

//  Procedure Destroying  - Called when creating a new record if
//                          validate_save fails. Undo the effects of Creating.
//
//Procedure Destroying
//End_Procedure // Destroying

// Procedure Relate_Main_file  - less likely to be used. Remember
//                               to send Request_Relate or Request_clear_File
//
//Procedure Relate_Main_File
//End_Procedure // Relate_Main_File

// Procedure New_Current_Record  - less likely to be used. Sent whenever
//                                 Current_Record property is changed.
//
//Procedure New_Current_Record Integer OldRecNum Integer NewRecNum
//End_Procedure // New_Current_Record

// Procedure Attach_Main_File -  less likely to be used.
//
//Procedure Attach_main_File
//   Forward Send Attach_main_File
//End_Procedure // Attach_main_File

// Other Messages:
//     Save_Main_file, Delete_Main_File, Clear_main_file are much less
//     likely to be used. Remember to forward send them.

;
;
[DATA_SET_OBJECT]
OBJECT=DS
;        note:  Data_set_object does not need a class
;
;
[TABLE]
CLASS=Table
OBJECT=TBL
;

// Properties you might need to set. These reverse the default settings.
// Remove what you do not need.

// Set wrap_state               to TRUE     // keeps NEXT within table
// Set child_table_state        to TRUE     // DAF - Saves when exit object
// Set Auto_Fill_State          to TRUE     // bug work-around (set in data-set)

// Set Auto_Regenerate_State    to TRUE     // Faster, only if lists stay in order.
// Set Allow_Top_Add_State      to TRUE     // Allow additions to top of table.
// Set Allow_Bottom_Add_State   to FALSE    // No additions to bottom.
// Set Allow_Insert_Add_State   to FALSE    // No insertions in table.
// Set Init_From_top_State      to FALSE    // Fill from end of database -
// Set Initial_Row              to FILL_FROM_BOTTOM // Fill from bottom of table.


// Define Default Confirmation Messages
Set Verify_Save_MSG             to GET_Save_Confirmation
Set Verify_Delete_MSG           to GET_Line_Delete_Confirmation
;
;
[SELECTION_LIST]
CLASS=Selection_list
OBJECT=SL
;
;
Set Auto_Locate_State     to TRUE           // locate automatically
Set Auto_Index_State      to TRUE           // change indexes when switching columns

// Properties you may need. Uncomment to reverse the default setting(s).

// Set No_relate_State    to TRUE           // Only use if no DATA_SET and no
                                            // RELATES are required. Speed issue.
// Set Auto_Server_State  to TRUE           // Latch on to invoking data-set.
// Set Export_Item_State  to TRUE           // If non-related lists.
// Set Export_Column      to ??             // Column to export from, -1=use initial.
// Set Find_search_State  to FALSE          // To get incremental (slow) search.
// Set Load_Buffer_msg    to MSG_??         // Sent to invoking object upon start-up.
// Set Display_Buffer_msg to MSG_??         // Sent to invoking object close.
// Set Radio_State        to TRUE           // These two are good for multi
// Set Select_Mode        to MULTI_SELECT   // select lists.
// Set Initial_Row        to FILL_FROM_TOP  // Row to start in.
// Set Initial_Column      to ??             // Column to start in.
;
[ENTRY_CLIENT]
CLASS=Entry_Client
OBJECT=EC
;
;
[TEXT_WINDOW]
CLASS=Text_Window
OBJECT=TW
;
;
[ZOOM]
CLASS=Entry_Form
OBJECT=ZM
Set Scope_State to TRUE
Set Verify_Exit_Msg to Get_No_Confirmation
;
;
;---------------end of file----------