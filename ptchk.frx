/LETTER_header









/BODY                                    ptchk.frm
_____.__  _____.__   ______.__  ______.__  ______.__
/SUBTOTAL1





                                                                     __/__/____


     _______________________________________________________________   _____.__




         ______________________________
         _________________________
         _______________________________





/SELECT1

                          WORTHLESS CHECK SYSTEM
                              CHECK PRINTING
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ


                     Do you need a forms lineup (Y/N)? _

      

/SELECT2  
                          WORTHLESS CHECK SYSTEM
                              CHECK PRINTING
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ

   Bank..{ __ ______________________________   Next Check Number..{ _______.
ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤ



        Please enter the beginning check no for this batch: ______.

      

/VOID
ออออ< Void Checks >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ



       There are ___. missing check numbers between the last check

       number of _______. and your starting batch Number of ______.

       Will these  ___. checks be voided (Y/N)..........{ _



/VOID2
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ









         Please Standby Now Voiding Check #..{ ______.










/SELECT3
                          WORTHLESS CHECK SYSTEM
                         MERCHANT LETTER PRINTING
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ




                   Enter H to use handfed paper     _


/ONES
___ ___ _____ ____ ____ ___ _____ _____ ____ 
/TENS
___ ______ ______ _____ _____ _____ _______ ______ ______
/TEENS
______ ______ ________ ________ _______ _______ _________ ________ ________
/LETTER_HEAD
                                      __/__/____


        ______________________________
        _________________________
        _@______________, __  _________



                                                              Merchant
    RE:                             Check   Date      Amount     Fee
        
/LETTER_BODY
     ______________________________ _____ __/__/____  _____.__  __.__
/LETTER_END

 
     Dear _@________________________:

          Enclosed please find check number ______. for restitution
     paid to our  office in  payment  of an  overdraft  check  your
     business brought to our office for  possible  prosecution.  We
     appreciate the opportunity  you have given us to assist you in
     this matter. If you have any questions concerning this, please
     contact the Prosecuting Attorney's Office.                  



                                     Sincerely yours,


                                     ______________________________
                                     ______________________________

/DATE_SCRN
__/__/____
/NOSETUP
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ


                             * * W A R N I N G * *

         There is no record in the PROSECUTOR SETUP TABLE for ____ !!


    You MUST add a record to the Setup Table (option 7 on the Master Menu)
    and/or check that the system date is correct.





                          Press any key to continue _

/HELP
ษอออ< Help Screen >อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                             บ
บ   Problems printing checks and letters:                                     บ
บ      If the printer jams of fails for whatever reason while printing your   บ
บ        checks or letters, Please be aware of the following procedure.       บ
บ                                                                             บ
บ      Please  DO NOT  turn the electrical power off to the printer or        บ
บ      to the computer.                                                       บ
บ      DO NOT warm boot the computer                                          บ
บ      DO NOT answer ABORT when the error message pops up on your screen      บ
บ                                                                             บ
บ      DO the following:                                                      บ
บ             (A) Set the printer offline ( this is not the power switch )    บ
บ                 if you do not know how to take your printer of line         บ
บ                 without powering down,refer to your printer manual.         บ
บ             (B) Clear your printer and reset paper or checks                บ
บ                   You may place blank paper in printer to finish            บ
บ             (C) Answer Retry to the DOS error message                       บ
บ             (D) Allow the print out to continue and run the appropriate     บ
บ                 reprint function.                                           บ
บ                                                                             บ
บ                                                                             บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/CHKS
ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                  บ
บ   Did the batch of checks print OK ?  (Y/N).............: _      บ
บ                                                                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/CHKS2
ษอออ< Reprint Batch of Checks >อออออออออออออออออออออออออออออออออออออป
บ                                                                   บ
บ                                                                   บ
บ   The system shows a disburse date of .........{ __/__/____       บ
บ   and the last check printed as ....{ _______.                    บ
ฬอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออน
บ                  ***      N O T I C E     ***                     บ
บ                                                                   บ
บ   Checks have to be reprinted in batches, if one or more checks   บ
บ   within a batch did not print correctly then all checks must     บ
บ   be reprinted.                                                   บ
บ                                                                   บ
บ   Your next check number for the reprint should be .: ______.     บ
บ                                                                   บ
บ              Press the space bar to continue                      บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/LETS
ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                  บ
บ   Did the batch of letters print OK ?  (Y/N)............: _      บ
บ                                                                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/LETS2
ษอออ< Reprint Batch of Letters >ออออออออออออออออออออออออออออออออออออป
บ                                                                   บ
บ   The system shows a disburse date of .........{ __/__/____       บ
บ   and the last check printed as ....{ _______.                    บ
ฬอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออน
บ                  ***      N O T I C E     ***                     บ
บ                                                                   บ
บ   Letters have to be reprinted in batches, if one or more letters บ
บ   within a batch did not print correctly then all letters must    บ
บ   be reprinted.                                                   บ
บ   Be sure your printer is ready to print the letters before       บ
บ   continuing.                                                     บ
บ                                                                   บ
บ                Press the space bar to continue                    บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/WARN1
ษออออ< warn1 >อออออออออออออออออออออออออออออออออออออป
บ                                                  บ
บ    You are not authorized to disburse funds.     บ
บ                                                  บ
บ           Press any key to continue              บ
บ                                                  บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออผ
/warn2
ษออออ< warn2 >อออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                  บ
บ   There are no checks to print at this time.                     บ
บ                Press <SPACE BAR> to continue                     บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/WARN3
ษอออ< warn3>ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ    Section Body:                                                      บ
บ     Disburse.: ______.     Setup.: ______.   Defendant.: ______.      บ
บ     Offense..: ______.                                                บ
บ     Pass.....: ______                                                 บ
บ                                                                       บ
บ           Options..: R)esume Q)uit..........[ _ ]                     บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/WARN8
ษอออ< warn8 >ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                        บ
บ     You Cannot Access This Program Until Year End Has Been Processed   บ
บ                                                                        บ
บ                                                                        บ
บ                                                                        บ
บ                     Press <SPACE> To Continue                          บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/info

    changes 2-28-91    by gary grooms
                   added update to check register for tracking pfee in
                   checks file added in recon_pros: subroutine
                   move accum_2 to checks.mfee

    change made 03/01/91 by gary grooms
                  added a multiuser despool after printing checks and letters

    change made 03-06-91 by Gary Grooms
                  added routine that would first check the disburse file to see
                  if in fact there are any records with a blank disburse date

    change made 03/08/91 by Gary Grooms
                  added commands to update the checks.seq_num field with
                  the month that the checks are written so that it may be added
                  to index.4 in the checks (file# 39) file.  This index
                  used to produce new reports that subtotal on month

    change made on 06/06/91 by Gary Grooms
                Incorrect amt was deducted from bank.current_bal for each check
                put bank code update routine in the recon update routine using
                the same amount of recon.amount to update bank code cur bal

    change made on 08/27/91 by gary grooms
                Output of subtotal1 depends upon prosecutor_total being GT
                (0), this prevents a prosecutor check from printing if no
                revenue is available.
                Example: Merchant check is voided but pros check is not.
                operator elects to let computer issue checks.
                checks are issued but only the previously voided mer check
                is ready to be issued and no pros check is to be cut
                Added an "If prosecutot_total GT (0) before output of check

    change made on 10/15/91 by gary grooms
                Added command "KEYPROC OFF" at subroutines "Ques_chks" and
                "Ques_lets". Keyproc turned back on after operators response
                to the question. Also added a gosub to the keyproc key.escape
                routine in order to clear any accums.

    change made on 11/9/91 by gary grooms
                changed accum_2 to prosecutor_total in pros_jr update routine
                added an ok_pros indicator prior to moving prosecutor_total
                to disburse.prostot in body

    change made on 11-5-95 by Gary Grooms
                added routine to prevent access to program unless year end has
                been processed

    change made on 2-25-99 by Herta Jesse
                addid #include datemac.inc, #include macs.frm, ayear, sysdate4.

    change made on 10-5-1999 by Jeff March
                added direct_output to LPT1 for checks and letters.

    change made on 11-08-1999 by Jeff March
                changed SAVE JOURNALS to SAVERECORD JOURNALS and
                SAVERECORD LEDGER to SAVE LEDGER.

    change made on 12-15-1999 by Jeff March
                Added LineCount on printing of merchant letters.
                Set up to print 15 checks for 2 1/2 inch letterhead.


/EXIT            RESIDENT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~










              Please Standby, Closing Files and returning to the Menu
/notes
  changes made 8/9/91 by gary grooms
        added a clear accums to reset all dollar amts if user answers
        "no" to the question "did the checks print ok"

/prt
===============================================================================
Recnum..: _____.   ID-NO..: _____.    Seq-Num..: _____.    IDNO..: _____.
SEQNO..: _____.    Merchant..: ______________________________
Dispdt..: __/__/____    Dispamt..: _____.__    Manual..: _    Chkno..: _____.
Prosamt.: _____.__   PCkno.: ______.   Month.: __.  Pros Total.: _____.__
Merchant ID.: ____.

===============================================================================
/doerr
E R R O R   **************************************
/*
Use y2k.pkg
Read_dfini "df23ini.cfg"
//----------------- Cannot Run Program From Command Line (DOS)
IF NEXT_MENU LE 0 ABORT
INTEGER USER_NUMB USER$_ACCESS   //must be first integers defined in program
STRING USER$ 30
MOVE '' TO USER$
MOVE 0 TO USER$_ACCESS
//------------------------------------------------------------
#include calcdate.inc
#include macs.frm
//-------------- Find Logged On User For Program Use
OPEN USERX
CLEAR USERX
MOVE USER_NUMB TO USERX.USER_NUMB
FIND EQ USERX BY INDEX.1
MOVE USERX.USER_NAME TO USER$
MOVE USERX.ACCS_LEVL TO USER$_ACCESS
//----------------------------------------------------

NUMBER PROSECUTOR_TOTAL ACCUM_1 ACCUM_2 ACCUM_3 ACCUM_4
STRING CSZ 31 DIG2 1 SIGNER 30 TITLE 30 SALUTE 25
DATE TODAY
STRING ANSW 1
STRING AMOUNT 10 CENTS 2 DOLLARS 6 DIGIT 1 LINE 80 PAUSE 1 MONTH 2 DISP_DATE 8
INTEGER AMT_LGTH DOLLAR_LGTH CHECK_NUM PROSECUTOR_CHECK GOOD_CHECK
INTEGER COUNT ADAY AMONTH AYEAR MISSING TUSER

INDICATOR OK_PROS OK_RECON PASS2 PASS3 REDO_CHKS REDO_LETS no_rec first_rec

PAGE SET WARN1 AT 9 15
PAGE SET WARN8 AT 12 4
PAGE SET WARN3 AT 12 4
PAGE SET CHKS AT 10 7
PAGE SET CHKS2 AT 5 7
PAGE SET LETS AT 10 7
PAGE SET LETS2 AT 3 7
page set warn2 at 10 7

SYSDATE4 TODAY

  INDICATE FIRST TRUE
  INDICATE PASS2 FALSE
  INDICATE PASS3 FALSE
  INDICATE REDO_CHKS FALSE
  INDICATE REDO_LETS FALSE

MULTI$ OPEN DEFENDNT OFFENSE SETUP MERCHANT
OPEN DISBURSE  INDEX.2
OPEN LEDGER
OPEN RECON
OPEN JOURNALS
OPEN REF
OPEN BANK
OPEN CHECKS
OPEN DISTRIB

//IF USERX.DISB LT (4) BEGIN
//   PAGE WARN1
//   INKEY ANSW
//   page exit
//   ABORT
//END

// now lets check to see if there are any disbursement records that are ready
// for checks to be issued


      clear disburse
      move "" to disburse.dispdt
      find ge disburse by index.2
      [found] if disburse.dispdt ne " " indicate found false
      [finderr] begin
         page warn2
         inkey answ
         page exit
         abort
      end



MOVE 'One'   TO ONES.1
MOVE 'Two'   TO ONES.2
MOVE 'Three' TO ONES.3
MOVE 'Four'  TO ONES.4
MOVE 'Five'  TO ONES.5
MOVE 'Six'   TO ONES.6
MOVE 'Seven' TO ONES.7
MOVE 'Eight' TO ONES.8
MOVE 'Nine'  TO ONES.9
MOVE 'Ten'     TO TENS.1
MOVE 'Twenty'  TO TENS.2
MOVE 'Thirty'  TO TENS.3
MOVE 'Forty'   TO TENS.4
MOVE 'Fifty'   TO TENS.5
MOVE 'Sixty'   TO TENS.6
MOVE 'Seventy' TO TENS.7
MOVE 'Eighty'  TO TENS.8
MOVE 'Ninety'  TO TENS.9
MOVE 'Eleven'    TO TEENS.1
MOVE 'Twelve'    TO TEENS.2
MOVE 'Thirteen'  TO TEENS.3
MOVE 'Fourteen'  TO TEENS.4
MOVE 'Fifteen'   TO TEENS.5
MOVE 'Sixteen'   TO TEENS.6
MOVE 'Seventeen' TO TEENS.7
MOVE 'Eighteen'  TO TEENS.8
MOVE 'Nineteen'  TO TEENS.9


BEGIN_CHKS:

[FIRST] BEGIN
  INDICATE PASS2 FALSE
  INDICATE PASS3 FALSE
  INDICATE REDO_CHKS FALSE
  INDICATE REDO_LETS FALSE
END

DATE_MACRO_INIT
DECOMPOSE_DATE TODAY TO ADAY AMONTH AYEAR


if ref.current_yr ne AYEAR begin
   page warn8
   inkey answ
   abort
end


CLEAR BANK


MOVE 'HC' TO BANK.CODE 
  FIND EQ BANK BY INDEX.1

STRING YEAR 4 SHORT_YR 4
SYSDATE4 DATE_SCRN.1
RIGHT DATE_SCRN.1 TO SHORT_YR 4
//MOVE '19' TO YEAR
APPEND YEAR SHORT_YR

CLEAR SETUP
MOVE AYEAR TO SETUP.YEAR
FIND EQ SETUP BY INDEX.1
[FINDERR] GOSUB NOSETUP
IF SETUP.PROSNAME LE " " GOSUB NOSETUP
IF SETUP.LAST_CHECK LE 0 GOSUB NOSETUP
MOVE SETUP.SIGNS_MERLTR TO SIGNER
MOVE SETUP.ML_SIGNERS_TITL TO TITLE

INDICATE OK_RECON AS REF.RECON EQ 'Y'

//direct_output "lpt1:"

LINE_IT:
AUTOPAGE SELECT1
ACCEPT SELECT1.1
IF SELECT1.1 IN "Yy" BEGIN
  AUTOPAGE SUBTOTAL1
  PRINT TODAY
  PRINT "***********LITERAL DOLLAR INFORMATION**************************" 
  PRINT 99999.99 
  PRINT "*************NAME*************" 
  PRINT "*********ADDR************" 
  PRINT "*****CITY******, ST   ***ZIP***" 
  direct_output "lpt1:"
  OUTPUT SUBTOTAL1
  [multiuser] despool
  GOTO LINE_IT
END

DO_AGAIN:
AUTOPAGE SELECT2
 MOVE USER_NUMB TO TUSER
DISPLAY BANK.CODE TO SELECT2.1
DISPLAY BANK.NAME TO SELECT2.2
[REDO_CHKS] DISPLAY CHKS2.3 TO SELECT2.3
[~ REDO_CHKS] DISPLAY BANK.NEXT_CHECK_NUM TO SELECT2.3
CALC (SETUP.LAST_CHECK + 1) TO SELECT2.4
 REPEAT
  ACCEPT SELECT2.4
   CLEARXY 24 0
   IF SELECT2.4 EQ 0 LOOP
  MOVE ((SELECT2.4 -1) - SETUP.LAST_CHECK) TO MISSING
  IF MISSING GE 1 GOSUB SHOW_VOID
PAGE SELECT2
DISPLAY BANK.NEXT_CHECK_NUM TO SELECT2.3
CLEARXY 24 0
SCREENMODE 1
GOTOXY 24 27
SHOW "ARE YOU SURE OF THE NEXT CHECK NUMBER (Y/N)? " 
INKEY PAUSE
CLEARXY 24 0
IF ~ PAUSE IN "Yy" GOTO DO_AGAIN
ELSE IF SELECT2.4 LE SETUP.LAST_CHECK GOSUB BAD_CHECK_NO
 
INDICATE FIRST TRUE
indicate first_rec true
ONCE_MORE:
[FIRST] BEGIN
          MOVE 0 TO PAGEEND
          direct_output "lpt1:"
          CLEARSCREEN
          GOTOXY 12 8
          SHOW 'Setup the printer to print disbursement checks.  Press any key.'
          INKEY PAUSE
          CLEARXY 12 0
        END      
[PASS2] BEGIN
            MOVE 61 TO PAGEEND
            direct_OUTPUT "LPT1:"
            CLEARSCREEN
            ACCEPT SELECT3.1
            IF SELECT3.1 IN 'Hh' MOVE -1 TO PAGEFEED
            GOTOXY 12 9
            SHOW 'Setup the printer to print merchant letters. Press any key.'
            INKEY PAUSE
            CLEARXY 12 0

       //*********************************
  //            Indicate first false
  //            Indicate Pass2 False
  //            Indicate Pass3 True

       //***********************************


          END

MOVE (0.00) TO ACCUM_1
MOVE (0.00) TO ACCUM_2
MOVE (0.00) TO ACCUM_3
MOVE (0.00) TO ACCUM_4
MOVE (0) TO COUNT

CLEAR DISBURSE OFFENSE
MOVE " " TO DISBURSE.DISPDT
MOVE SELECT2.4 TO CHECK_NUM

REPORT DISBURSE BY INDEX.2 BREAK DISBURSE.MERCHANT_IDNO
INDICATE SELECT AS DISBURSE.CHKNO EQ ''
[first_rec] indicate no_rec as [~ select]
[~ SELECT] RETURN END.OF.REPORT
[SELECT] INDICATE SELECT AS DISBURSE.MANUAL EQ 'C'
         INDICATE OK_PROS AS DISBURSE.PCKNO EQ (0)
[select] indicate first_rec false




SECTION SUBHEADER1
[~ PASS2]   PRINT MERCHANT.NAME TO SUBTOTAL1.4
[FIRST] BEGIN
            PRINT MERCHANT.ADDR TO SUBTOTAL1.5 
            TRIM MERCHANT.CITY  TO CSZ
            APPEND CSZ ", " MERCHANT.ST "   " MERCHANT.ZIP
            PRINT CSZ           TO SUBTOTAL1.6
          END
[PASS2] BEGIN
            Move 0 to Linecount
            
            IF LINECOUNT EQ 0 BEGIN
                OUTPUT letter_HEADER
            END
            
            PRINT TODAY         TO LETTER_HEAD.1
            PRINT MERCHANT.NAME TO LETTER_HEAD.2
            PRINT MERCHANT.ADDR TO LETTER_HEAD.3
            PRINT MERCHANT.CITY TO LETTER_HEAD.4
            PRINT MERCHANT.ST   TO LETTER_HEAD.5
            PRINT MERCHANT.ZIP  TO LETTER_HEAD.6
            TRIM MERCHANT.SALUTATION TO SALUTE
            OUTPUT LETTER_HEAD
          END

SECTION BODY

    If ~ Status offense abort

[PASS2] BEGIN
           IF LINECOUNT EQ 0 BEGIN
                OUTPUT letter_HEADER
           END
          
          PRINT DEFENDNT.NAME TO LETTER_BODY.1
          PRINT OFFENSE.CKNO  TO LETTER_BODY.2
          PRINT OFFENSE.CKDT  TO LETTER_BODY.3
          PRINT OFFENSE.CKAMT TO LETTER_BODY.4
          PRINT OFFENSE.MFEE  TO LETTER_BODY.5
          OUTPUT LETTER_BODY
          GOTOXY 12 24
          SHOW 'Processing.  Please wait . . .'
        END
[PASS3] BEGIN
          reread disburse
          MOVE CHECK_NUM        TO DISBURSE.CHKNO
          [OK_PROS] MOVE PROSECUTOR_CHECK TO DISBURSE.PCKNO
          MOVE TODAY            TO DISBURSE.DISPDT
            print disburse.recnum        to prt.1
            print disburse.ID_NO         to prt.2
            print disburse.Seq_no        to prt.3
            print disburse.IDNO          to prt.4
            print disburse.Seqno         to prt.5
            print disburse.merchant      to prt.6
            print disburse.dispdt        to prt.7
            print disburse.dispamt       to prt.8
            print disburse.manual        to prt.9
            print disburse.chkno         to prt.10
            print disburse.prosamt       to prt.11
            print disburse.pckno         to prt.12
            print disburse.month         to prt.13
            print disburse.pros_total    to prt.14
            print disburse.merchant_idno to prt.15
          MOVE TODAY            TO DISP_DATE
          LEFT DISP_DATE        TO MONTH 2
          MOVE MONTH            TO DISBURSE.MONTH
          [ok_pros] MOVE PROSECUTOR_TOTAL TO DISBURSE.PROS_TOTAL
          SAVERECORD DISBURSE
          unlock
        END

[~ PASS2] BEGIN
            GOTOXY 12 24
            [~ PASS3] SHOW 'Printing check # ' CHECK_NUM '          '
            [PASS3]   SHOW 'Updating check # ' CHECK_NUM ' To journals '
            [ok_pros][first] PRINT DISBURSE.PROSAMT   to body.1
            PRINT DISBURSE.DISPAMT             to body.2
            PRINT OFFENSE.MFEE                 to body.3
            [PASS3] PRINT OFFENSE.PFEE         to body.4
            PRINT OFFENSE.CKAMT                to body.5
            MOVE (ACCUM_1 + OFFENSE.MFEE) TO ACCUM_1
            MOVE (ACCUM_4 + OFFENSE.PFEE) TO ACCUM_4
            [PASS3] MOVE (ACCUM_2 + OFFENSE.PFEE) TO ACCUM_2
            MOVE (ACCUM_3 + OFFENSE.CKAMT) TO ACCUM_3
          END
         // [pass3] clear disburse offense

           MOVE " " TO DISBURSE.DISPDT
SECTION SUBTOTAL1
[~ PASS2] BEGIN
            PRINT TODAY     TO SUBTOTAL1.1
            SUBTOTAL BODY.2 TO SUBTOTAL1.3
            [~ PASS3] GOSUB SAY_DOLL
            PRINT LINE      TO SUBTOTAL1.2
            [PASS3]  GOSUB MER_JR
            [PASS3]  GOSUB RECON_MER
            MOVE (0.00) TO ACCUM_1
            MOVE (0.00) TO ACCUM_4
            MOVE (0.00) TO ACCUM_3
 //           [~ PASS3]  direct_output "lpt1:"
            [~ PASS3]  output SUBTOTAL1
          END
[PASS2] BEGIN
           IF LINECOUNT EQ 0 BEGIN
                OUTPUT letter_HEADER
           END
            
            IF SALUTE GT '' BEGIN
              PRINT SALUTE TO LETTER_END.1
            END
            ELSE PRINT 'Sir'            TO LETTER_END.1
            PRINT CHECK_NUM             TO LETTER_END.2
            PRINT SIGNER                TO LETTER_END.3
            PRINT TITLE                 TO LETTER_END.4
            OUTPUT LETTER_END
            FORMFEED
        END

          INCREMENT CHECK_NUM
SECTION TOTAL
        MOVE CHECK_NUM   TO PROSECUTOR_CHECK
        [first] SUBTOTAL BODY.1  TO SUBTOTAL1.3
        [first] MOVE SUBTOTAL1.3 TO PROSECUTOR_TOTAL

[~ PASS2]   BEGIN
            PRINT TODAY              TO SUBTOTAL1.1
            [~ PASS3] GOSUB SAY_DOLL
            PRINT LINE               TO SUBTOTAL1.2
            PRINT SETUP.SIGNS_MERLTR TO SUBTOTAL1.4
            PRINT SETUP.ADDR         TO SUBTOTAL1.5
            [~ PASS3] TRIM SETUP.CITY TO CSZ
            [~ PASS3] APPEND CSZ ', AR'
            [~ PASS3] PRINT CSZ                TO SUBTOTAL1.6
            [pass3] if prosecutor_total gt (0) begin
              GOSUB PROS_JR
              GOSUB RECON_PROS
            end
            MOVE (0.00) TO ACCUM_2
            [~ PASS3] if prosecutor_total gt (0) begin 
  //          direct_output "lpt1:"
            OUTPUT SUBTOTAL1
            END
         END
            MOVE (0.00) TO ACCUM_2

Return
REPORTEND

[no_rec][first_rec] begin
   page warn2
   inkey answ
   page exit
   abort
end

[FIRST] BEGIN
        [multiuser] despool
          GOSUB QUES_CHKS
          INDICATE FIRST FALSE
          INDICATE PASS3 FALSE
          INDICATE PASS2 TRUE
          CLEAR DISBURSE OFFENSE
          GOTO ONCE_MORE
        END

[PASS2] BEGIN
        [multiuser] despool
          GOSUB QUES_LETS
        [~ REDO_LETS] BEGIN
          REREAD SETUP
          MOVE CHECK_NUM TO SETUP.LAST_CHECK
          saverecord setup
          unlock
          reread bank
          MOVE (CHECK_NUM + 1) TO BANK.NEXT_CHECK_NUM
          SAVERECORD BANK
          UNLOCK
        END
          INDICATE REDO_LETS FALSE
          INDICATE FIRST FALSE
          INDICATE PASS2 FALSE
          INDICATE PASS3 TRUE
          GOTO ONCE_MORE
        END


DO_QUIT:
      CLEAR DISBURSE OFFENSE
      ABORT


SAY_DOLL:

MOVE ''        TO AMOUNT
APPEND AMOUNT SUBTOTAL1.3
TRIM AMOUNT    TO AMOUNT
LENGTH AMOUNT  TO AMT_LGTH
RIGHT AMOUNT   TO CENTS 2
LEFT AMOUNT    TO DOLLARS (AMT_LGTH - 3)
LENGTH DOLLARS TO DOLLAR_LGTH
MOVE ''        TO LINE

IF SUBTOTAL1.3 GE 1 BEGIN
 IF DOLLAR_LGTH EQ 5 BEGIN
   LEFT DOLLARS TO DIGIT 1
   REPLACE DIGIT IN DOLLARS WITH ''
   TRIM DOLLARS TO DOLLARS
   IF DIGIT GT 1 BEGIN
      MOVE DIGIT TO WINDOWINDEX
      MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
      APPEND LINE TENS.1& ' '
   END
   ELSE BEGIN
          LEFT DOLLARS TO DIGIT 1
          REPLACE DIGIT IN DOLLARS WITH ''
          TRIM DOLLARS TO DOLLARS
          MOVE DIGIT TO WINDOWINDEX
          MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
          IF WINDOWINDEX GE 0 APPEND LINE TEENS.1& ' Thousand '
        END
   TRIM DOLLARS TO DOLLARS
   LENGTH DOLLARS TO DOLLAR_LGTH
 END

 IF DOLLAR_LGTH EQ 4 BEGIN
    LEFT DOLLARS TO DIGIT 1
    REPLACE DIGIT IN DOLLARS WITH ''
    TRIM DOLLARS TO DOLLARS
    MOVE DIGIT TO WINDOWINDEX
    MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
    APPEND LINE ONES.1& ' Thousand '
    LENGTH DOLLARS TO DOLLAR_LGTH
 END

 IF DOLLAR_LGTH EQ 3 BEGIN
    LEFT DOLLARS TO DIGIT 1
    REPLACE DIGIT IN DOLLARS WITH ''
    TRIM DOLLARS TO DOLLARS
    MOVE DIGIT TO WINDOWINDEX
    MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
    IF WINDOWINDEX GE 0 APPEND LINE ONES.1& ' Hundred '
    LENGTH DOLLARS TO DOLLAR_LGTH
 END

 IF DOLLAR_LGTH EQ 2 BEGIN
   LEFT DOLLARS TO DIGIT 1
   REPLACE DIGIT IN DOLLARS WITH ''
   TRIM DOLLARS TO DOLLARS
   IF DIGIT GT 1 BEGIN
      MOVE DIGIT TO WINDOWINDEX
      MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
      APPEND LINE TENS.1& ' '
   END
   ELSE BEGIN
          MOVE DIGIT TO DIG2
          LEFT DOLLARS TO DIGIT 1
          REPLACE DIGIT IN DOLLARS WITH ''
          TRIM DOLLARS TO DOLLARS
          MOVE DIGIT TO WINDOWINDEX
          MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
          IF DIG2 GT 0 BEGIN
            IF WINDOWINDEX GE 0 APPEND LINE TEENS.1& ' & ' CENTS '/100 Dollars'
            ELSE APPEND LINE TENS.1 ' & ' CENTS '/100 Dollars'
          END
          IF DIG2 EQ 0 APPEND LINE ONES.1& ' & ' CENTS '/100 Dollars'
        END
   TRIM DOLLARS TO DOLLARS
   LENGTH DOLLARS TO DOLLAR_LGTH
 END

 IF DOLLAR_LGTH EQ 1 BEGIN
    LEFT DOLLARS TO DIGIT 1
    MOVE DIGIT TO WINDOWINDEX
    MOVE (WINDOWINDEX - 1) TO WINDOWINDEX
    IF WINDOWINDEX GE 0 APPEND LINE ONES.1& ' & ' CENTS '/100 Dollars'
    ELSE APPEND LINE ' & ' CENTS '/100 Dollars'
    LENGTH DOLLARS TO DOLLAR_LGTH
 END
END
ELSE APPEND LINE CENTS '/100 Dollars'
RETURN

QUES_CHKS:
    keyproc off
    REPEAT
      CLEARFORM CHKS.1
      ACCEPT CHKS.1
        IF ~ CHKS.1 IN 'YyNn' LOOP
        keyproc on
     IF CHKS.1 IN 'Yy' RETURN
     gosub clear_accums
     DISPLAY TODAY TO CHKS2.1
     DISPLAY CHECK_NUM TO CHKS2.2
     CALC ( CHECK_NUM + 1 ) TO CHKS2.3
     PAGE CHKS2
     INKEY ANSW
     INDICATE REDO_CHKS TRUE
RETURN BEGIN_CHKS

QUES_LETS:
     keyproc off
     
     REPEAT
      CLEARFORM LETS.1
      ACCEPT LETS.1
        IF ~ LETS.1 IN 'YyNn' LOOP
        keyproc on
      IF LETS.1 IN 'Yy' RETURN
      DISPLAY TODAY TO LETS2.1
      DISPLAY CHECK_NUM TO LETS2.2
      PAGE LETS2
      INKEY ANSW
      INDICATE REDO_CHKS FALSE
      INDICATE REDO_LETS TRUE
 RETURN ONCE_MORE


BAD_CHECK_NO:
      CALC (SETUP.LAST_CHECK + 1) TO GOOD_CHECK
      GOTOXY 24 11
      SHOW 'You must use ' GOOD_CHECK ' as the beginning check number.'
      RETURN DO_AGAIN

NOSETUP:
      MOVE YEAR TO NOSETUP.1
      ACCEPT NOSETUP.2
      ABORT
RETURN


MER_JR:
//DEBIT ENTRY
  MOVE (0) TO COUNT
   REPEAT
     MOVE 'DC' TO JOURNALS.JR
     MOVE AYEAR TO JOURNALS.YR
     MOVE AMONTH TO JOURNALS.MN
     MOVE ADAY TO JOURNALS.DY
       IF COUNT EQ (0) MOVE REF.DREST TO JOURNALS.GL
       IF COUNT EQ (1) MOVE REF.DMFEES TO JOURNALS.GL
       IF COUNT EQ (2) MOVE REF.APMER TO JOURNALS.GL
     MOVE REF.DISTRICT TO JOURNALS.BR
     MOVE '20' TO JOURNALS.DP
     MOVE SUBTOTAL1.4 TO JOURNALS.DESC
       IF COUNT EQ (0) MOVE (SUBTOTAL1.3 - ACCUM_1) TO JOURNALS.AMOUNT
       IF COUNT EQ (1) MOVE ACCUM_1 TO JOURNALS.AMOUNT
       IF COUNT EQ (2) MOVE SUBTOTAL1.3 TO JOURNALS.AMOUNT
     MOVE CHECK_NUM TO JOURNALS.EMPLY
     MOVE '' TO JOURNALS.JOB
     MOVE check_num TO JOURNALS.CHK
     GOSUB FIND_GL
     reread ledger
     GOSUB UPDATE_GL
     save ledger
     unlock
     SAVERECORD JOURNALS
     CLEAR LEDGER JOURNALS
     INCREMENT COUNT
 UNTIL COUNT GE (3)

//CREDIT ENTRY
    MOVE (0) TO COUNT
   REPEAT
    MOVE 'DC' TO JOURNALS.JR
    MOVE AYEAR TO JOURNALS.YR
    MOVE AMONTH TO JOURNALS.MN
    MOVE ADAY TO JOURNALS.DY
    IF COUNT EQ (0) MOVE REF.CASH TO JOURNALS.GL
    IF COUNT EQ (1) MOVE REF.APPROCESS TO JOURNALS.GL
    MOVE (SUBTOTAL1.3 * (-1)) TO JOURNALS.AMOUNT
    IF COUNT EQ (0) IF ~ STATUS BANK BEGIN
       CLEAR BANK 
       MOVE 'HC' TO BANK.CODE
       FIND EQ BANK BY INDEX.1
     END
    MOVE REF.DISTRICT TO JOURNALS.BR
    MOVE '20' TO JOURNALS.DP
    MOVE SUBTOTAL1.4 TO JOURNALS.DESC
    MOVE CHECK_NUM TO JOURNALS.EMPLY
    MOVE '' TO JOURNALS.JOB
    MOVE check_num TO JOURNALS.CHK
    GOSUB FIND_GL
    reread ledger
    GOSUB UPDATE_GL
    save ledger
    unlock
    SAVERECORD JOURNALS
    CLEAR JOURNALS LEDGER
    INCREMENT COUNT
  UNTIL COUNT GE (2)

UNLOCK

RETURN




PROS_JR:


//DEBIT ENTRY
     MOVE (0) TO COUNT
   REPEAT
     MOVE 'DC' TO JOURNALS.JR
     MOVE AYEAR TO JOURNALS.YR
     MOVE AMONTH TO JOURNALS.MN
     MOVE ADAY TO JOURNALS.DY
     IF COUNT EQ (0) MOVE REF.DPFEES TO JOURNALS.GL
     IF COUNT EQ (1) MOVE REF.APPFEES TO JOURNALS.GL
     MOVE REF.DISTRICT TO JOURNALS.BR
     MOVE '20' TO JOURNALS.DP
     MOVE 'Prosecutors Account' TO JOURNALS.DESC
     MOVE prosecutor_total TO JOURNALS.AMOUNT
     MOVE CHECK_NUM TO JOURNALS.EMPLY
     MOVE '' TO JOURNALS.JOB
     MOVE TUSER TO JOURNALS.OPERATOR
     MOVE check_num TO JOURNALS.CHK
     GOSUB FIND_GL
     reread ledger
     GOSUB UPDATE_GL
     save ledger
     unlock
     SAVERECORD JOURNALS
     CLEAR LEDGER JOURNALS
     INCREMENT COUNT
  UNTIL COUNT GE (2)

//CREDIT ENTRY
    MOVE (0) TO COUNT
  REPEAT
    MOVE 'DC' TO JOURNALS.JR
    MOVE AYEAR TO JOURNALS.YR
    MOVE AMONTH TO JOURNALS.MN
    MOVE ADAY TO JOURNALS.DY
    IF COUNT EQ (0) MOVE REF.CASH TO JOURNALS.GL
    IF COUNT EQ (1) MOVE REF.APPROCESS TO JOURNALS.GL
    MOVE (prosecutor_total * (-1)) TO JOURNALS.AMOUNT
      IF COUNT EQ (0) IF ~ STATUS BANK BEGIN
        MOVE 'HC' TO BANK.CODE
        FIND EQ BANK BY INDEX.1
      END
    MOVE REF.DISTRICT TO JOURNALS.BR
    MOVE '20' TO JOURNALS.DP
    MOVE 'Prosecutors Account' TO JOURNALS.DESC
    MOVE CHECK_NUM TO JOURNALS.EMPLY
    MOVE '' TO JOURNALS.JOB
    MOVE TUSER TO JOURNALS.OPERATOR
    MOVE check_num TO JOURNALS.CHK
    GOSUB FIND_GL
    reread ledger
    GOSUB UPDATE_GL
    save ledger
    unlock
    SAVERECORD JOURNALS
    CLEAR JOURNALS LEDGER
    INCREMENT COUNT
  UNTIL COUNT GE (2)


RETURN



FIND_GL:
  MOVE JOURNALS.GL TO LEDGER.NUMBER
  MOVE JOURNALS.BR TO LEDGER.DISTRICT
  MOVE JOURNALS.DP TO LEDGER.DIVISION
   FIND EQ LEDGER BY INDEX.1
      [Finderr] Begin
          clearxy 24 0
          gotoxy 24 0
          show " No GL Record"
          Inkey Pause
          Abort
      End


RETURN


UPDATE_GL:

  MOVE (JOURNALS.MN - 1) TO FIELDINDEX
  MOVE (LEDGER.TYJAN& + JOURNALS.AMOUNT) TO LEDGER.TYJAN&
  MOVE (LEDGER.TYTOTAL + JOURNALS.AMOUNT) TO LEDGER.TYTOTAL
RETURN


RECON_MER:
  CLEAR RECON CHECKS DISTRIB
[OK_RECON] BEGIN
  MOVE 'HC' TO RECON.BANK_CODE
  MOVE CHECK_NUM TO RECON.CHECK_NUMBER
  MOVE TODAY TO RECON.TRANS_DATE
  MOVE SUBTOTAL1.4 TO RECON.PAYOR
  MOVE SUBTOTAL1.3 TO RECON.AMOUNT
  MOVE 'N' TO RECON.STATUS
  MOVE TODAY TO RECON.POSTING_DATE
  MOVE 'Computer Check' TO RECON.REFERENCE
  MOVE 'C' TO RECON.TYPE
     reread bank
     move (bank.current_bal - recon.amount) to bank.current_bal
     saverecord bank
     unlock

END

  //CHECK REGISTER
    MOVE TODAY TO CHECKS.JR_DATE
    MOVE BANK.CODE TO CHECKS.BANK_CODE
    MOVE CHECK_NUM TO CHECKS.CHECK_NUM
    MOVE SUBTOTAL1.3 TO CHECKS.CHK_AMT
    MOVE 'Computer Check' TO CHECKS.REFERENCE
    MOVE SUBTOTAL1.4 TO CHECKS.PAYEE
    MOVE TODAY TO CHECKS.CK_DATE
    MOVE TUSER TO CHECKS.OPER
    MOVE amonth TO CHECKS.SEQ_NUM
    MOVE 'X' TO CHECKS.UPDATE
    MOVE ACCUM_1 TO CHECKS.MFEE
    MOVE ACCUM_4 TO CHECKS.PFEE
    MOVE ACCUM_3 TO CHECKS.HC_AMT
  SAVE RECON CHECKS

  //CHECK DISTRIBUTION RECORD
     MOVE 0 TO COUNT
      REPEAT
       MOVE TODAY TO DISTRIB.JR_DATE
       MOVE BANK.CODE TO DISTRIB.BANK_CODE
       MOVE CHECK_NUM TO DISTRIB.CHECK_NUMB
       MOVE COUNT TO DISTRIB.SEQUENCE
         IF COUNT EQ (0) MOVE REF.DREST TO DISTRIB.ACCOUNT
         IF COUNT EQ (1) MOVE REF.DMFEES TO DISTRIB.ACCOUNT
       MOVE REF.DISTRICT TO DISTRIB.DISTRICT
       MOVE '20' TO DISTRIB.DIVISION
         IF COUNT EQ (0) MOVE (SUBTOTAL1.3  - ACCUM_1 ) TO DISTRIB.AMOUNT
         IF COUNT EQ (1) MOVE ACCUM_1 TO DISTRIB.AMOUNT
         IF COUNT EQ (0) MOVE REF.DREST TO LEDGER.NUMBER
         IF COUNT EQ (1) MOVE REF.DMFEES TO LEDGER.NUMBER 
               MOVE REF.DISTRICT TO LEDGER.DISTRICT
               MOVE '20' TO LEDGER.DIVISION
                 FIND EQ LEDGER BY INDEX.1

      [Finderr] Begin
          clearxy 24 0
          gotoxy 24 0
          show " No GL Record Found in Chk Distrib Routine"
          Inkey Pause
          Abort
      End
               MOVE LEDGER.DESC TO DISTRIB.DESCRIPTION
               CLEAR LEDGER
        MOVE 'X' TO DISTRIB.UPDATE
        MOVE TUSER TO DISTRIB.OPER
        SAVE DISTRIB
        CLEAR DISTRIB
        INCREMENT COUNT
        UNTIL COUNT GE (2)

  CLEAR RECON CHECKS DISTRIB
RETURN



RECON_PROS:
  CLEAR RECON CHECKS DISTRIB
[OK_RECON] BEGIN
  MOVE 'HC' TO RECON.BANK_CODE
  MOVE CHECK_NUM TO RECON.CHECK_NUMBER
  MOVE TODAY TO RECON.TRANS_DATE
  MOVE 'Prosecutors Account' TO RECON.PAYOR
  MOVE prosecutor_total TO RECON.AMOUNT
  MOVE 'N' TO RECON.STATUS
  MOVE TODAY TO RECON.POSTING_DATE
  MOVE 'Computer Check' TO RECON.REFERENCE
  MOVE 'C' TO RECON.TYPE
     reread bank
     move (bank.current_bal - recon.amount) to bank.current_bal
     saverecord bank
     unlock
END


  //CHECK REGISTER
    MOVE TODAY TO CHECKS.JR_DATE
    MOVE BANK.CODE TO CHECKS.BANK_CODE
    MOVE CHECK_NUM TO CHECKS.CHECK_NUM
    MOVE prosecutor_total TO CHECKS.CHK_AMT
    move (0.00) to checks.pfee
    move (0.00) to checks.mfee
    move (0.00) to checks.hc_amt
    MOVE 'Computer Check' TO CHECKS.REFERENCE
    MOVE 'Prosecutors Account' TO CHECKS.PAYEE
    MOVE TODAY TO CHECKS.CK_DATE
    MOVE TUSER TO CHECKS.OPER
    MOVE amonth TO CHECKS.SEQ_NUM
    MOVE 'X' TO CHECKS.UPDATE
  SAVE RECON CHECKS

  //CHECK DISTRIBUTION RECORD
       MOVE TODAY TO DISTRIB.JR_DATE
       MOVE BANK.CODE TO DISTRIB.BANK_CODE
       MOVE CHECK_NUM TO DISTRIB.CHECK_NUMB
       MOVE (0) TO DISTRIB.SEQUENCE
       MOVE REF.DPFEES TO DISTRIB.ACCOUNT
       MOVE REF.DISTRICT TO DISTRIB.DISTRICT
       MOVE '20' TO DISTRIB.DIVISION
       MOVE prosecutor_total TO DISTRIB.AMOUNT
               MOVE REF.DPFEES TO LEDGER.NUMBER
               MOVE REF.DISTRICT TO LEDGER.DISTRICT
               MOVE '20' TO LEDGER.DIVISION
                 FIND EQ LEDGER BY INDEX.1
               MOVE LEDGER.DESC TO DISTRIB.DESCRIPTION
               CLEAR LEDGER
        MOVE 'X' TO DISTRIB.UPDATE
        MOVE TUSER TO DISTRIB.OPER
        SAVE DISTRIB

  CLEAR RECON CHECKS DISTRIB
RETURN


SHOW_VOID:
   PAGE VOID
   SCREENMODE 112 ON
   DISPLAY MISSING TO VOID.1
   DISPLAY SETUP.LAST_CHECK TO VOID.2
   DISPLAY SELECT2.4 TO VOID.3
   DISPLAY MISSING TO VOID.4
   SCREENMODE 112 OFF
   SCREENMODE 1 ON
    REPEAT
     ACCEPT VOID.5               {CAPSLOCK}
      IF ~ VOID.5 IN 'YyNn' LOOP
      IF VOID.5 IN 'Yy' GOSUB DO_VOIDS
      IF VOID.5 IN 'Nn' BEGIN
         CLEARFORM VOID
         CLEARFORM VOID2
         RETURN DO_AGAIN
      END
RETURN



DO_VOIDS:
   PAGE VOID2
   MOVE 0 TO COUNT
     FOR COUNT FROM (1) TO MISSING 
       reread bank setup
       MOVE (BANK.NEXT_CHECK_NUM + 1 ) TO BANK.NEXT_CHECK_NUM
       MOVE (SETUP.LAST_CHECK + 1) TO CHECKS.CHECK_NUM
       MOVE (SETUP.LAST_CHECK + 1) TO SETUP.LAST_CHECK
       DISPLAY SETUP.LAST_CHECK TO VOID2.1
       MOVE TODAY TO CHECKS.JR_DATE
       MOVE BANK.CODE TO CHECKS.BANK_CODE
       MOVE (0.00) TO CHECKS.CHK_AMT
       MOVE '*** VOID ***' TO CHECKS.REFERENCE
       MOVE '*** Voided Check ***' TO CHECKS.PAYEE
       MOVE TODAY TO CHECKS.CK_DATE
       MOVE TUSER TO CHECKS.OPER
       MOVE amonth TO CHECKS.SEQ_NUM
       MOVE 'X' TO CHECKS.UPDATE
       MOVE 'C' TO CHECKS.STATUS
       MOVE (0.00) TO CHECKS.MFEE
       MOVE (0.00) TO CHECKS.PFEE
       MOVE (0.00) TO CHECKS.HC_AMT

// DISTRIBUTION RECORD
       MOVE TODAY TO DISTRIB.JR_DATE
       MOVE BANK.CODE TO DISTRIB.BANK_CODE
       MOVE CHECKS.CHECK_NUM TO DISTRIB.CHECK_NUMB
       MOVE (0) TO DISTRIB.SEQUENCE
       MOVE 9999 TO DISTRIB.ACCOUNT
       MOVE REF.DISTRICT TO DISTRIB.DISTRICT
       MOVE BANK.GL_DIV TO DISTRIB.DIVISION
       MOVE (0.00) TO DISTRIB.AMOUNT
       MOVE 'X' TO DISTRIB.UPDATE
       MOVE '***VOID***' TO DISTRIB.DESCRIPTION
       MOVE TUSER TO DISTRIB.OPER
       [OK_RECON] GOSUB RECON_VOID
       SAVERECORD SETUP BANK CHECKS RECON DISTRIB
       unlock
       CLEAR CHECKS RECON DISTRIB
     LOOP
  UNLOCK
RETURN
         
   
RECON_VOID:
  CLEAR RECON
  MOVE 'HC' TO RECON.BANK_CODE
  MOVE CHECKS.CHECK_NUM TO RECON.CHECK_NUMBER
  MOVE TODAY TO RECON.TRANS_DATE
  MOVE '** Void **'  TO RECON.PAYOR
  MOVE (0.00) TO RECON.AMOUNT
  MOVE 'Y' TO RECON.STATUS
  MOVE TODAY TO RECON.POSTING_DATE
  MOVE 'Computer Check' TO RECON.REFERENCE
  MOVE 'C' TO RECON.TYPE
RETURN


clear_accums:
   move (0.00) to prosecutor_total
   move (0.00) to accum_1
   move (0.00) to accum_2
   move (0.00) to accum_3
   move (0.00) to accum_4
return

// ==========< KEY PROCEDURES >===============================================


KEYPROC KEY.ESCAPE
  CLEARXY 24 0
  GOTOXY 24 10 
  SHOW "DO YOU WISH TO ABORT THE CHECK PRINTING PROGRAM (Y/N)? " 
  INKEY PAUSE
  CLEARXY 24 0
  IF PAUSE IN "Yy"begin
      gosub clear_accums
      ABORT
 end
RETURN


