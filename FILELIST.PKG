//************************************************************************
//
// Confidential Trade Secret.
// Copyright 1987-1992 Data Access Corporation, Miami FL, USA
// All Rights reserved
// DataFlex is a registered trademark of Data Access Corporation.
//
//
//     $Source: k:\RCS\.\pkg\filelist.pkg,v $
//     $Revision: 1 $
//     $State: Exp $
//     $Author: james $
//     $Locker:  $
//
//     $Log: filelist.pkg,v $
//Revision 2.1  1993/08/25  17:48:02  james
//Adding new main branch
//
//Revision 1.2  1993/04/28  00:20:34  james
//Initializing 3.04 source code.
//
//Revision 1.1  1992/09/08  14:43:04  james
//Initial revision
//
//Revision 1.3  92/05/14  16:06:58  SWM
//Updated Copyright slug.
//
//Revision 1.2  92/03/09  19:01:46  james
//Added #CHKSUB directive to insure source
//only compiled with correct revision of 
//compiler.
//
//Revision 1.1  91/10/23  10:20:42  elsa
//Initial revision
//
//************************************************************************/

//************************************************************************
//     File Name: FileList.Pkg
// Creation Date: January 1, 1991
// Modified Date: May 23, 1991
//     Author(s): Steven A. Lowe
//
// This module contains File_List class definition
//************************************************************************/

#CHKSUB 1 1 // Verify the UI subsystem.

use ui
Use PickList


Class File_List is a Pick_List
  //
  //Operation: FILL_LIST
  //
  //Assumption(s): none
  //
  //Goal(s): Fill list with user-name of available DATAFLEX database files;
  //         The AUX_VALUE of each item in the list is set to the file number
  //
  //Algorithm: Augmented to scan file names using FILELIST command, setting
  //           VALUE to the user-name of the file, and setting AUX_VALUE to
  //           the filenumber for each item
  //
  //Usage: invoked prior to activation
  //
  procedure FILL_LIST
    local string userName DFfileName
    local integer file# dynUpdt
    get Dynamic_Update_State to dynUpdt
    set Dynamic_Update_State to false
    forward send Fill_List
    move 0 to FILENUMBER
    FILELIST NEXT TO userName DFfileName
    move FILENUMBER to file#
    while [found]
      send add_item msg_none userName
      set aux_value item (item_count(current_object) - 1) to file#
      FILELIST NEXT TO userName DFfileName
      move FILENUMBER to file#
    end
    set Dynamic_Update_State to dynUpdt
  end_procedure
end_class


