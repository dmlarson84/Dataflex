/DEP      RESIDENT                                 DEPOSIT
อออออ< Bank Deposits & Cash Receipts Entry >ออออออออออออออออออออออออออออออออออ

Bank Code..{ __ ______________________________    Ledger Account.{ ___. ___ __
Deposit Date..{ __/__/__   Amount.{ ______.__  Balance To Dist....{ ______.__
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
Payor ID.............{ ______  Sequence ID..{ ______.    Receipt #...{ ______.
Payor Name...........{ ______________________________
Type Funds Received..{ _     _____________________________ __________
Amount...............{ ______.__              Balance To Dist....{ ______.__
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
Distribution To Ledger Accounts:
    Account            Description                                 Amount
    ฤฤฤฤฤฤฤ            ฤฤฤฤฤฤฤฤฤฤฤ                                 ฤฤฤฤฤฤ
1.  ___. ___ __    _________________________                      ______.__
2.  ___. ___ __    _________________________                      ______.__
3.  ___. ___ __    _________________________                      ______.__
4.  ___. ___ __    _________________________                      ______.__
5.  ___. ___ __    _________________________                      ______.__
6.  ___. ___ __    _________________________                      ______.__
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
<F1> For Help       <F9> To Clear Distribution & Payor        <ESC> To Exit 
<F6> Deletes Records

/HELP        RESIDENT
ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ   First enter the bank code that will receive the cash receipts.           บ
บ   Next enter the date of the deposit ( only one deposit allowed per day)   บ
บ                                                                            บ
บ                                                                            บ
บ                                                                            บ
บ   The sequence ID on new payor's will be assigned by the computer for      บ
บ     unique record ID                                                       บ
บ                                                                            บ
บ    You may use the <F8> Flex Key at the following Fields to display        บ
บ      on a scrolling screen the information you might need for that         บ
บ      field.                                                                บ
บ           (a)  Bank Code Field to display a list of banks                  บ
บ           (b)  Deposit Date Field to display a list of deposits entered    บ
บ           (c)  Payor Sequence ID Field to list all payor's that            บ
บ                   makeup the deposit                                       บ
บ                                                                            บ
บ    After entering all deposits print an audit listing to make sure that    บ
บ      all deposits as entered are correct                                   บ
บ                                                                            บ
บ    When print routine is finished you will be asked if it is ok to update  บ
บ       the Cash / receipts - Deposits                                       บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

/WARN1
ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ  This deposit of <______.__> shows to have been deposited on <__/__/__>.   บ
บ                                                                            บ
บ  If the deposit is actually in your possesion (in transit) you may delete. บ
บ  If the deposit is in the bank you should not delete the deposit.          บ
บ                                                                            บ
บ         Is the deposit in the bank ? (Y/N)............{ _                  บ
บ                                                                            บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/BNK       RESIDENT
ฺฤฤฤฤฤ< Bank Codes >ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฟ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  __ ______________________________  ณ
ณ  up & down arrow keys to scroll     ณ
ณ       <RETURN> to accept            ณ
ภฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤู

/DATES     RESIDENT
ฺฤ< Deposit Dates >ฤฤฤฤฟ
ณ                      ณ
ณ  __/__/__ ______.__  ณ
ณฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤ__.__  ณ
ณ  __/__/__ ______.__  ณ
ณ  __/__/__ ______.__  ณ
ณ  __/__/__ ______.__  ณ
ณ  __/__/__ ______.__  ณ
ณ  __/__/__ ______.__  ณ
ณ  __/__/__ ______.__  ณ
ณ  <ENTER> TO REVIEW   ณ
ณ  PREVIOUS DEPOSITS   ณ
ณ  <ESC> TO ENTER A    ณ
ณ  NEW DEPOSIT         ณ
ภฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤู
/PAYO        RESIDENT
ฺฤฤฤฤฤฤ< Deposit Detail >ฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฟ
ณ   Seq#             Name          TP    Amt     ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ   _____ _________________________ _ ______.__  ณ
ณ  up & down arrows                              ณ
ณ  to scroll detail     <RETURN> to accept       ณ
ภฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤู
/*
//----------------- Cannot Run Program From Command Line (DOS)
//IF NEXT_MENU LE 0 ABORT
INTEGER USER_NUMB USER$_ACCESS   //must be first integers defined in program
STRING USER$ 30
MOVE '' TO USER$
MOVE 0 TO USER$_ACCESS
//------------------------------------------------------------
//----------------- Find logged on user for program use
OPEN USERX
CLEAR USERX
MOVE USER_NUMB TO USERX.RECNUM
FIND EQ USERX BY RECNUM
MOVE USERX.USER_NAME TO USER$
MOVE USERX.ACCS_LEVL TO USER$_ACCESS
//------------------------------------------------------------

//***********< Declare System Variables >**************************************

INDICATOR INDEPS INCASH INDIST NEWREC NEWDEP NEWCUST INBAL
INDICATOR DEDIT DEPBAL CASHID ACCDIST SCRBNK SCRDATES SCRPAYO
INDICATOR NOPAYOR EDITDEP FIRST_TIME NOGO

INTEGER COUNT TIMER ACCUM1 ACCUM2 COUNT2

NUMBER OLD_DEP 


STRING ANSW 1            

DATE TODAY START_MONTH
//***********< Initialize System Variables >***********************************

DATE_MACRO_INIT
SYSDATE TODAY
FIRST_DAY_OF_MONTH TODAY TO START_MONTH

MOVE 1 TO ACCUM1    // USED TO INCREMENT DEPOSIT DETAIL (PAYORS)
MOVE 0 TO ACCUM2
MOVE 0 TO OLD_DEP

//***********< Set Pages >*****************************************************

PAGE SET BNK AT 5 30
PAGE SET DATES AT 5 30
PAGE SET PAYO AT 8 20
PAGE SET WARN1 AT 15 0

//***********< Open Files >****************************************************

MULTI$ OPEN  REF SYSFILE       
OPEN DEPOSITS INDEX.1
OPEN CRECPT   INDEX.1
OPEN CRDIST   INDEX.1 
OPEN LEDGER   INDEX.1
OPEN BANK     INDEX.1
OPEN RECON2   
//***********< Main Program >**************************************************

//-------------- Find Logged On User For Program Use
CLEAR USERX
MOVE USER_NUMB TO USERX.RECNUM
FIND EQ USERX BY RECNUM
MOVE USERX.USER_NAME TO USER$
MOVE USERX.ACCS_LEVL TO USER$_ACCESS
//----------------------------------------------------

START:
INDICATE INCASH FALSE
INDICATE INDIST FALSE
INDICATE INDEPS TRUE
INDICATE EDITDEP FALSE
CLEARFORM DEP
CLEAR DEPOSITS
CLEAR CRECPT
CLEAR BANK
CLEARXY 24 0

ENTERGROUP
   PAGE DEP
DO_CODE:
REPEAT
  INDICATE SCRBNK TRUE
  Display "PO" to dep.1
ENTRY BANK.CODE              DEP.1          {AUTOFIND,CAPSLOCK,FINDREQ,RETAIN}
//  IF DEP.1 EQ 'HC' BEGIN
//    CLEARFORM DEP.1 THRU DEP.5
//    CLEAR BANK
//    GOTO START
//  END
ENTRY BANK.NAME              DEP.2          {NOENTER,RETAIN}
  INDICATE SCRBNK FALSE
IF DEP.1 EQ '' LOOP
ENTRY BANK.GL_ACCOUNT        DEP.3          {NOENTER,RETAIN}
ENTRY BANK.GL_DIST           DEP.4          {NOENTER,RETAIN}
ENTRY BANK.GL_DIV            DEP.5          {NOENTER,RETAIN}
ENDGROUP




DO_DEPOSIT:
INDICATE INDEPS TRUE
INDICATE INCASH FALSE
INDICATE INDIST FALSE
ENTERGROUP
    CLEAR DEPOSITS
DO_DEPOS:
      MOVE DEP.1 TO DEPOSITS.BANK_CODE
      INDICATE SCRDATES TRUE
  REPEAT
    CLEARXY 24 0
    GOTOXY 24 0
    SHOW "You may use the <F8> key to display previous deposits"
    ACCEPT DEP.6 TO DEPOSITS.DATE
     CLEARXY 24 0
     IF DEP.6 EQ '' LOOP
     IF DEP.1 EQ 'HC' BEGIN
       CLEARFORM DEP.1 THRU DEP.5
       CLEAR BANK
       GOTO START
     END
     FIND EQ DEPOSITS BY INDEX.1
      INDICATE NEWDEP AS [FINDERR]
      INDICATE SCRDATES FALSE
     [FOUND] BEGIN
        SCREENMODE 248 ON
        MOVE DEPOSITS.AMOUNT TO DEP.7
        MOVE DEPOSITS.AMOUNT TO OLD_DEP
        IF DEPOSITS.BAL NE 0 MOVE DEPOSITS.BAL TO DEP.8
        SCREENMODE 248 OFF
        CLEARXY 24 0
        GOTOXY 24 0
        SCREENMODE 1 ON
        SHOW " Already Have A Deposit On This Date ! E)dit  S)top  D)elete "
    REPEAT
        INKEY ANSW
        UPPERCASE ANSW
        IF ~ ANSW IN "ESD" LOOP
        IF ANSW EQ 'S' BEGIN 
             SCREENMODE 1 ON
             MOVE 0 TO DEP.7
             CLEAR DEPOSITS
             CLEARFORM DEP.6 THRU DEP.7
             CLEARXY 24 0
             GOTO DO_DEPOSIT
          END

         IF ANSW EQ 'E' INDICATE EDITDEP TRUE

         IF ANSW EQ 'D' BEGIN
               INDICATE NOPAYOR AS DEPOSITS.LAST_SEQ EQ 0
               INDICATE DEPBAL AS DEP.8 EQ 0
                 [~ NOPAYOR] GOSUB DEL_PAYOR
                 DELETE DEPOSITS
                 GOSUB CLEAR_FILES
                 CLEARFORM DEP.6 THRU DEP.47
                 GOTO START
              END
       END


        CLEARXY 24 0
        SCREENMODE 1 ON
        MOVE DEP.7 TO DEP.7
        GOTOXY 24 0
        SHOW " Enter The Total Amount Of The Deposit"
  REPEAT
    ENTRY DEPOSITS.AMOUNT    DEP.7
    IF DEP.7 EQ (0.00) LOOP
    MOVE 'CR' TO DEPOSITS.JR
    [NEWDEP] MOVE DEP.7 TO DEPOSITS.BAL
    [NEWDEP] MOVE DEP.7 TO DEP.8
    [NEWDEP] MOVE 1 TO ACCUM1
    [EDITDEP] MOVE ( DEP.7 - OLD_DEP ) TO DEP.8
    [EDITDEP] MOVE ( DEP.7 - OLD_DEP ) TO DEPOSITS.BAL
    [NEWDEP] MOVE (0) TO DEPOSITS.LAST_SEQ
    [NEWDEP] MOVE 'A' TO DEPOSITS.UPDATE
        CLEARXY 24 0
REREAD
ENDGROUP
SAVE DEPOSITS
UNLOCK



DO_CASH:
INDICATE INDIST FALSE
INDICATE INDEPS FALSE
INDICATE INCASH TRUE
ENTERGROUP
    BLANKFORM DEP.14 THRU DEP.15
     DISPLAY 'CASH' TO DEP.9
    INDICATE CASHID TRUE
    ENTRY CRECPT.CUST_ID     DEP.9             {CAPSLOCK}
    INDICATE CASHID FALSE
DO_SEQ:
    [NEWDEP] IF DEP.8 NE 0 DISPLAY ( DEPOSITS.LAST_SEQ + 1 ) TO DEP.10
       INDICATE SCRPAYO TRUE
[EDITDEP] BEGIN
      CLEARXY 24 0
      GOTOXY 24 0
      SHOW "Enter Sequence # of Payor or <F8> To Scroll Payors "
     END
     ENTRY CRECPT.SEQ_NUMBER  DEP.10            {AUTOFIND,NOPUT} 
      CLEARXY 24 0
[EDITDEP] IF DEP.10 LE 0 GOTO DO_SEQ
       INDICATE SCRPAYO FALSE
      [FOUND] ENTDISPLAY CRECPT
      INDICATE NEWCUST AS [FINDERR]
      [FOUND] GOSUB SHOW_DIST
    ENTRY CRECPT.RECEIPT_NUM  DEP.11
    ENTRY CRECPT.CUST_NAME   DEP.12             {CAPSLOCK}
    CLEARXY 24 0
    GOTOXY 24 0
    SHOW " Enter:    M)oney order      R)check       C)ash "
    DISPLAY 'C' TO DEP.13
    ENTRY CRECPT.TYPE        DEP.13             {CAPSLOCK,CHECK='MRC'}
      CLEARXY 24 0
      IF DEP.13 EQ 'R' BEGIN
            DISPLAY " Enter Check No.------>> " TO DEP.14
          END
      IF DEP.13 NE 'R' GOTO BYPASS_NUM
    [~ KEY.FIELD] ENTRY CRECPT.CHECK_NUM   DEP.15             {CAPSLOCK}
    DISPLAY '' TO DEP.14
 BYPASS_NUM:
      CLEARXY 24 0
      GOTOXY 24 0
      SHOW " Enter Amount Received From Payor"
  REPEAT
    ENTRY CRECPT.AMOUNT      DEP.16        
      IF DEP.16 LE (0.00) BEGIN
         CLEARXY 24 0
         ERROR 17 "AMT LE 0.00"
         CLEARFORM DEP.16
       END
       IF DEP.16 LE (0.00) LOOP
        CLEARXY 24 0
        [NEWCUST] IF DEP.16 GT DEP.8 BEGIN
          ERROR 131
          SCREENMODE 240 ON
          MOVE DEP.16 TO DEP.16
          MOVE DEP.8 TO DEP.8
          SCREENMODE 1 ON
          KEYPROC OFF
          INKEY ANSW
          KEYPROC ON
          MOVE 0 TO DEP.16
          MOVE DEP.8 TO DEP.8
          GOTO BYPASS_NUM
       END
    MOVE DEP.16 TO DEP.17
    [NEWCUST] MOVE DEPOSITS.JR TO CRECPT.JR
ENDGROUP




DO_DIST:
INDICATE FIRST_TIME TRUE
INDICATE INDEP FALSE
INDICATE INCASH FALSE
INDICATE INDIST TRUE
INDICATE DEDIT AS [~ NEWCUST]
MOVE 0 TO COUNT

EDIT_DIST:
 [FIRST_TIME] IF DEP.1 EQ 'PO' DISPLAY (301) TO DEP.18 
REPEAT
   MOVE (COUNT * 5 ) TO WINDOWINDEX
REDO_DIST:
     ACCEPT DEP.18&
         INDICATE FIRST_TIME FALSE
      INDICATE INBAL AS DEP.17 EQ 0
      [INBAL] IF DEP.18& EQ 0 GOTO SAVE_DIST
      [~ INBAL] IF DEP.18& LE 0 GOSUB DIST_OUT_BAL
      MOVE REF.DISTRICT TO DEP.19&
      IF BANK.GL_DIV NE '' MOVE BANK.GL_DIV TO DEP.20&
      IF COUNT GT 0 DISPLAY DEP.20 TO DEP.20&
//    ACCEPT DEP.20&
      CLEAR LEDGER
      MOVE DEP.18& TO LEDGER.NUMBER
      MOVE DEP.19& TO LEDGER.DISTRICT
      MOVE DEP.20& TO LEDGER.DIVISION
        FIND EQ LEDGER BY INDEX.1
          [FINDERR] BEGIN
             ERROR 127
             GOSUB TIME_DELAY
             CLEARWARNING
             BLANKFORM DEP.18& THRU DEP.22&
             GOTO REDO_DIST
          END
       MOVE LEDGER.DESC TO DEP.21&
       CLEAR LEDGER
       [~ EDITDEP][DEDIT] MOVE (DEP.17 + DEP.22&) TO DEP.17
       DISPLAY DEP.17 TO DEP.22&
      REPEAT
       ACCEPT DEP.22&
         INDICATE NOGO AS DEP.22& LE (0.00)
         [~ NOGO] INDICATE NOGO AS DEP.22& GT DEP.17
         [NOGO] CLEARFORM DEP.22&
         [NOGO] LOOP
       MOVE (DEP.17 - DEP.22&) TO DEP.17
       INCREMENT COUNT
       UNTIL COUNT EQ 6

[~ INBAL] GOSUB DIST_OUT_BAL


SAVE_DIST:

     [NEWCUST] BEGIN
       INDICATE DEDIT FALSE  
       REREAD
         MOVE ( DEPOSITS.LAST_SEQ + 1 ) TO CRECPT.SEQ_NUMBER
         MOVE ( DEPOSITS.LAST_SEQ + 1 ) TO DEPOSITS.LAST_SEQ
         MOVE ( DEPOSITS.BAL - DEP.16 ) TO DEPOSITS.BAL
         SAVERECORD DEPOSITS
         MOVE 'A' TO CRECPT.UPDATE  // A = RECORD PRIOR TO UPDATING TO LEDGER
                                    // X = RECORD POST UPDATING TO LEDGER

        [NEWCUST] MOVE (DEP.8 - DEP.16) TO DEP.8
        [~ NEWCUST] MOVE (( CRECPT.AMOUNT - DEP.16) + DEP.8 ) TO DEP.8
        INDICATE DEPBAL AS DEP.8 EQ 0
  
       SAVE CRECPT
       CLEAR CRDIST
       MOVE 0 TO COUNT
         REPEAT
            MOVE (COUNT * 5) TO WINDOWINDEX
             IF DEP.18& EQ 0 GOTO CLEAR_DIST
             MOVE BANK.CODE TO CRDIST.BANK_CODE
             MOVE DEPOSITS.JR TO CRDIST.JR
             MOVE DEPOSITS.DATE TO CRDIST.DATE
             MOVE CRECPT.SEQ_NUMBER TO CRDIST.SEQ_NUMBER
             MOVE ( CRECPT.LAST_SEQ + 1 ) TO CRDIST.CONTROL
                MOVE ( CRECPT.LAST_SEQ + 1 ) TO CRECPT.LAST_SEQ
                SAVERECORD CRECPT
             MOVE DEP.18& TO CRDIST.GL_ACCOUNT
             MOVE DEP.19& TO CRDIST.GL_DIST
             MOVE DEP.20& TO CRDIST.GL_DIV
             MOVE DEP.22& TO CRDIST.GL_AMOUNT
             MOVE 'A' TO CRDIST.UPDATE
           IF DEP.22& GT 0 SAVE CRDIST
           CLEAR CRDIST
          INCREMENT COUNT
          UNTIL COUNT EQ 6
       END


[~ NEWCUST] BEGIN
      REREAD
         MOVE DEP.8 TO DEPOSITS.BAL
         SAVERECORD DEPOSITS
       SAVERECORD CRECPT
       CLEAR CRDIST
       MOVE 0 TO COUNT
     REPEAT
        CLEAR CRDIST
        MOVE CRECPT.BANK_CODE TO CRDIST.BANK_CODE
        MOVE CRECPT.DATE TO CRDIST.DATE
        MOVE CRECPT.SEQ_NUMBER TO CRDIST.SEQ_NUMBER
        MOVE ( COUNT + 1 ) TO CRDIST.CONTROL
           FIND EQ CRDIST BY INDEX.1      
           [FOUND] IF DEP.22& GT 0 BEGIN 
            MOVE (COUNT * 5) TO WINDOWINDEX
            MOVE DEP.18& TO CRDIST.GL_ACCOUNT
            MOVE DEP.19& TO CRDIST.GL_DIST
            MOVE DEP.20& TO CRDIST.GL_DIV
            MOVE DEP.22& TO CRDIST.GL_AMOUNT
          SAVE CRDIST
        END
          CLEAR CRDIST
        [FOUND] INCREMENT COUNT
        [FOUND] LOOP 
   END



CLEAR_DIST:
   UNLOCK
   CLEARFORM DEP.18 THRU DEP.47
   CLEARFORM DEP.9 THRU DEP.17
   CLEAR CRDIST
   CLEAR CRECPT
   CLEAR LEDGER
   INDICATE NEW_REC FALSE
   INDICATE EDITDEP AS DEP.8 LT 0
   INDICATE NEWCUST AS DEP.8 GT 0
   INDICATE NEWDEP AS DEP.8 GT 0
   [~ DEPBAL] GOTO DO_CASH
   [DEPBAL] BEGIN
        CLEARFORM DEP.6 THRU DEP.8
        CLEAR DEPOSITS
        GOTO DO_DEPOSIT
     END



//**********< Subroutines >****************************************************

TIME_DELAY:
   MOVE 0 TO TIMER
   FOR TIMER FROM 0 TO 600
   LOOP
RETURN


DIST_OUT_BAL:
[NEWCUST] BEGIN
   INDICATE DEDIT TRUE
   CLEARXY 24 0
   GOTOXY 24 0
   SCREENMODE 112 ON
   SHOW " Out of Balance ..  C)lear  distribution,   Edit Line #...(?)                "
   SCREENMODE 1 ON   
REPEAT       
   MOVE '' TO ANSW
   INKEY ANSW
   IF ANSW EQ '' MOVE (1) TO ANSW
   UPPERCASE ANSW
      IF ~ ANSW IN "C123456" LOOP
        IF ANSW EQ 'C' BEGIN
           CLEARXY 24 0
           CLEARFORM DEP.18 THRU DEP.47
           MOVE DEP.16 TO DEP.17
           MOVE ((COUNT -1) * 5) TO WINDOWINDEX
           MOVE (COUNT - 1) TO COUNT
         END
        IF ANSW IN '123456' BEGIN
           CLEARXY 24 0
           MOVESTR ANSW TO COUNT
           MOVE (( COUNT - 1) * 5 ) TO WINDOWINDEX  // SET TO EDIT LINE

           MOVE ( COUNT - 1 ) TO COUNT             // RESET COUNT TO CONTINUE
                                                   // ON NEXT LINE AFTER LINE
                                                   // EDITED  
           
           MOVE (DEP.17 + DEP.22& ) TO DEP.17
         END
 END

[~ NEWCUST] RETURN

RETURN



SHOW_DIST:
    MOVE 0 TO COUNT
      REPEAT
        CLEAR CRDIST
        MOVE CRECPT.BANK_CODE TO CRDIST.BANK_CODE
        MOVE CRECPT.DATE TO CRDIST.DATE
        MOVE CRECPT.SEQ_NUMBER TO CRDIST.SEQ_NUMBER
        MOVE ( COUNT + 1 ) TO CRDIST.CONTROL
           FIND EQ CRDIST BY INDEX.1      
           [FOUND] BEGIN 
              MOVE (COUNT * 5) TO WINDOWINDEX

              MOVE CRDIST.GL_ACCOUNT TO DEP.18&
              MOVE CRDIST.GL_DIST TO DEP.19&
              MOVE CRDIST.GL_DIV TO DEP.20&
                CLEAR LEDGER
                   MOVE CRDIST.GL_ACCOUNT TO LEDGER.NUMBER
                   MOVE CRDIST.GL_DIST TO LEDGER.DISTRICT
                   MOVE CRDIST.GL_DIV TO LEDGER.DIVISION
                      FIND EQ LEDGER.OVERLAP
                   MOVE LEDGER.DESC TO DEP.21&
                   CLEAR LEDGER
                   MOVE CRDIST.GL_AMOUNT TO DEP.22&
   
           END
            [FOUND] INCREMENT COUNT
            [FOUND] LOOP
RETURN
            

DEL_DIST:
    MOVE 1 TO COUNT
        CLEAR CRDIST
        MOVE CRECPT.BANK_CODE TO CRDIST.BANK_CODE
        MOVE CRECPT.DATE TO CRDIST.DATE
        MOVE CRECPT.SEQ_NUMBER TO CRDIST.SEQ_NUMBER
      REPEAT
        MOVE COUNT TO CRDIST.CONTROL
           FIND EQ CRDIST BY INDEX.1     
       //  [FOUND][INCASH] MOVE ( CRDIST.GL_AMOUNT + DEP.8 ) TO DEP.8 
           [FOUND] MOVE ( CRDIST.GL_AMOUNT + DEP.17 ) TO DEP.17
           [FOUND] DELETE CRDIST
           INCREMENT COUNT
           UNTIL (COUNT - 1 ) EQ CRECPT.LAST_SEQ
           INDICATE DEPBAL AS DEP.8 EQ 0  // CHECK TO SEE IF DEPOSIT HAS
                                          // BEEN DISTRIBUTED
           CLEAR CRDIST
RETURN



DEL_PAYOR:
     MOVE 1 TO COUNT2
           CLEAR CRECPT
        REPEAT
           MOVE BANK.CODE TO CRECPT.BANK_CODE
           MOVE DEPOSITS.DATE TO CRECPT.DATE
           MOVE COUNT2 TO CRECPT.SEQ_NUMBER
             FIND EQ CRECPT BY INDEX.1
             [FOUND] GOSUB DEL_DIST  
             IF STATUS CRECPT DELETE CRECPT
             INCREMENT COUNT2
             UNTIL ( COUNT2 - 1 ) EQ DEPOSITS.LAST_SEQ
             CLEAR CRECPT
RETURN

             
ERR_MSG1:
    CLEARXY 24 0
    GOTOXY 24 0
    SHOW " Do You Wish To DELETE This Deposit ?  (Y/N) !"
    GOTOXY 24 48  
      REPEAT
        INKEY ANSW
        UPPERCASE ANSW
        IF ~ ANSW IN 'YN' LOOP
        IF ANSW EQ 'Y' BEGIN
           CLEARXY 24 0
           [~ NOPAYOR] GOSUB DEL_PAYOR
           DELETE DEPOSITS
           CLEAR DEPOSITS
           CLEAR CRECPT
           CLEARFORM 
         END
         IF ANSW EQ 'N' CLEARXY 24 0
           
RETURN


CLEAR_FILES:
    CLEAR DEPOSITS
    CLEAR CRECPT
    CLEAR CRDIST
RETURN




//**********< Key Procedures >*************************************************

//------< KEY.ANY >------------------------------------------------------------

  KEYPROC KEY.ANY
      INDICATE DEPBAL AS DEP.8 EQ 0
      INDICATE ACCDIST AS DEP.19 EQ ''
      INDICATE NOPAYOR AS DEPOSITS.LAST_SEQ EQ 0
      KEYPROC ON
  RETURN

//------< KEY.HELP >-----------------------------------------------------------


//------< KEY.ESCAPE >---------------------------------------------------------


KEYPROC KEY.ESCAPE
     [INDEPS][~ SCRBNK][~ SCRDATES] BEGIN
         CLEARFORM DEP.6 THRU DEP.8
         GOSUB CLEAR_FILES
            abort
//         RETURN DO_DEPOS
     END

     [INDEPS][~ SCRBNK][SCRDATES] BEGIN
         CLEARFORM DEP.1 THRU DEP.8
         GOSUB CLEAR_FILES
         INDICATE SCRDATES FALSE
         RETURN START
      END

     [INDEPS][SCRBNK][~ SCRDATES] BEGIN
         GOSUB CLEAR_FILES
           CLEARXY 24 0
           GOTOXY 24 0
           SHOW ' Do you wish to print / update the receipts now (Y/N) '
           REPEAT
           GOTOXY 24 58
           INKEY ANSW
           UPPERCASE ANSW
             IF ~ ANSW IN 'YN' LOOP
             IF ANSW EQ 'Y' CHAIN 'DEPOS'
             CLEARXY 24 0
         ABORT
      END

      [INCASH][DEPBAL] BEGIN
         CLEARFORM DEP.9 THRU DEP.47
         CLEAR CRDIST
         CLEAR CRECPT
         RETURN DO_DEPOSIT
       END

      [INCASH][~ DEPBAL] BEGIN
            ERROR 130
            GOSUB ERR_MSG1
            IF STATUS DEPOSITS RETURN DO_CASH
            IF ~ STATUS DEPOSITS RETURN START
        END
     
            

      [INDIST][NEWCUST]  BEGIN
                 IF DEP.17 NE (0.00) BEGIN       
                    CLEARFORM DEP.18 THRU DEP.47
                    MOVE DEP.16 TO DEP.17
                    RETURN DO_CASH
                 END


                 IF DEP.17 EQ (0.00) BEGIN
                    CLEARXY 24 0
                    GOTOXY 24 0
                    SHOW "Are you ready to save this distribution? Y/N "
                    REPEAT 
                    INKEY ANSW
                    UPPERCASE ANSW
                       IF ~ ANSW IN 'YN' LOOP
                       CLEARXY 24 0
                       IF ANSW EQ 'Y' RETURN SAVE_DIST
                       IF ANSW EQ 'N' BEGIN  
                          CLEARFORM DEP.18 THRU DEP.47
                          MOVE DEP.16 TO DEP.17
                          RETURN DO_CASH        
                       END
                END
       END

ENTAGAIN
RETURN        //KEY.ESCAPE

//-----< KEY.DELETE >----------------------------------------------------------

KEYPROC KEY.DELETE
     IF STATUS DEPOSITS IF DEPOSITS.UPDATE EQ 'X' BEGIN
         PAGE WARN1
         DISPLAY DEPOSITS.AMOUNT TO WARN1.1
         DISPLAY DEPOSITS.DATE TO WARN1.2
         REPEAT 
          ACCEPT WARN1.3
          UPPERCASE WARN1.3
           IF ~ WARN1.3 IN 'YN' LOOP
           IF WARN1.3 EQ 'Y' RETURN
      END
     [INDEPS] IF STATUS DEPOSITS GOSUB ERR_MSG1
     [INDEPS] IF ~ STATUS DEPOSITS RETURN START
            

     [INCASH] IF STATUS CRECPT BEGIN
         CLEARXY 24 0
         GOTOXY 24 0
         SHOW " Are you sure you wish to DELETE this Payor Record ? (Y/N) "
        REPEAT
           MOVE '' TO ANSW
           INKEY ANSW
           UPPERCASE ANSW
             IF ~ ANSW IN 'YN' LOOP
             IF ANSW EQ 'N' BEGIN
                  CLEARXY 24 0
                  RETURN DO_CASH
               END
             IF ANSW EQ 'Y' BEGIN
                  CLEARXY 24 0
                  MOVE (DEP.17 + DEP.8) TO DEP.8
                  CLEARFORM DEP.9 THRU DEP.47
                  GOSUB DEL_DIST
                  CLEARFORM DEP.17
                  DELETE CRECPT   
                  CLEAR CRECPT
                  CLEAR CRDIST
                  RETURN DO_CASH
               END
           END
      
      [INCASH] IF ~ STATUS CRECPT BEGIN
               CLEARFORM DEP.18 THRU DEP.47
               CLEAR CRDIST
               CLEAR CRECPT
               RETURN DO_CASH
             END
     
      [INDIST] IF STATUS CRECPT BEGIN
               CLEARXY 24 0
               GOTOXY 24 0
               SHOW "Are you sure you wish to delete distribution records ? (Y/N)"
               REPEAT
                 INKEY ANSW
                 UPPERCASE ANSW
                   IF ~ ANSW IN 'YN' LOOP
                   IF ANSW EQ 'N' RETURN
                   IF ANSW EQ 'Y' BEGIN
                      GOSUB DEL_DIST
                      MOVE DEP.16 TO DEP.17
                      CLEARFORM DEP.18 THRU DEP.47
                      RETURN DO_CASH
                   END
       END

       [INDIST] IF ~ STATUS CRECPT BEGIN
                MOVE DEP.16 TO DEP.17
                CLEARFORM DEP.18 THRU DEP.47
                RETURN DO_CASH
       END

ENTAGAIN
RETURN        // KEY.DELETE


//------< KEY.CLEAR >----------------------------------------------------------

KEYPROC KEY.CLEAR

     [INDIST][~ ACCDIST] BEGIN
         [NEWCUST] BEGIN
         CLEARFORM DEP.18 THRU DEP.47
         MOVE DEP.16 TO DEP.17
         CLEAR CRDIST
         RETURN DO_DIST
       END
     END

     [INDIST][ACCDIST] BEGIN
         [NEWCUST] BEGIN
         CLEARFORM DEP.9 THRU DEP.47
         MOVE DEP.16 TO DEP.17
         CLEAR CRECPT
         CLEAR CRDIST
         RETURN DO_CASH
        END
       END

     [INCASH][~ CASHID] BEGIN
         [NEWCUST] BEGIN
         CLEAR CRECPT
         CLEAR CRDIST
         CLEARFORM DEP.9 THRU DEP.47
         RETURN DO_CASH
         END
       END

     [INCASH][DEPBAL][CASHID] BEGIN
         [NEWCUST] BEGIN
         CLEARFORM DEP.9 THRU DEP.47
         CLEAR CRECPT
         CLEAR CRDIST
         RETURN START
         END
       END

     [INCASH][~ DEPBAL][CASHID] BEGIN
         ERROR 130
            GOSUB ERR_MSG1
            IF STATUS DEPOSITS RETURN DO_CASH
            IF ~ STATUS DEPOSITS RETURN START
        END


     [INDEPS] BEGIN
         CLEAR DEPOSITS
         CLEAR CRECPT
         CLEAR CRDIST
         CLEARFORM DEP.1 THRU DEP.8
         RETURN START
      END

 ENTAGAIN
 RETURN                // KEY.CLEAR
//------< KEY.USER2 >----------------------------------------------------------

KEYPROC KEY.USER2
   CLEARXY 24 0
     [SCRBNK]  BEGIN 
        PAGE BNK
        SCREENMODE 1 ON
        SCROLL BNK 8 2 BANK INDEX.1 DISPLAY_BANK FIND_LT_BANK ;
                                                  FIND_GT_BANK TEST_BANK
  
                MOVE (( SCROLL$L$COUNT - 1) * 2) TO WINDOWINDEX
                MOVE BNK.1& TO DEP.1
                PAGE DEP
                RETURN DO_CODE
     END    

      [SCRDATES]  BEGIN   
        PAGE DATES
        SCREENMODE 1 ON
        SCROLL DATES 8 2 DEPOSITS INDEX.1 DISPLAY_DATES FIND_LT_DATES ;
                                                 FIND_GT_DATES TEST_DATES
                 
                MOVE (( SCROLL$L$COUNT - 1 ) * 2) TO WINDOWINDEX
                MOVE DATES.1& TO DEP.6
                [KEY.ESCAPE] CLEAR DEPOSITS
                PAGE DEP
                RETURN DO_DEPOS
     END   


      [SCRPAYO] BEGIN
        PAGE PAYO
        SCREENMODE 1 ON
        SCROLL PAYO 8 4 CRECPT INDEX.2 DISPLAY_PAYO FIND_LT_PAYO ;
                                               FIND_GT_PAYO TEST_PAYO
                MOVE (( SCROLL$L$COUNT - 1 ) * 4) TO WINDOWINDEX
                MOVE PAYO.1& TO DEP.10
                PAGE DEP
                RETURN DO_SEQ
      END

ENTAGAIN
RETURN

//-----< KEY.UP >--------------------------------------------------------------

KEYPROC KEY.UP
   ENTAGAIN
RETURN


//-----< KEY.DOWN >------------------------------------------------------------

KEYPROC KEY.DOWN
    ENTAGAIN
RETURN

//-----< KEY.PREVIOUS >--------------------------------------------------------

KEYPROC KEY.PREVIOUS
     ENTAGAIN
RETURN


//-----< KEY.NEXT >------------------------------------------------------------

KEYPROC KEY.NEXT
     ENTAGAIN
RETURN

//-----< KEY.FIELD >-----------------------------------------------------------

KEYPROC KEY.FIELD
    [INDIST][NEWCUST] IF DEP.18 NE 0 BEGIN
      INDICATE DEDIT TRUE
      CLEARXY 24 0
      GOTOXY 24 0
      SCREENMODE 112 ON
      SHOW " Options:  Edit LINE # ? , D)elete Distribution ! Enter Your Choice.          "
      SCREENMODE 1 ON
      REPEAT
        GOTOXY 24 75
        MOVE '' TO ANSW
        INKEY ANSW
        UPPERCASE ANSW
        IF ~ ANSW IN "123456D" LOOP
           IF ANSW EQ 'D' BEGIN
                   CLEARXY 24 0
                   IF STATUS CRECPT GOSUB DEL_DIST
                   CLEARFORM DEP.18 THRU DEP.47
                   CLEAR CRDIST
                   MOVE DEP.16 TO DEP.17
                   RETURN DO_DIST
                 END 

           IF ANSW NE 'D' BEGIN
           CLEARXY 24 0
           MOVESTR ANSW TO COUNT
           MOVE (COUNT - 1) TO COUNT
           RETURN EDIT_DIST
         END
     END

[INDIST][NEWCUST] IF DEP.18 EQ 0 BEGIN
         MOVE ( DEP.8 + DEP.16 ) TO DEP.8
         RETURN BYPASS_NUM
       END

[INCASH][~ CASHID] BEGIN
         BACKFIELD
         RETURN
       END


[INDEPS] BACKFIELD

RETURN         // KEY.FIELD

//-----< KEY.SFIND >------------------------------------------------------------

KEYPROC KEY.SFIND
     ENTAGAIN
RETURN




//-----< KEY.PRINT >-----------------------------------------------------------

KEYPROC KEY.PRINT
     ENTAGAIN
RETURN


//**************** K E Y P R O C     S U B R O U T I N E S *******************


// KEYPROC SUBROUTINES

DISPLAY_BANK:
  DISPLAY BANK.CODE TO BNK.1&
  DISPLAY BANK.NAME TO BNK.2&
RETURN

DISPLAY_DATES:
  DISPLAY DEPOSITS.DATE TO DATES.1&
  DISPLAY DEPOSITS.AMOUNT TO DATES.2&
RETURN

DISPLAY_PAYO:
  DISPLAY CRECPT.SEQ_NUMBER TO PAYO.1&
  DISPLAY CRECPT.CUST_NAME TO PAYO.2&
  DISPLAY CRECPT.TYPE TO PAYO.3&
  DISPLAY CRECPT.AMOUNT TO PAYO.4&
RETURN


FIND_LT_BANK:
  MOVE BNK.1 TO BANK.CODE
RETURN


FIND_LT_DATES:
  MOVE BANK.CODE TO DEPOSITS.BANK_CODE
  MOVE DATES.1 TO DEPOSITS.DATE
RETURN

FIND_LT_PAYO:
  MOVE BANK.CODE TO CRECPT.BANK_CODE
  MOVE DEPOSITS.DATE TO CRECPT.DATE
  MOVE PAYO.1 TO CRECPT.SEQ_NUMBER
RETURN



FIND_GT_BANK:
  MOVE BNK.15 TO BANK.CODE
RETURN

FIND_GT_DATES:
  MOVE BANK.CODE TO DEPOSITS.BANK_CODE
  MOVE DATES.15 TO DEPOSITS.DATE
RETURN



FIND_GT_PAYO:
  MOVE BANK.CODE TO CRECPT.BANK_CODE
  MOVE DEPOSITS.DATE TO CRECPT.DATE
  MOVE PAYO.29 TO CRECPT.SEQ_NUMBER
RETURN


TEST_BANK:
   INDICATE SCROLL_INDICATOR TRUE
RETURN

TEST_DATES:
   INDICATE SCROLL_INDICATOR AS DEPOSITS.BANK_CODE EQ BANK.CODE
   [SCROLL_INDICATOR] INDICATE SCROLL_INDICATOR AS DEPOSITS.DATE GE START_MONTH
RETURN

TEST_PAYO:
   INDICATE SCROLL_INDICATOR AS CRECPT.DATE EQ DEPOSITS.DATE
RETURN


//==============================< End Program >=================================

