/SCRMENU      RESIDENT
ออออออออ< General Ledger Setup & Maintenance >อออออออออออออออออออออออออออออออออ

			      __. ______________________________
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
		1.  Setup Prosecutor & Fiscal Year Information
		2.  Maintain Bank Codes 
		3.  Report Generator
		4.  Print Report Master List
		5.  Replicate Report Master's
		6.  Maintain Divisions
		7.  Maintain Month Descriptions
		8.  Maintain Journal Master List
		9.  Print Journal Master List
		10. Return to General Ledger
		11. Return to Victim Restitution
		12. Return to System's Menus
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ

		Please Enter Your Selection : __

<F1> = Help                                   <ESC> = Return To Main Menus

/MENUHELP       RESIDENT
ออออออออออ< Menu Help Screen >อออออออออออออออออออออออออออออออออออออออออออออออออ






/EXIT    RESIDENT
ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                             บ
บ   You have just completed entering data into some of the Reference files    บ
บ   that are necessary for the operation of the General Ledger System.        บ
บ                                                                             บ
บ   If by chance you were unable to complete all of the information required  บ
บ   please complete before using the System.                                  บ
บ                                                                             บ
บ   Your options now will be :                                                บ
บ   1 = Return to General Ledger Menu   2 = Return to Setup Menu              บ
บ   3 = Return to Main Dataflex Menu                                          บ
บ                                                                             บ
บ      Enter Your Selection.......{ _                                         บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ


/BODY   
_.
___.
___.
___
__
_.
__
_
_________________________________________
/SELECTREP
อออออออออออ< Replicate Report >ออออออออออออออออออออออออออออออออออออออออออออออออ






	    Report Number To Replicate........{   _.
	    Assign New Report Number..........{   _.

	    Replicate for District............{   ___
	    Replicate For Division............{   __



/SCRREF  
อออออ< General Ledger / Reference Information File >อออออออออออออออออออออออออออ
	       Prosecutor.....{ ______________________________
	       Address........{ ______________________________
	       City,State,Zip.{ ______________________________

District's ID Code..{ ___   Hot Check Bank Code..{ __   Division's  (Y/N).{ _

Enter The Hot Check Division Account Numbers For The Following:
A/R Merchant...{ ___.  A/R Prosecutors Fees..{ ___. Offenses In Process.{ ___.  
A/P Merchant...{ ___.  A/P Prosecutors Fees..{ ___. New Offenses........{ ___.
Receipt HC.....{ ___.  Receipt MFEES.........{ ___. Receipt PFEES.......{ ___.
Receipt Ct Cost{ ___.  Receipt Journal Entry.{ ___. Disb PFEES..........{ ___.
Disb Restit....{ ___.  Disb MFEES............{ ___. Bank Deposits.......{ ___.
Disb Court Cost{ ___.  Disb Journal Entry....{ ___. Bank Account #......{ ___.
Equity Account.{ ____.                    
Enter Accounting Periods:                               
     Period's Jan _.               May _.               Sep _.  
	      Feb _.               Jun _.               Oct _. 
	      Mar _.               Jul _.               Nov _.
	      Apr _.               Aug _.               Dec _.
     Current Yr _____. Will General Ledger Use Bank Reconcilition? (Y/N).{ _
		       Print Receipt Default ( 1 thru 5 ) ....{ _.
<F10> = Save Record      <F1> = Help          <ESC> = To Exit
/REFHELP     RESIDENT
อออออออออ< Reference File / Help >อออออออออออออออออออออออออออออออออออออออออออออ

  1.  Enter the Prosecutor's name and office address.

  2.  Enter Your District's ID Code assigned by the Prosecutor Coordinator

  3.  If you are going to operate more than just a General Ledger System
      for the Prosecutor's accounts only enter 'Y' at the Division's prompt.

  4.  Enter the General Ledger Account Numbers for all blanks, it is
      imperative that you fill in all account numbers.

  5.  The accounting periods are defaulted to a calander year, if your fiscal
      year is different then fill in the appropriate periods.
	 An example:  Say your fiscal year started July 1st , then you would
		      then Jan would be period 7 Feb=8 Mar=9 Apr=10 May=11
		      Jun=12 Jul=1 Aug=2 Sep=3 Oct=4 Nov=5 Dec=6


<PRESS ANY KEY TO CONTINUE>
/SCRMON 
อออออออ< Month Descriptions >ออออออออออออออออออออออออออออออออออออออออออออออออออ

		 January......{ ___      (1)
		 February.....{ ___      (2)
		 March........{ ___      (3)
		 April........{ ___      (4)
		 May..........{ ___      (5)
		 June.........{ ___      (6)
		 July.........{ ___      (7)
		 August.......{ ___      (8)
		 September....{ ___      (9)
		 October......{ ___      (10)
		 November.....{ ___      (11)
		 December.....{ ___      (12)

This is a system file which has no indexes and is available for access across
 all programs........  After Entering The abrev month code you will not have
 to access this program again.

Please Save <F10> before using the ESCAPE key to Exit.......................

<F10> to save record                                     <ESC> to exit 
/MONHELP   
ออออออออออออ< Calander Month Description's / Help >ออออออออออออออออออออออออออออ


   Enter in the spaces following each month the abbreviated form for each
   month.
   As an example January = Jan etc.

   This should be a one time only entry screen, Once you have filled in
    this screen properly then you should never have to access it again
    unless for some reason the file becomes deleted or corrupt.

   These abbreviations are used in the Financial reports in the General
   Ledger System.

   If the abbreviations are already filled in then save the record by 
   pressing the <F10> key



<PRESS ANY KEY TO CONTINUE>
/SCRNRPT
REPORT NUMBER _. SEQUENCE NUMBER ___. THRU ___.                (HELP AVAILABLE)
=====SEQ==GL=DIS=DV=CT=ACTION=====================S=A=ALTERNATE DESCRIPTION====
 1. ___. ___. ___ __ __ _________________________ _. _ ________________________
 2. ___. ___. ___ __ __ _________________________ _. _ ________________________
 3. ___. ___. ___ __ __ _________________________ _. _ ________________________
 4. ___. ___. ___ __ __ _________________________ _. _ ________________________
 5. ___. ___. ___ __ __ _________________________ _. _ ________________________
 6. ___. ___. ___ __ __ _________________________ _. _ ________________________
 7. ___. ___. ___ __ __ _________________________ _. _ ________________________
 8. ___. ___. ___ __ __ _________________________ _. _ ________________________
 9. ___. ___. ___ __ __ _________________________ _. _ ________________________
10. ___. ___. ___ __ __ _________________________ _. _ ________________________
11. ___. ___. ___ __ __ _________________________ _. _ ________________________
12. ___. ___. ___ __ __ _________________________ _. _ ________________________
13. ___. ___. ___ __ __ _________________________ _. _ ________________________
14. ___. ___. ___ __ __ _________________________ _. _ ________________________

M FOR MORE, L TO RELIST, D TO DELETE, A TO ADD _  LINE NUMBER TO EDIT/DELETE _.

FIRST G/L# ___.  DS ___ (A=ALL)   CONTROL TYPE __ (AC/PN/PA)   START SEQ# ___.
FINAL G/L# ___.  DV __  (A=ALL)   SIGN CONTROL _. (1 OR -1)    SEQ SPACING  _.

To exit depress ESCAPE and RETURN twice.  CLEAR returns to the top of screen.
/SCRRPTHELP
	CONTROL TYPES      
PH=PAGE HEADER            AH=ALTERNATE PAGE HEADER       GI=GROSS REVENUE      
BL=BLANK LINE             GH=GROUP HEADER                PD=PRINT DASHES
PN=PRINT ACCOUNT          AC=ACCUMULATE ACCOUNT          PE=PRINT EQUAL       
ST=PRINT SUB-TOTAL        PA=PRINT ACCUMULATED ACCOUNTS  RE=REPORT END        
TT=PRINT TOTAL SUB-TOTALS GT=PRINT GRAND TOTAL                 
NI=NET REVENUE (LOSS)     AA=ACCUMULATE ACCUMULATOR (NON PRINT PA)
CL=CLEAR ALL TOTALS       AS=ACCUMULATE SUB-TOTAL                
PC=PRINT COMMENT          AT=ACCUMULATE TOTALS                   
NP=NEW PAGE               AG=ACCUMULATE GRAND TOTAL              
	
CT column uses one of the above control types.
S  column is sign control and is a 1 or -1.  -1 will reverse the sign for
A  is alternate discription.  If the control type is a printing control such as
   PN an alternate description from that used in the general ledger files may
   be printed.  Headers and totals need the alternate description.

Depressing the ESCAPE key will take you to the bottom to edit, delete, add etc.
TO EXIT RETURN THUR THE LINE TO EDIT FIELD.

More HELP avaiable.              Press any key to return.
/SCRRPTHELP2
The A option will take you to the bottom of the screen where the beginning and 
ending set of general ledger numbers can be entered.  This is useful where you
need to enter a large number of account to be printed or accumulated.  The only
two options available ar PN and AC.  Keep in mind that the PN will also add
to the accumlators.  

Be careful with sequence numbers.  These control the order in which the report
will be printed.  Leave enough room during initial setup to add accounts or 
codes later.  A spacing of at least 10 is recommended.  If continuing from a
partial report enter the next sequence number wanted.

The manual has sample reports that show a typical setup

The CLEAR key will return you to the top of the screen.  To keep the list 
smaller that you are working with, depress clear and change the beginning and
ending sequence numbers.






		    Depress any key to return



/SCRNSAVE
____. _____. _____. _____. _____. ____. _____. _____. _____. _____.
____. _____. _____. _____. _____. 



/PRTLSTHEADER RESIDENT
=======< Report Master List >==================================================
Date  __/__/____                Report  _.                           Page __.
		      ___________________________________
===============================================================================

Seq  GL# Dis Div Sign Cnt    Action                    Printed Label    
/PRTLSTBODY RESIDENT
___. ___. ___ __ _. __ ______________________________ _________________________
/SCRLST
-----< General Ledger / Report Master >----------------------------------------




	      Do You Wish To Print A Master File Listing (Y/N)..{ _

	      Do You Wish To Delete A Master File Listing (Y/N).{ _

		     Enter Report Number ........{ _.

		     Continue Or Abort (C/A).....{ _




/SCRDIV
อออออ< General Ledger / Division's >อออออออออออออออออออออออออออออออออออออออออออ

	   Code..........................{ __
	   Division Name.................{ ______________________________
	 
	   Accounts Payable Account #....{ ___.
	   Accounts Receivable Account #.{ ___.
	  
	   Bank Code.....................{ __
	   Type of Bank Account..........{ __  

  Number Of Ledger Accounts Using This Division.........{ __.




<F10> To Save Record       <F1> For Help          <ESC> To Return To Menu

/DIVHELP
อออออออออ< Division's / Help >อออออออออออออออออออออออออออออออออออออออออออออออออ

      In order to account for the different types of funds handled by the
      Prosecutor's office all Revenues and Expenses will be broken down
      into Divisions.

      First it will be necessary to establish the Prosecutor's Division code
      as the first Division. (see below for suggested codes)

      The Prosecutor division will receive all Revenues and Expenses
      directly attributable to its operation.

      The other Divisions will receive Funds and Disbursements concerning
      transactions as designated or dictated by law or circumstance.

      As Code designations  you may use either Alpha or Numeric codes.

      Suggested Division Codes:
      
      PF = Prosecutor Fees    HC = Hot Checks   VR = Victim Restitution
      CM = Case Management
	
<PRESS ANY KEY TO CONTINUE>
      
/SCRBANK    RESIDENT
อออออออออ< Bank Code Maintenance >อออออออออออออออออออออออออออออออออออออออออออออ


	  Bank Code..................{ __
	  Name.......................{ ______________________________
	  Bank Account Number........{ _______________

		 G/L Account.........{ ___. ___ __
		 
		 Next Check Number...{ _____.
      
		 Current Balance.....{ ______.__

	   Last Deposit Date.........{ __/__/____
 
	   Last Receipt Number.......{ ______.
	   Current Statement Balance.{ ______.__
	   Last Statement Balance....{ ______.__
	   Cleared total.............{ ______.__


/NOBANK1     
ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                             บ
บ   You have selected to delete a bank code which has a current balance.      บ
บ      This Bank Code cannot be deleted until the current balance is          บ
บ      brought to (0.00) and then only after the end of the fiscal year.      บ
บ                                                                             บ
บ                  <Press any key to continue>                                บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/NOBANK2          
ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                             บ
บ   You have selected to delete a bank code !! Are you sure this is what      บ
บ   you wish to do? (Y/N).......{ _                                           บ
บ                                                                             บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/WARN1            
ษอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ   You have entered a new district number.                                   บ
บ   Do you wish to change all files to reflect this new number ?              บ
บ                                                                             บ
บ             Please enter a (Y/N)................{ _                         บ
ศอออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
/NOTICE           
ษออออออออออออออออออออออออออออออออออออออออออออออป
บ   _______________________________________    บ
ศออออออออออออออออออออออออออออออออออออออออออออออผ
/SCRLOAD    RESIDENT
อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ









		 Now Loading Program Selected











อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
/SCRFIRST
ออออออออออ< General Ledger Setup >อออออออออออออออออออออออออออออออออออออออออออออ

  Before the General Ledger System can be Run you must first Setup 
  the following files:

     1.  Reference File
     2.  Month's Description File
     3.  Division's File
     4.  Bank Code File




  As you enter into each of these entry screens you may press the <F1> key
  to access the help screens.




<PRESS ANY KEY TO CONTINUE>

/CHECKPARA
อออออออออ< General Ledger System >อออออออออออออออออออออออออออออออออออออออออออออ









		     Standby Checking Parameters

/DATE_SCRN
__/__/____
/NOSETUP
ออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ

			     * * W A R N I N G * *

	 There is no record in the PROSECUTOR SETUP TABLE for ____ !!


    You MUST add a record to the Setup Table (option 7 on the Master Menu)
    and/or check that the system date is correct.





			  Press any key to continue _



/info

   Changes made on 10-28-1999 by Jeff March
	Added direct_output to LPT1:

Recompiled 01-19-2000 by Jeff March
	Recognize new backspace command in calcdate.inc
	  


/*
Use y2k.pkg
Read_dfini "df23ini.cfg"
SET_Date_ATTRIBUTE Date4_State To DFTRUE
//----------------- Cannot Run Program From Command Line (DOS)
IF NEXT_MENU LE 0 ABORT
INTEGER USER_NUMB USER$_ACCESS   //must be first integers defined in program
STRING USER$ 30
MOVE '' TO USER$
MOVE 0 TO USER$_ACCESS
//------------------------------------------------------------
//-------------- Find Logged On User For Program Use
#INCLUDE Calcdate.inc
#include macs.frm

OPEN USERX
CLEAR USERX
MOVE USER_NUMB TO USERX.USER_NUMB
FIND EQ USERX BY INDEX.1
MOVE USERX.USER_NAME TO USER$
MOVE USERX.ACCS_LEVL TO USER$_ACCESS
//----------------------------------------------------

DATE_MACRO_INIT
//-------< Declare Variables >------------------------------------------------
INDICATOR DIS DIV FIRST SECOND THIRD GOOD OK 
INDICATOR CHART_SCR DO_FIRST DO_REF DO_MO DO_DIV
INDICATOR RPT_SCR LST_SCR STOP_MSG
INDICATOR MENU_SCR REF_SCR MON_SCR STOP_PRINT DIV_SCR
INDICATOR NEWREC REP_SCR BANKSCR

STRING EXIT_SCREEN 1 CHAR 1 JR 2 STARTDATE 3 ENDDATE 3 LONG 50 SHORT 50
STRING QUIT 1 ANSW 1 VALID_DIVISIONS 8 CHECK_DIV 2
STRING OLD_DIST 3 YEAR 4 YR 4

INTEGER COUNT RECORD GLCOUNT LINE LCOUNT SEQ
INTEGER ADAY AMONTH AYEAR JR_MONTH TIMER JR_SIZE

NUMBER ANSWER ACCUM ACCUM1 ACCUM2 ACCUM3 ACCUM4 ACCUM5 ACCUM6 ACCUM7        
NUMBER ACCUM8 ACCUM9 ACCUM10 ACCUM11 ACCUM12 ACCUM13 ACCUM14 TRANS
NUMBER RUN_BAL SIZE_OF_FILE

DATE ENTDATE DFR_DATE DFR_DATE2 TODAY 


// NAME FOR MENU SCREEN
NAME SCRMENU USER_NUM USER_NAM OPTION_NUM

//-------< open files >--------------------------------------------------------

OPEN REF
OPEN MONTHS
OPEN SYSFILE
OPEN LEDGER    
OPEN JOURNALS 1
OPEN RPTMAST
OPEN JRLIST
OPEN DIVISION 1
OPEN BANK
OPEN RECON
OPEN SETUP

//-------< Set Variables >----------------------------------------------------

INDICATE DIS FALSE                     
INDICATE DIV AS REF.DIVISION  MATCH "Y"

 MOVE 0 TO RUN_BAL
 MOVE 0 TO SIZE_OF_FILE

 MOVE '' TO VALID_DIVISIONS
 MOVE 'HC|CM|VR' TO VALID_DIVISIONS
 MOVE '' TO YEAR

PAGE SET NOBANK1 AT 15 0
PAGE SET NOBANK2 AT 15 0
PAGE SET WARN1 AT 14 0
PAGE SET NOTICE AT 14 10


SYSDATE4 TODAY
MOVE TODAY TO DATE_SCRN.1
RIGHT DATE_SCRN.1 TO YR 4
RIGHT DATE_SCRN.1 TO year 4
//MOVE '19' TO YEAR
//APPEND YEAR YR
    clearxy 24 0
    gotoxy 24 0
    show YEAR
    move '' to answ
    inkey answ


		 CLEAR SETUP
		 MOVE YEAR TO SETUP.YEAR
		 FIND EQ SETUP BY INDEX.1
		 [FINDERR] GOSUB NOSETUP 
		 IF SETUP.LSTREC LE 0 GOSUB NOSETUP
		 IF SETUP.LAST_CHECK LE 0 GOSUB NOSETUP


//****< General Ledger Maintenance Menu >**************************************
      PAGE CHECKPARA     
      INDICATE STOP_MSG FALSE
      INDICATE DO_FIRST FALSE
SETUP_MENU:
     MOVE 0 TO SIZE_OF_FILE
     FILE_SIZE REF TO SIZE_OF_FILE
	 INDICATE DO_REF AS SIZE_OF_FILE EQ 0
	 INDICATE DO_FIRST AS SIZE_OF_FILE EQ 0
      [DO_FIRST][~ STOP_MSG] GOSUB FIRST_DO
      [DO_REF] GOSUB START_REF
      MOVE 0 TO SIZE_OF_FILE
      FILE_SIZE MONTHS TO SIZE_OF_FILE
	 INDICATE DO_MO AS SIZE_OF_FILE EQ 0
	 INDICATE DO_FIRST AS SIZE_OF_FILE EQ 0
      [DO_FIRST][~ STOP_MSG] GOSUB FIRST_DO
      [DO_MO] GOSUB LIST_MONTHS
      MOVE 0 TO SIZE_OF_FILE
      FILE_SIZE DIVISION TO SIZE_OF_FILE
	 INDICATE DO_DIV AS SIZE_OF_FILE EQ 0
	 INDICATE DO_FIRST AS SIZE_OF_FILE EQ 0
     [DO_FIRST][~ STOP_MSG] GOSUB FIRST_DO
     [DO_DIV] GOSUB MASTER_DIV
     MOVE 0 TO SIZE_OF_FILE
     INDICATE DO_REF FALSE
     INDICATE DO_MO FALSE
     INDICATE DO_DIV FALSE
       [DO_FIRST] BEGIN
	      PAGE EXIT
	DO_EXIT_AGAIN:
	      BLANKFORM EXIT.1
	      ACCEPT EXIT.1
	      IF ~ EXIT.1 IN '123' GOTO DO_EXIT_AGAIN
	      IF EXIT.1 EQ '1' CHAIN 'LEDGER'
	      IF EXIT.1 EQ '3' ABORT
	   END
     INDICATE DO_FIRST FALSE

FORMAT OPTION_NUM                 {RANGE = 1,12}

     REPEAT
       INDICATE MENU_SCR TRUE
       CLEARFORM OPTION_NUM
       DISPLAY USER_NUMB TO USER_NUM
       DISPLAY USERX.USER_NAME TO USER_NAM 
       PAGE SCRMENU
  TOP_MENU:
       MOVE '' TO OPTION_NUM
       ACCEPT OPTION_NUM
       INDICATE MENU_SCR FALSE
	 IF OPTION_NUM EQ 1 GOSUB START_REF    
	 IF OPTION_NUM EQ 2 GOSUB MASTER_BANK  
	 IF OPTION_NUM EQ 3 GOSUB MASTER_REPORT 
	 IF OPTION_NUM EQ 4 GOSUB REPORT_LIST      
	 IF OPTION_NUM EQ 5 GOSUB REP_REPORT   
	 IF OPTION_NUM EQ 6 GOSUB MASTER_DIV
	 IF OPTION_NUM EQ 7 GOSUB LIST_MONTHS  
	 IF OPTION_NUM EQ 8 CHAIN "JRLIST"
	 IF OPTION_NUM EQ 9 CHAIN "LISTJR"       
	 IF OPTION_NUM EQ 10 BEGIN           
		     PAGE SCRLOAD
		     CHAIN 'LEDGER'
		  END
	 IF OPTION_NUM EQ 11 BEGIN 
		     PAGE SCRLOAD
		CHAIN 'VRS'
		  END
	 IF OPTION_NUM EQ 12 ABORT         

	 INDICATE MENU_SCR TRUE
PASSIT:
     LOOP
     CLEARSCREEN
     GOTO SETUP_MENU

  FIRST_DO: 
     INDICATE STOP_MSG TRUE 
     PAGE SCRFIRST
     INKEY ANSW
     PAGE CHECKPARA
   RETURN


//========< Replicate Report >=================================================
REP_REPORT:
INDICATE REP_SCR TRUE

OUTFILE "RPTREP.TMP"
  PAGE SELECTREP
REP_REPORT_QUES:
  ACCEPT SELECTREP.1
  ACCEPT SELECTREP.2
  ACCEPT SELECTREP.3
  ACCEPT SELECTREP.4

  MOVE 0 TO PAGEEND
  MOVE SELECTREP.1 TO RPTMAST.REPORT

REPORT RPTMAST BY INDEX.1
	 INDICATE SELECT AS RPTMAST.REPORT EQ SELECTREP.1
[NOT SELECT] RETURN END.OF.REPORT

SECTION BODY  
  PRINT SELECTREP.2 TO BODY.1
  PRINT RPTMAST.SEQ TO BODY.2
  PRINT RPTMAST.GL TO BODY.3
  PRINT RPTMAST.BR TO BODY.4
  IF RPTMAST.GL GT (0) PRINT SELECTREP.3 TO BODY.4
  PRINT RPTMAST.DP TO BODY.5
  IF RPTMAST.GL GT (0) PRINT SELECTREP.4 TO BODY.5
  PRINT RPTMAST.SC TO BODY.6
  PRINT RPTMAST.CT TO BODY.7
  PRINT RPTMAST.USEALT TO BODY.8
  PRINT RPTMAST.ALTDESC TO BODY.9
  SHOWLN RPTMAST.REPORT " " RPTMAST.SEQ " " RPTMAST.GL " " RPTMAST.DP " " RPTMAST.BR
  OUTPUT BODY  
REPORTEND
CLEARSCREEN
SHOWLN "DESTINATION ACCOUNT"
OUTCLOSE
STRING TEMSTR
DIRECT_INPUT "RPTREP.TMP"
[SEQEOF] ERROR 75 "RPTREP.TMP"
[SEQEOF] ABORT
REPEAT
    CLEAR RPTMAST
  READLN RPTMAST.REPORT
  READLN RPTMAST.SEQ
  READLN RPTMAST.GL
  READLN RPTMAST.BR
  READLN RPTMAST.DP
  READLN RPTMAST.SC
  READLN RPTMAST.CT
  READLN RPTMAST.USEALT
  READLN RPTMAST.ALTDESC
    SAVERECORD RPTMAST
  SHOWLN RPTMAST.REPORT " " RPTMAST.SEQ " " RPTMAST.GL " " RPTMAST.BR " " RPTMAST.DP
[NOT SEQEOF] LOOP
SHOWLN

QUIT_REP_REPORT:
  INDICATE REP_SCR FALSE

RETURN    // return for rep_report


//*********< Reference file >**************************************************

START_REF:
[DO_FIRST] BEGIN
      PAGE REFHELP
      INKEY ANSW
   END

INDICATE REF_SCR TRUE
MOVE '' TO OLD_DIST

     FORMAT SCRREF.1 THRU SCRREF.15         {REQUIRED}
     FORMAT SCRREF.16 THRU SCRREF.34        {REQUIRED}
ENTERGROUP
AUTOPAGE SCRREF
     FILE_SIZE REF TO SIZE_OF_FILE
     IF SIZE_OF_FILE GE 1 ENTDISPLAY REF
TOP_REF:
    IF SCRREF.26 EQ 0 BEGIN
	MOVE 1 TO SCRREF.26
	MOVE 2 TO SCRREF.29
	MOVE 3 TO SCRREF.32
	MOVE 4 TO SCRREF.35
	MOVE 5 TO SCRREF.27
	MOVE 6 TO SCRREF.30
	MOVE 7 TO SCRREF.33
	MOVE 8 TO SCRREF.36
	MOVE 9 TO SCRREF.28
	MOVE 10 TO SCRREF.31
	MOVE 11 TO SCRREF.34
	MOVE 12 TO SCRREF.37
     END
   
  ENTRY REF.PROSECUTOR     SCRREF.1                   {CAPSLOCK}
  ENTRY REF.ADDRESS        SCRREF.2                   {CAPSLOCK}
  ENTRY REF.CITY_STATE     SCRREF.3                   {CAPSLOCK}
    MOVE REF.DISTRICT TO OLD_DIST
  ENTRY REF.DISTRICT       SCRREF.4
     IF SCRREF.4 NE OLD_DIST BEGIN
	PAGE WARN1
	 REPEAT
	 CLEARFORM WARN1.1
	 ACCEPT WARN1.1
	 UPPERCASE WARN1.1
	 IF ~ WARN1.1 IN 'YN' LOOP
	 PAGE SCRREF
	   IF WARN1.1 EQ 'N' MOVE OLD_DIST TO SCRREF.4
	   IF WARN1.1 EQ 'Y' BEGIN
	      FILE_SIZE JOURNALS TO JR_SIZE
		 PAGE NOTICE
		 IF JR_SIZE GT 0 GOSUB CHNG_JR
		 PAGE NOTICE
		 GOSUB CHNG_LEDG
		 PAGE NOTICE
		 GOSUB CHNG_RPT
		 PAGE NOTICE
		 GOSUB CHNG_BANK
		 reread
		 MOVE SCRREF.4 TO SETUP.DIST
		 MOVE SCRREF.4 TO REF.DISTRICT
		 MOVE SCRREF.4 TO OLD_DIST
		 SAVERECORD REF SETUP
		 ENTDISPLAY REF
		 UNLOCK

	    END
       END
  [KEY.FIELD] GOTO TOP_REF
  ENTRY REF.HC_BANK        SCRREF.5
  ENTRY REF.DIVISION       SCRREF.6                   {CAPSLOCK,CHECK='YN'}
  ENTRY REF.ARMER          SCRREF.7
  ENTRY REF.ARPFEE         SCRREF.8
  ENTRY REF.APPROCESS      SCRREF.9
  ENTRY REF.APMER          SCRREF.10
  ENTRY REF.APPFEES        SCRREF.11
  ENTRY REF.NEWOFF         SCRREF.12
  ENTRY REF.RHC            SCRREF.13
  ENTRY REF.RMFEES         SCRREF.14
  ENTRY REF.RPFEES         SCRREF.15
  ENTRY REF.RCOSTS         SCRREF.16
  ENTRY REF.RJR            SCRREF.17
  ENTRY REF.DPFEES         SCRREF.18
  ENTRY REF.DREST          SCRREF.19
  ENTRY REF.DMFEES         SCRREF.20
  ENTRY REF.DEPOSITS       SCRREF.21
  ENTRY REF.DCOSTS         SCRREF.22
  ENTRY REF.DJR            SCRREF.23
  ENTRY REF.CASH           SCRREF.24
  ENTRY REF.TYRETAINED     SCRREF.25
  ENTRY REF.PER1         SCRREF.26
  ENTRY REF.PER2         SCRREF.29
  ENTRY REF.PER3         SCRREF.32
  ENTRY REF.PER4         SCRREF.35
  ENTRY REF.PER5         SCRREF.27
  ENTRY REF.PER6         SCRREF.30
  ENTRY REF.PER7         SCRREF.33
  ENTRY REF.PER8         SCRREF.36
  ENTRY REF.PER9         SCRREF.28
  ENTRY REF.PER10        SCRREF.31
  ENTRY REF.PER11        SCRREF.34
  ENTRY REF.PER12        SCRREF.37
  ENTRY REF.CURRENT_YR   SCRREF.38
  ENTRY REF.RECON        SCRREF.39
  ENTRY REF.RCPT_DEFAULT SCRREF.40
SAVE_REF_QUES:
[KEY.ESCAPE] GOTO QUIT_REF
      CLEARXY 24 0
      GOTOXY 24 0
      SHOW " Do You Wish To Save This Record ? "
      GOTOXY 24 38
      MOVE '' TO ANSW
      INKEY ANSW
      UPPERCASE ANSW
      IF ANSW IN 'N' BEGIN
	  CLEARXY 24 0
	  GOTO QUIT_REF      
	END
      IF ~ ANSW IN 'YN' BEGIN
	  CLEARXY 24 0
	  MOVE '' TO ANSW
	  GOTO SAVE_REF_QUES
       END
SAVE_REF_DOIT:
CLEARXY 24 0
REREAD
ENDGROUP
SAVE REF
UNLOCK
GOTO START_REF   


QUIT_REF:

INDICATE REF_SCR FALSE

RETURN     // for (start_ref)



// GLMONTH *************************************************************

LIST_MONTHS:

[DO_FIRST] BEGIN
     PAGE MONHELP
     INKEY ANSW
  END

INDICATE MON_SCR TRUE
TOP_MONTHS:
  ENTERGROUP
    AUTOPAGE SCRMON
     FILE_SIZE MONTHS TO SIZE_OF_FILE
     IF SIZE_OF_FILE GE 1 ENTDISPLAY MONTHS
     IF SCRMON.1 EQ '' BEGIN
	MOVE 'JAN' TO SCRMON.1
	MOVE 'FEB' TO SCRMON.2
	MOVE 'MAR' TO SCRMON.3
	MOVE 'APR' TO SCRMON.4
	MOVE 'MAY' TO SCRMON.5
	MOVE 'JUN' TO SCRMON.6
	MOVE 'JUL' TO SCRMON.7
	MOVE 'AUG' TO SCRMON.8
	MOVE 'SEP' TO SCRMON.9
	MOVE 'OCT' TO SCRMON.10
	MOVE 'NOV' TO SCRMON.11
	MOVE 'DEC' TO SCRMON.12
     END
  ENTRY months.jan    SCRMON.1
  ENTRY months.feb    SCRMON.2
  ENTRY months.mar    SCRMON.3
  ENTRY months.apr    SCRMON.4
  ENTRY months.may    SCRMON.5
  ENTRY months.jun    SCRMON.6
  ENTRY months.jul    SCRMON.7
  ENTRY months.aug    SCRMON.8
  ENTRY months.sep    SCRMON.9
  ENTRY months.oct    SCRMON.10
  ENTRY months.nov    SCRMON.11
  ENTRY months.dec    SCRMON.12
ques_months:
    clearxy 24 0
    gotoxy 24 0
    show " Do You Wish To Save This Record  (Y/N)..."
    gotoxy 24 46
    move '' to answ
    inkey answ
    uppercase answ
    if answ in "Y" goto end_months
    if ~ answ in "Y" begin
	 clear months
	 clearform
	 clearxy 24 0
	 goto top_months
       end

end_months:
    clearxy 24 0
    REREAD
    ENDGROUP
    save months
    unlock
    goto top_months

QUIT_MONTHS:

  INDICATE MON_SCR FALSE

RETURN   // return for list_months:


//********< Report Master >****************************************************



MASTER_REPORT:

INDICATE RPT_SCR TRUE

FORMAT SCRNRPT.8   {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.17  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.26  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.35  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.44  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.53  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.62  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.71  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.80  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.89  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.98  {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.107 {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.116 {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.125 {CAPSLOCK,CHECK="AH,BL,GH,GI,PD,PC,PE,RE,P2,PX,SX,PAATT,ACL,PNI,NPH,AST,AGT"}
FORMAT SCRNRPT.10  {RANGE=-1,1}
FORMAT SCRNRPT.19  {RANGE=-1,1}
FORMAT SCRNRPT.28  {RANGE=-1,1}
FORMAT SCRNRPT.37  {RANGE=-1,1}
FORMAT SCRNRPT.46  {RANGE=-1,1}
FORMAT SCRNRPT.55  {RANGE=-1,1}
FORMAT SCRNRPT.64  {RANGE=-1,1}
FORMAT SCRNRPT.73  {RANGE=-1,1}
FORMAT SCRNRPT.82  {RANGE=-1,1}
FORMAT SCRNRPT.91  {RANGE=-1,1}
FORMAT SCRNRPT.100 {RANGE=-1,1}
FORMAT SCRNRPT.109 {RANGE=-1,1}
FORMAT SCRNRPT.118 {RANGE=-1,1}
FORMAT SCRNRPT.127 {RANGE=-1,1}
FORMAT SCRNRPT.11  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.20  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.29  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.38  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.47  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.56  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.65  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.74  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.83  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.92  {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.101 {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.110 {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.119 {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.128 {CAPSLOCK,CHECK="YN"}
FORMAT SCRNRPT.133      {CAPSLOCK}
FORMAT SCRNRPT.137      {CAPSLOCK}
FORMAT SCRNRPT.134      {CAPSLOCK,CHECK="PNPACP2PXSX"}
FORMAT SCRNRPT.138      {RANGE=-1,1}

START_CONTROL: PAGE SCRNRPT
	clearform scrnrpt
	ACCEPT SCRNRPT.1
	ACCEPT SCRNRPT.2
	ACCEPT SCRNRPT.3
	 IF SCRNRPT.3 EQ (0) MOVE (9999) TO SCRNRPT.3

RPT_FIRST: CLEAR RPTMAST LEDGER
	MOVE SCRNRPT.1 TO RPTMAST.REPORT
	MOVE (SCRNRPT.2 - 1) TO RPTMAST.SEQ
RPT_SECOND: CLEARFORM SCRNRPT.4 THRU SCRNRPT.138
	CLEARFORM SCRNSAVE
  FOR COUNT FROM 0 TO 13   
   CLEAR LEDGER
   FIND GT RPTMAST BY INDEX.1
  [FINDERR] GOTO ADDLINES
  IF RPTMAST.REPORT NE SCRNRPT.1 GOTO ADDLINES
  IF RPTMAST.SEQ GT SCRNRPT.3 GOTO ADDLINES
  MOVE (COUNT * 9) TO WINDOWINDEX
  MOVE RPTMAST.SEQ TO SCRNRPT.4&
  MOVE RPTMAST.GL TO SCRNRPT.5&
  MOVE RPTMAST.BR TO SCRNRPT.6&
  MOVE RPTMAST.DP TO SCRNRPT.7&
  MOVE RPTMAST.CT TO SCRNRPT.8&
  GOSUB DESC
    MOVE RPTMAST.SC TO SCRNRPT.10&
  IF RPTMAST.GL GT (0) RELATE RPTMAST
  MOVE LEDGER.DESC TO SCRNRPT.12&
  MOVE RPTMAST.USEALT TO SCRNRPT.11&
  IF RPTMAST.USEALT MATCH "Y" MOVE RPTMAST.ALTDESC TO SCRNRPT.12&
  MOVE COUNT TO WINDOWINDEX
  MOVE RPTMAST.RECNUM TO SCRNSAVE.1&
LOOP

GOTO MORE

ADDLINES: CLEAR RPTMAST
FIXLINES: REPEAT
  MOVE (COUNT * 9) TO WINDOWINDEX
  MOVE SCRNRPT.1 TO RPTMAST.REPORT
  ACCEPT SCRNRPT.4& TO RPTMAST.SEQ
  ACCEPT SCRNRPT.5& TO RPTMAST.GL
  ACCEPT SCRNRPT.6& TO RPTMAST.BR
  ACCEPT SCRNRPT.7& TO RPTMAST.DP
	IF SCRNRPT.5& GT (0) BEGIN
		MOVE SCRNRPT.5& TO LEDGER.NUMBER
		MOVE SCRNRPT.6& TO LEDGER.DISTRICT
		MOVE SCRNRPT.7& TO LEDGER.DIVISION
		FIND EQ LEDGER BY RECNUM
		[FOUND] MOVE LEDGER.DESC TO SCRNRPT.12&
	END
  ACCEPT SCRNRPT.8& TO RPTMAST.CT
	GOSUB DESC
  ACCEPT SCRNRPT.10& TO RPTMAST.SC
  ACCEPT SCRNRPT.11& TO RPTMAST.USEALT
  IF SCRNRPT.11& MATCH "Y" ACCEPT SCRNRPT.12& TO RPTMAST.ALTDESC
SAVERECORD RPTMAST
MOVE COUNT TO WINDOWINDEX
MOVE RPTMAST.RECNUM TO SCRNSAVE.1&
CLEAR RPTMAST LEDGER
INCREMENT COUNT
MOVE COUNT TO WINDOWINDEX
IF SCRNSAVE.1& GT (0) GOTO FINIS 
UNTIL COUNT EQ (14)

MORE: CLEARFORM SCRNRPT.130 THRU SCRNRPT.139
	ACCEPT SCRNRPT.130
	IF SCRNRPT.130 MATCH "L" GOTO RPT_FIRST
	IF SCRNRPT.130 MATCH "M" GOTO RPT_SECOND
	IF SCRNRPT.130 MATCH "D" GOSUB BYEBYE
	IF SCRNRPT.130 MATCH "A" GOSUB CREATE

FINIS: CLEARFORM SCRNRPT.130 THRU SCRNRPT.131
	ACCEPT SCRNRPT.131
	IF SCRNRPT.131 LT (1) GOTO FINISH
	CLEAR RPTMAST
	MOVE (SCRNRPT.131 - 1) TO COUNT
	MOVE COUNT TO WINDOWINDEX
	MOVE SCRNSAVE.1& TO RPTMAST.RECNUM
	FIND EQ RPTMAST BY RECNUM
	[FINDERR] GOTO FINIS
	GOTO FIXLINES

FINISH: CLEAR RPTMAST LEDGER
	CLEARSCREEN
	GOTO QUIT_SCRNRPT
  

BYEBYE: ACCEPT SCRNRPT.131
	MOVE (SCRNRPT.131 - 1) TO WINDOWINDEX
	CLEAR RPTMAST
	MOVE SCRNSAVE.1& TO RPTMAST.RECNUM
	FIND EQ RPTMAST BY RECNUM
	[FINDERR] RETURN MORE
	DELETE RPTMAST
	RETURN RPT_FIRST

CREATE: ACCEPT SCRNRPT.132
	ACCEPT SCRNRPT.136
	ACCEPT SCRNRPT.133
	IFNOT "A" IN SCRNRPT.133 ACCEPT SCRNRPT.137
	ACCEPT SCRNRPT.134
REDO2:  ACCEPT SCRNRPT.138
	 IF SCRNRPT.138 EQ (0) GOTO REDO2
	ACCEPT SCRNRPT.135 TO SEQ
	ACCEPT SCRNRPT.139
MOVE SCRNRPT.132 TO LEDGER.NUMBER

REPEAT
FIND GT LEDGER BY INDEX.1
[FINDERR] RETURN RPT_FIRST
IF LEDGER.NUMBER GT SCRNRPT.136 RETURN RPT_FIRST
IF "A" IN SCRNRPT.133 GOTO GETIT
IF LEDGER.DISTRICT NE SCRNRPT.133 GOTO SKIPIT
IF "A" IN SCRNRPT.137 GOTO GETIT 
IF LEDGER.DIVISION NE SCRNRPT.137 GOTO SKIPIT

GETIT: CLEAR RPTMAST
  MOVE SCRNRPT.1 TO RPTMAST.REPORT
  MOVE SEQ TO RPTMAST.SEQ
  MOVE (SEQ + SCRNRPT.139) TO SEQ
  MOVE (0) TO RPTMAST.GL
  MOVE (0) TO RPTMAST.BR
  MOVE (0) TO RPTMAST.DP
  IF SCRNRPT.134 MATCH "PA" MOVE LEDGER.DESC TO RPTMAST.ALTDESC
  MOVE "Y" TO RPTMAST.USEALT
IFNOT SCRNRPT.134 MATCH "PA" BEGIN
  MOVE LEDGER.NUMBER TO RPTMAST.GL
  MOVE LEDGER.DISTRICT TO RPTMAST.BR
  MOVE LEDGER.DIVISION TO RPTMAST.DP
  MOVE SCRNRPT.138 TO RPTMAST.SC
  MOVE SCRNRPT.134 TO RPTMAST.CT
  MOVE "N" to  RPTMAST.BR
END
  SAVERECORD RPTMAST
  CLEAR RPTMAST
SKIPIT: LOOP

DESC:   IF SCRNRPT.8& MATCH "PH" MOVE "PAGE HEADER" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "AH" MOVE "ALT. PAGE HEADER" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "GH" MOVE "GROUP HEADER" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "BL" MOVE "BLANK LINE" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "PA" MOVE "PRINT ACCUMULATOR" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "PN" MOVE "PRINT ACCOUNT" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "ST" MOVE "PRINT SUB-TOTAL" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "TT" MOVE "PRINT TOTAL OF SUB-TOTALS" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "GT" MOVE "PRINT GRAND TOTAL" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "AG" MOVE "ACCUM. GRAND TOTALS" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "GI" MOVE "GROSS REVENUE" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "NI" MOVE "NET REVENUE(LOSS)" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "PC" MOVE "PRINT COMMENT" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "PD" MOVE "PRINT DASHES" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "PE" MOVE "PRINT EQUALS" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "CL" MOVE "CLEAR ALL ACCUMULATORS" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "AC" MOVE "ACCUMULATE ACCOUNT" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "NP" MOVE "NEW PAGE (SCRNRPTFEED)" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "RE" MOVE "REPORT END" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "AA" MOVE "ACCUMULATE CODE AC" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "AS" MOVE "ACCUMULATE SUB-TOTAL" TO SCRNRPT.9&
	IF SCRNRPT.8& MATCH "AT" MOVE "ACCUMULATE SUB-TOTALS" TO SCRNRPT.9&
 RETURN


QUIT_SCRNRPT:

INDICATE RPT_SCR FALSE
 
RETURN    // for (master_report:)


// GLCNTLST ***********************************************

REPORT_LIST:
INDICATE LST_SCR TRUE

DIRECT_OUTPUT "LPT1:"
MOVE 60 TO PAGEEND

CLEAR RPTMAST

PAGE SCRLST
	FORMAT SCRLST.1 {CAPSLOCK,CHECK="YN"}
	FORMAT SCRLST.2 {CAPSLOCK,CHECK="YN"}
	FORMAT SCRLST.4 {CAPSLOCK,CHECK="CA"}
	MOVE "N" TO SCRLST.2
	ACCEPT SCRLST.1
	IF SCRLST.1 MATCH "Y" GOTO QUES3
	ACCEPT SCRLST.2
	IF SCRLST.2 MATCH "N" GOTO QUIT_LST_SCR
QUES3:  ACCEPT SCRLST.3 TO RPTMAST.REPORT
	ACCEPT SCRLST.4
	IF SCRLST.4 MATCH "A" GOTO QUIT_LST_SCR


 GOSUB LST_HEADER

 FIND GE RPTMAST BY INDEX.1
   [FINDERR] GOTO QUIT_LST_SCR
   [FOUND] REPEAT

   INDICATE SELECT AS RPTMAST.REPORT EQ SCRLST.3
   [NOT SELECT] GOTO DO_LST_AGAIN    

	PRINT RPTMAST.SEQ  TO PRTLSTBODY.1
	PRINT RPTMAST.GL   TO PRTLSTBODY.2
	PRINT RPTMAST.BR   TO PRTLSTBODY.3
	PRINT RPTMAST.DP   TO PRTLSTBODY.4
	PRINT RPTMAST.SC   TO PRTLSTBODY.5
	PRINT RPTMAST.CT   TO PRTLSTBODY.6
	IF RPTMAST.CT MATCH "PH" PRINT "PAGE HEADER" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "AH" PRINT "ALT. PAGE HEADER" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "GH" PRINT "GROUP HEADER" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "BL" PRINT "BLANK LINE" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "PA" PRINT "PRINT ACCUMULATOR" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "PN" PRINT "PRINT ACCOUNT" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "ST" PRINT "PRINT SUB-TOTAL" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "TT" PRINT "PRINT TOTAL OF SUB-TOTALS" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "GT" PRINT "PRINT GRAND TOTAL" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "AG" PRINT "ACCUM. GRAND TOTALS" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "GI" PRINT "GROSS REVENUE" TO PRTLSTBODY.7
	IF RPTMASt.Ct match "AG" PRINT "NET REVENUE(LOSS)" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "PC" PRINT "PRINT COMMENT" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "PD" PRINT "PRINT DASHES" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "PE" PRINT "PRINT EQUALS" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "CL" PRINT "CLEAR ALL ACCUMULATORS" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "AC" PRINT "ACCUMULATE ACCOUNT" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "NP" PRINT "NEW PAGE (FORMFEED)" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "RE" PRINT "REPORT END" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "AA" PRINT "ACCUMULATE CODE AC" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "AS" PRINT "ACCUMULATE SUB-TOTAL" TO PRTLSTBODY.7
	IF RPTMAST.CT MATCH "AT" PRINT "ACCUMULATE SUB-TOTALS" TO PRTLSTBODY.7
	IF RPTMAST.USEALT MATCH "Y" PRINT RPTMAST.ALTDESC TO PRTLSTBODY.8
	IF NOT RPTMAST.USEALT MATCH "Y" PRINT LEDGER.DESC TO PRTLSTBODY.8
 OUTPUT PRTLSTBODY
IF SCRLST.2 MATCH "Y" DELETE RPTMAST

DO_LST_AGAIN:
FIND GT RPTMAST BY INDEX.1
[FOUND] LOOP
[FINDERR] GOTO QUIT_LST_SCR

LST_HEADER:

	PRINT SYSFILE.TODAY    TO PRTLSTHEADER.1
	PRINT RPTMAST.REPORT   TO PRTLSTHEADER.2
	PRINT PAGECOUNT        TO PRTLSTHEADER.3
	PRINT REF.PROSECUTOR   TO PRTLSTHEADER.4
OUTPUT PRTLSTHEADER


RETURN



QUIT_LST_SCR:
   INDICATE LST_SCR FALSE
   FORMFEED
   DESPOOL
RETURN     // for (report_list:)



//*******< General Ledger Division Master >************************************


MASTER_DIV:
    [DO_FIRST] BEGIN
	PAGE DIVHELP
	INKEY ANSW
     END
     

  INDICATE DIV_SCR TRUE
  INDICATE NEWREC FALSE
ENTERGROUP
 TOP_DIV:
  AUTOPAGE SCRDIV
    ENTRY DIVISION.CODE             SCRDIV.1     {CAPSLOCK,AUTOFIND}
    [FOUND] INDICATE NEWREC TRUE
    ENTRY DIVISION.DESC             SCRDIV.2     {CAPSLOCK}
    ENTRY DIVISION.A_P_ACCOUNT      SCRDIV.3
    ENTRY DIVISION.A_R_ACCOUNT      SCRDIV.4
    ENTRY DIVISION.BANK_CODE        SCRDIV.5     {CAPSLOCK}
    ENTRY DIVISION.TYPE             SCRDIV.6     {CAPSLOCK}
    [NEWREC] MOVE 0 TO SCRDIV.7
    ENTRY DIVISION.ACCOUNTS         SCRDIV.7     {NOENTER}

SAVE_DIV_QUES:
   CLEARXY 24 0
   GOTOXY 24 0
   SHOW " Do You Wish To Save This Record ? "
   GOTOXY 24 38
   MOVE '' TO ANSW 
   INKEY ANSW
   UPPERCASE ANSW
   IF ANSW IN 'Y' BEGIN
	     CLEARXY 24 0
	     GOTO SAVE_DIV_DOIT
	    END
   IF NOT ANSW IN 'Y' BEGIN
	     CLEARXY 24 0
	     CLEAR DIVISION
	    CLEARFORM
	     MOVE '' TO ANSW
	     GOTO MASTER_DIV
	   END
SAVE_DIV_DOIT:

REREAD
ENDGROUP
INDICATE NEWREC FALSE
SAVE DIVISION
UNLOCK
CLEAR DIVISION
CLEARFORM
GOTO TOP_DIV  
QUIT_DIV_SCR:
   INDICATE DIV_SCR FALSE
   CLEARFORM 
   CLEAR DIVISION
RETURN   // for (master_div:)


//=======< Bank Code Maintenance >=============================================

MASTER_BANK:
INDICATE BANKSCR TRUE
INDICATE NEWREC TRUE  

ENTERGROUP
  TOP_BANK:
   AUTOPAGE SCRBANK

    ENTRY BANK.CODE                   {CAPSLOCK,AUTOFIND}
    [FOUND] INDICATE NEWREC FALSE
    ENTRY BANK.NAME                   {CAPSLOCK}
    ENTRY BANK.ACCOUNT_ID             {CAPSLOCK}
    ENTRY BANK.GL_ACCOUNT
    ENTRY BANK.GL_DIST                {CAPSLOCK}
    ENTRY BANK.GL_DIV
    ENTRY BANK.NEXT_CHECK_NUM
    ENTRY BANK.CURRENT_BAL
    ENTRY BANK.LAST_DEP_DATE
    ENTRY BANK.LAST_RCPT
    ENTRY BANK.STMT_BAL
    ENTRY BANK.PRIOR_STMT_BAL
    ENTRY BANK.CLEARED


SAVE_BANK_QUES:
   CLEARXY 24 0
   GOTOXY 24 0
   SHOW " Do You Wish To Save This Record ? "
   GOTOXY 24 38
   MOVE '' TO ANSW 
   INKEY ANSW
   UPPERCASE ANSW
   IF ANSW IN 'Y' BEGIN
	     CLEARXY 24 0
	     GOTO SAVE_BANK
	    END
   IF NOT ANSW IN 'Y' BEGIN
	     CLEARXY 24 0
	     CLEAR BANK     
	    CLEARFORM
	     MOVE '' TO ANSW
	     GOTO MASTER_BANK
	   END
SAVE_BANK:    

REREAD
ENDGROUP
INDICATE NEWREC FALSE
SAVE BANK      
UNLOCK
CLEAR BANK     
CLEARFORM
GOTO TOP_BANK 




QUIT_MASTER_BANK:
INDICATE BANKSCR FALSE
RETURN

//=======< SUB ROUTINES >======================================================



NO_DELETE_MSG:
       CLEARXY 24 0
       GOTOXY 24 0
       SCREENMODE 112 ON
       SHOW ' Cannot Delete Accounts From This Screen !!!  Press <Space Bar> to continue!   '
       SCREENMODE 1 ON
       INKEY ANSW
       CLEARXY 24 0
 RETURN


TIME_DELAY:
	 MOVE 0 TO TIMER
	 FOR TIMER FROM 0 TO 600
	 LOOP
RETURN


CHNG_JR:
   SCREENMODE 240 ON
   DISPLAY '         Updating Journals             ' TO NOTICE.1
   SCREENMODE 1 ON
     CLEAR JOURNALS
     FIND GT JOURNALS BY RECNUM
     [FOUND] REPEAT
       reread
       IF JOURNALS.BR NE SCRREF.4 BEGIN
	 MOVE SCRREF.4 TO JOURNALS.BR
	 SAVERECORD JOURNALS
       END
       unlock
	 FIND GT JOURNALS BY RECNUM
       [FOUND] LOOP
       [finderr] clear journals
PAGE SCRREF
RETURN

CHNG_LEDG:
   SCREENMODE 240 ON
   DISPLAY '        Updating Ledger Accounts       ' TO NOTICE.1
   SCREENMODE 1 ON
     CLEAR LEDGER
     FIND GT LEDGER BY RECNUM
     [FOUND] REPEAT
     reread
	  MOVE SCRREF.4 TO LEDGER.DISTRICT
	  SAVERECORD LEDGER
       unlock
	 FIND GT LEDGER BY RECNUM
       [FOUND] LOOP
       [finderr] clear ledger
PAGE SCRREF
RETURN

CHNG_RPT:
  SCREENMODE 240 ON
  DISPLAY '        Updating Report Master         ' TO NOTICE.1
  SCREENMODE 1 ON
    CLEAR RPTMAST
    FIND GT RPTMAST BY RECNUM
    [FOUND] REPEAT
    reread
       IF RPTMAST.BR NE SCRREF.4 BEGIN
       MOVE SCRREF.4 TO RPTMAST.BR
       SAVERECORD RPTMAST
    END
    unlock
      FIND GT RPTMAST BY RECNUM
    [FOUND] LOOP
    [finderr] clear rptmast
PAGE SCRREF
RETURN


CHNG_BANK:
  SCREENMODE 240 ON
  DISPLAY '        Updating Bank Codes            ' TO NOTICE.1
  SCREENMODE 1 ON
    CLEAR BANK
    FIND GT BANK BY RECNUM
    [FOUND] REPEAT
    reread
       IF BANK.GL_DIST NE SCRREF.4 BEGIN
       MOVE SCRREF.4 TO BANK.GL_DIST
       SAVERECORD BANK
    END
    unlock
      FIND GT BANK BY RECNUM
    [FOUND] LOOP
    [finderr] clear bank
  PAGE SCRREF
RETURN


NOSETUP:
    DISPLAY YEAR TO NOSETUP.1
    ACCEPT NOSETUP.2
    ABORT
RETURN





//=======< KEYPROCS >=====================================================

//=======< KEYPROC KEY.ESCAPE >===============================================


KEYPROC KEY.ESCAPE
     [MENU_SCR] BEGIN
	 GOTOXY 24 0
	 SHOW ' Ready To Exit program ? (Y/N) '
	 INKEY CHAR
	 IF CHAR IN 'yY' BEGIN
	     CLEARSCREEN
	     ABORT
	   END
	 CLEARXY 24 0
       END 
     [REP_SCR] BEGIN 
	  CLEARFORM SELECTREP
	  CLEAR LEDGER
	  RETURN QUIT_REP_REPORT
	END
     [LST_SCR] BEGIN
	  CLEARFORM SCRLST
	  RETURN QUIT_LST_SCR
	 END
     [DIV_SCR] BEGIN
	  CLEAR DIVISION
	  CLEARFORM
	  RETURN QUIT_DIV_SCR
	END
      [BANKSCR] BEGIN
	  CLEARFORM SCRBANK
	  CLEAR BANK
	  RETURN QUIT_MASTER_BANK
	END

     [REF_SCR] RETURN SAVE_REF_QUES
     [MON_SCR] RETURN QUIT_MONTHS
     [RPT_SCR] RETURN MORE
ENTAGAIN
RETURN

//=========< KEYPROC KEY.HELP >================================================

KEYPROC KEY.HELP
      [RPT_SCR]  BEGIN
	      PAGE SCRRPTHELP
	      INKEY ANSW
	      PAGE SCRRPTHELP2
	      INKEY ANSW
	      PAGE SCRNRPT
	      RETURN
	    END
      [REF_SCR] BEGIN
	      PAGE REFHELP
	      INKEY ANSW
	      PAGE SCRREF
	      RETURN TOP_REF
	   END
      [MON_SCR] BEGIN
	      PAGE MONHELP
	      INKEY ANSW
	      PAGE SCRMON
	      RETURN TOP_MONTHS
	   END
      [DIV_SCR] BEGIN
	      PAGE DIVHELP
	      INKEY ANSW
	      PAGE SCRDIV
	      RETURN TOP_DIV
	    END

ENTAGAIN
RETURN


//=========< KEYPROC KEY.FIELD >===============================================


KEYPROC KEY.FIELD
	BACKFIELD
RETURN

//========< KEYPROC KEY.FIND >=================================================


//========< KEYPROC KEY.SAVE >=================================================

KEYPROC KEY.SAVE
     [REF_SCR]   RETURN SAVE_REF_QUES
     [MON_SCR]   RETURN QUES_MONTHS
     [DIV_SCR]   RETURN SAVE_DIV_QUES
     [BANKSCR]   RETURN SAVE_BANK_QUES
ENTAGAIN
RETURN

//========< KEYPROC KEY.DELETE >===============================================


KEYPROC KEY.DELETE
     [DIV_SCR] IF STATUS DIVISION BEGIN
	   IF DIVISION.ACCOUNTS GT 0 BEGIN
	       ERROR 125 'PRESS ANY KEY'
	       INKEY ANSW
	       CLEARWARNING
	       CLEARFORM
	       CLEAR DIVISION
	       RETURN MASTER_DIV
	     END
       START_DIV_DEL:
	    GOTOXY 24 0
	     SHOW ' Are You Sure You Want To Delete This Division (Y/N). ?'
	    GOTOXY 24 56
	    MOVE '' TO ANSW
	    UPPERCASE ANSW
	    IF ANSW EQ 'Y' BEGIN
	       CLEARXY 24 0
	       DELETE DIVISION
	       CLEARFORM SCRDIV
	      END
	    IF ANSW EQ 'N' CLEARXY 24 0
	    IF ~ ANSW IN 'YN' GOTO START_DIV_DEL
	  END
       [BANKSCR] IF STATUS BANK BEGIN
	   IF BANK.CURRENT_BAL GT (0) BEGIN
	      PAGE NOBANK1    
	      INKEY ANSW
	      RETURN TOP_BANK
	   END
	   IF BANK.CURRENT_BAL EQ (0) BEGIN
	      PAGE NOBANK2
	      REPEAT
	      DISPLAY 'N' TO NOBANK2.1
	      ACCEPT NOBANK2.1
	      IF ~ NOBANK2.1 IN 'YN' LOOP
	      IF NOBANK2.1 EQ 'Y' BEGIN
		  DELETE BANK
		  CLEAR BANK
		  CLEARFORM SCRBANK.1 THRU SCRBANK.13
		  RETURN MASTER_BANK
	      END
	      IF NOBANK2.1 EQ 'N' RETURN TOP_BANK
	   END
	END

	   

ENTAGAIN
RETURN


//=========< keyProc Key.Clear >===============================================


KEYPROC KEY.CLEAR
   [REP_SCR] BEGIN
	CLEARFORM SELECTREP
	RETURN REP_REPORT_QUES
      END
   [LST_SCR]  BEGIN
	CLEARFORM SCRLST
	RETURN REPORT_LIST
       END
   [REF_SCR]  RETURN TOP_REF
   [RPT_SCR]  RETURN START_CONTROL
   [DIV_SCR]  BEGIN
	 CLEARFORM SCRDIV
	 RETURN MASTER_DIV
       END
ENTAGAIN

RETURN

//=========< KEYPROC KEY.NEXT >================================================

KEYPROC KEY.NEXT

      [DIV_SCR] IF STATUS DIVISION BEGIN
	  FIND GT DIVISION BY INDEX.1
	  [FINDERR] BEGIN
	      ERROR 129 'END OF FILE'
	      GOSUB TIME_DELAY
	      CLEARWARNING
	    END
	  [FOUND] ENTDISPLAY DIVISION
	  RETURN TOP_DIV
	 END
      [DIV_SCR] IF ~ STATUS DIVISION BEGIN
	  FIND GE DIVISION BY INDEX.1
	  [FINDERR] BEGIN
	       ERROR 129 'END OF FILE'
	       GOSUB TIME_DELAY
	       CLEARWARNING
	      END
	  [FOUND] ENTDISPLAY DIVISION
	  RETURN TOP_DIV
	 END

      [BANKSCR] IF STATUS BANK BEGIN
	 FIND GT BANK BY INDEX.1
	 [FINDERR] BEGIN
	      ERROR 129 'END OF FILE'
	      GOSUB TIME_DELAY
	      CLEARWARNING
	    END
	 [FOUND] ENTDISPLAY BANK
	 RETURN TOP_BANK
       END
       [BANKSCR] IF ~ STATUS BANK BEGIN
	  FIND GE BANK BY INDEX.1
	  [FINDERR] BEGIN
	      ERROR 129 'END OF FILE'
	      GOSUB TIME_DELAY
	      CLEARWARNING
	    END
	   [FOUND] ENTDISPLAY BANK
	    RETURN TOP_BANK
	 END


ENTAGAIN
RETURN

//=========< KEYPROC KEY.PREVIOUS >============================================

KEYPROC KEY.PREVIOUS

      [DIV_SCR]  IF STATUS DIVISION BEGIN
	      FIND LT DIVISION BY INDEX.1
	      [FOUND] ENTDISPLAY DIVISION
	      [FINDERR] BEGIN
		    ERROR 129 'END OF FILE'
		    GOSUB TIME_DELAY
		    CLEARWARNING
		  END
	      END
      [DIV_SCR] IF ~ STATUS DIVISION BEGIN
	      FIND LE DIVISION BY INDEX.1
	      [FOUND] ENTDISPLAY DIVISION
	      [FINDERR]  BEGIN
		    ERROR 129 'END OF FILE'
		    GOSUB TIME_DELAY
		END
	     END

       
      [BANKSCR] IF STATUS BANK BEGIN
	 FIND LT BANK BY INDEX.1
	 [FINDERR] BEGIN
	      ERROR 129 'END OF FILE'
	      GOSUB TIME_DELAY
	      CLEARWARNING
	    END
	 [FOUND] ENTDISPLAY BANK
	 RETURN TOP_BANK
       END
       [BANKSCR] IF ~ STATUS BANK BEGIN
	  FIND LE BANK BY INDEX.1
	  [FINDERR] BEGIN
	      ERROR 129 'END OF FILE'
	      GOSUB TIME_DELAY
	      CLEARWARNING
	    END
	   [FOUND] ENTDISPLAY BANK
	    RETURN TOP_BANK
	 END


ENTAGAIN
RETURN

//=========< KEYPROC KEY.UP >==================================================

KEYPROC KEY.UP
ENTAGAIN
RETURN

//=========< KEYPROC KEY.DOWN >================================================

KEYPROC KEY.DOWN
ENTAGAIN
RETURN

//=========< KEYPROC KEY.PRINT >===============================================

KEYPROC KEY.PRINT
ENTAGAIN
RETURN

//==========< KEYPROC KEY.USER >===============================================

KEYPROC KEY.USER
ENTAGAIN
RETURN

//===========< KEYPROC KEY.USER2 >=============================================

KEYPROC KEY.USER2
ENTAGAIN
RETURN
