//************************************************************************
//
// Confidential Trade Secret.
// Copyright 1987-1992 Data Access Corporation, Miami FL, USA
// All Rights reserved
// DataFlex is a registered trademark of Data Access Corporation.
//
//
//     $Source: k:\RCS\.\pkg\brdcster.pkg,v $
//     $Revision: 1 $
//     $State: Exp $
//     $Author: james $
//     $Locker:  $
//
//     $Log: brdcster.pkg,v $
//Revision 2.1  1993/08/25  17:47:13  james
//Adding new main branch
//
//Revision 1.2  1993/04/28  00:20:34  james
//Initializing 3.04 source code.
//
//Revision 1.1  1992/09/08  14:43:02  james
//Initial revision
//
//Revision 1.3  92/05/14  16:54:09  SWM
//Updated Copyright slug.
//
//Revision 1.2  92/03/09  19:00:31  james
//Added #CHKSUB directive to insure source
//only compiled with correct revision of 
//compiler.
//
//Revision 1.1  91/10/23  10:19:40  elsa
//Initial revision
//
//************************************************************************/

//************************************************************************
//     File Name: Brdcster.Pkg
// Creation Date: January 1, 1991
// Modified Date: May 23, 1991
//     Author(s): Steven A. Lowe
//
// This module contains the Broadcaster class definition.
//
// A Broadcaster is a set of object identifiers which receive messages as
// a group; to send a message to all of the objects in a Broadcaster, just
// send the message to the broadcaster with its Broadcast_State set to
// TRUE.
//************************************************************************/


#CHKSUB 1 1 // Verify the UI subsystem.

use ui
Use Set


//
// Description
//
//   This class is defined as a subclass of Set with a C language handler
//   providing additional behavior.
//
// Assumptions/Preconditions
//
//   None.
//
// Exceptions
//
//   None.
//
// Notes
//
//   None.
//
class Broadcaster is a Set 0 0 Broadcast_Handler
end_Class


//
// Description
//
//   This function returns the id of a newly-created Broadcaster object.
//
// Assumptions/Preconditions
//
//   None.
//
// Exceptions
//
//   None.
//
// Notes
//
//   None.
//
function make_broadcaster FOR DESKTOP returns integer
  local integer obj#
  object broadcasterTemplate is a broadcaster
    move current_object to obj#
  end_object
  function_return obj#
end_function

